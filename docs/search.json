[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "はじめに",
    "section": "",
    "text": "はじめに\n松浦プレゼミへようこそ。\nこのウェブ資料は、2023年度秋学期に開講される「プレゼミ」のための学習用教材です。 このプレゼミの目的は、3〜4年次に所属する専門演習(以下、ゼミ)で執筆するであろう卒業論文を、いわゆる「実証研究」といわれる研究論文として書くために、必要な基礎知識を提供することです。 つまり、一見複雑でバラバラにみえる経営活動でも、実はその実務が生じている背景には何らかの法則があるはずで、その法則を大規模データを分析することで明らかにし、\n\nなぜあの会社は〇〇なのに、こっちの会社は△△なのか？\n\nといった経営現象が生じる因果関係を説明し、これから起こるであろう経営現象を予測するための理論を構築する、いわゆる事実解明的研究(positive research)を行うことができるようになることを目指します。\n会計を専門とする学生以外もいることを想定し、どの分野のゼミに入っても役立つように、プレゼミを通じて広く統計学や計量経済学の知識を習得し、その統計分析をプログラミング言語Rを使って実装できるようになることが、プレゼミの最終目標です。\nさあ，たった15回約4ヶ月のプレゼミですが、少人数のクラスならではの濃密なインタラクティブな講義を通じて、データ分析が得意分野といえる経営学生として、活躍するためのスキルを身につけましょう。\nこのプレゼミの担当教員は、立命館大学経営学部で「会計制度論」を担当する松浦総一です。専門は財務会計・税務会計で、実証的な研究に取り組んでいます。 利益マネジメント(earnings management)や税負担削減行動(tax avoidance)といった経営者による裁量的な会計行動の実態を、経済学的な視点から定量的に分析することに関心を持っています。"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "presemi2023_09.html",
    "href": "presemi2023_09.html",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "前章では2変数の関係を表すために散布図を作り，相関係数を求めましたが，この章では，背後にモデルとして原因と結果の関係をもつと仮定し，そのモデルを表すために直線を当てはめる回帰分析について学びます．\n分析に使うデータとして，2006年から2022年の東京証券取引所のプライム市場に上場している会社の決算データを使います。 売上高と広告宣伝費や研究開発費の関係を分析するために，研究開発費が1億円以上，広告宣伝費が1000万円以上の会社に限定し，決算月数が12ヶ月の会社を対象にします。\n\ndf &lt;- read_csv(\"data/adv_2023.csv\") # データの読み込み\ndf &lt;- df %&gt;%\n  filter( # 以下の条件でデータを絞り込む\n    決算月数 == 12 & # 12ヶ月決算企業で，\n    研究開発費 &gt;= 100 & # 研究開発費が1億円以上で，\n    広告宣伝費 &gt; 10) # 広告宣伝費が1000万円以上\nglimpse(df)\n\nRows: 4,442\nColumns: 14\n$ 日経会社コード &lt;chr&gt; \"0000001\", \"0000001\", \"0000003\", \"0000003\", \"0000003\", …\n$ 企業名称       &lt;chr&gt; \"極洋\", \"極洋\", \"日本水産\", \"日本水産\", \"日本水産\", \"日…\n$ 決算期         &lt;chr&gt; \"2006/03\", \"2007/03\", \"2006/03\", \"2007/03\", \"2008/03\", …\n$ 決算種別       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 業種           &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341, 235341, 235341,…\n$ 資産合計       &lt;dbl&gt; 65049, 66459, 384819, 404173, 396739, 385462, 383924, 4…\n$ 売上高         &lt;dbl&gt; 152899, 157088, 539653, 552871, 533970, 505250, 481574,…\n$ 販管費         &lt;dbl&gt; 13702, 14455, 95566, 98200, 100394, 98413, 99938, 10490…\n$ 広告宣伝費     &lt;dbl&gt; 304, 279, 2699, 2569, 2953, 2568, 2636, 3160, 3009, 288…\n$ 拡販費         &lt;dbl&gt; 111, 158, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 研究開発費     &lt;dbl&gt; 193, 188, 3083, 3377, 3718, 3803, 3994, 4499, 4809, 361…\n$ 設備投資額     &lt;dbl&gt; 897, 1841, 17186, 16031, 19105, 28872, 21121, 18633, 16…\n\n\nでは売上高と広告宣伝費の散布図を書いてみます。 ggplot2パッケージを使って散布図を書くには、ggplot()関数とgeom_poin()関数を使います。\n\ng &lt;- ggplot(df) + aes(x = 広告宣伝費, y = 売上高) +\n  geom_point() + mystyle\nprint(g)\n\n\n\n\n散布図を見ると，売上高も広告宣伝費もばらつきが大きいので，とりあえず対数変換してみます。 新しい変数を作るので、dplyrパッケージのmutate()関数を使います。 また自然対数を求めるには、log()関数を使います。\n\ndf &lt;- df %&gt;%\n  mutate(\n    log_広告宣伝費 = log(広告宣伝費), #広告宣伝費の自然対数\n    log_売上高 = log(売上高), #売上高の対数\n    log_研究開発費 = log(研究開発費) # 研究開発費の対数\n  )\nglimpse(df)\n\nRows: 4,442\nColumns: 17\n$ 日経会社コード &lt;chr&gt; \"0000001\", \"0000001\", \"0000003\", \"0000003\", \"0000003\", …\n$ 企業名称       &lt;chr&gt; \"極洋\", \"極洋\", \"日本水産\", \"日本水産\", \"日本水産\", \"日…\n$ 決算期         &lt;chr&gt; \"2006/03\", \"2007/03\", \"2006/03\", \"2007/03\", \"2008/03\", …\n$ 決算種別       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 業種           &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341, 235341, 235341,…\n$ 資産合計       &lt;dbl&gt; 65049, 66459, 384819, 404173, 396739, 385462, 383924, 4…\n$ 売上高         &lt;dbl&gt; 152899, 157088, 539653, 552871, 533970, 505250, 481574,…\n$ 販管費         &lt;dbl&gt; 13702, 14455, 95566, 98200, 100394, 98413, 99938, 10490…\n$ 広告宣伝費     &lt;dbl&gt; 304, 279, 2699, 2569, 2953, 2568, 2636, 3160, 3009, 288…\n$ 拡販費         &lt;dbl&gt; 111, 158, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 研究開発費     &lt;dbl&gt; 193, 188, 3083, 3377, 3718, 3803, 3994, 4499, 4809, 361…\n$ 設備投資額     &lt;dbl&gt; 897, 1841, 17186, 16031, 19105, 28872, 21121, 18633, 16…\n$ log_広告宣伝費 &lt;dbl&gt; 5.717028, 5.631212, 7.900637, 7.851272, 7.990577, 7.850…\n$ log_売上高     &lt;dbl&gt; 11.93753, 11.96456, 13.19868, 13.22288, 13.18809, 13.13…\n$ log_研究開発費 &lt;dbl&gt; 5.262690, 5.236442, 8.033658, 8.124743, 8.220941, 8.243…\n\n\n対数変換した売上高と広告宣伝費の関係を確認するために散布図を作成します。 ggplot()関数を使って散布図を作成するには、geom_point()を使います。\n\ng &lt;- ggplot(df) + aes(x = log_広告宣伝費, y = log_売上高) + geom_point() + mystyle\nprint(g)\n\n\n\n\n正の相関があるようにみえる散布図ができあがりました。 相関係数をcor()関数を使って計算してみると，\n\ncor(df$log_広告宣伝費, df$log_売上高)\n\n[1] 0.7530297\n\n\nとなり，非常に高い正の相関があることが分かりました。\nこの散布図に回帰直線を追加するには，geom_smoothを使います。 先ほど、散布図を作成したオブジェクトgにgeom_smooth()を追加します。 geom_smooth()関数は引数がたくさんありますが、ここではmethod = \"lm\"として、最小二乗法により推定された回帰直線を追加し、se = FALSEとすることで、回帰直線の周りの標準誤差を表す青い帯を消し、color = \"red\"とすることで赤色の線を引いています。\n\ng &lt;- g + geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +\n    xlab(\"広告宣伝費の対数\") +\n    ylab(\"売上高の対数\") + mystyle\nprint(g)\n\n\n\n\nこの赤い直線を回帰直線(regression line)といい，原因となる変数 \\(x\\) (ここでは広告宣伝費)と結果となる変数 \\(y\\) (ここでは売上高)の線形関係を表す次のようなモデルとなります。\n\\[\ny = a + bx\n\\]\n先の広告宣伝費と売上高の散布図に引いた直線だと，\n\nres01 &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\nsummary(res01)\n\n\\[\n\\text{売上高の対数} = 7.770869 + 0.550978 \\times 広告宣伝費の対数\n\\]\nとなり、広告宣伝費が1％増加すると、売上高が0.55％増加する、という関係があることが示されています。 なぜこのような解釈ができるのかは、あとで解説します。\n\n先ほどの求めた回帰直線の切片や傾きの値を求める方法の1つに最小二乗法(least squares method)があります。 最小二乗法は、観測値 \\(y_i\\) とモデル上の予測値 \\(\\hat{y}_i\\) の差を残差(residual)と定義し、この残差の二乗の和を最小にするような回帰直線を求める方法です。\nサイズ \\(N\\) の標本 \\((y_i, x_i)_{i \\in N}\\) をデータとして持っているとしましょう。 ここでは、広告宣伝費と売上高のデータが \\(N\\) 組あるということです。\nこのデータの関係を線形で表すモデルとして、\\(\\hat y = \\hat a + \\hat b x\\) を考えます。 観測値は \\(y_i = a + bx_i + e_i\\) です。 したがって、残差 \\(e_i\\) は \\(y_i - \\hat y_i\\) となります。\n\ndata &lt;- data.frame(\n  x = c(1, 2, 3, 4, 5),\n  y = c(3, 10, 9, 12, 18)\n)\nmodel &lt;- lm(y ~ x, data = data)\n\n# 回帰直線と残差を含むグラフを作成する\nggplot(data, aes(x, y)) +\n  geom_point(size = 2) +  # 散布図のプロット\n  geom_smooth(method = \"lm\", se = FALSE, fullrange = TRUE) +  # 回帰直線のプロット\n  geom_segment(aes(xend = x, yend = predict(model), color = \"Residuals\")) +  # 残差のプロット\n  labs(title = \"回帰直線と残差\", x = \"x\", y = \"y\") +  # グラフのタイトルと軸ラベル\n  scale_color_manual(values = c(\"Residuals\" = \"blue\")) + # 残差の色を指定する\n  xlim(0, 6) + ylim(0, 20) + mystyle # x軸とy軸の範囲を指定する\n\n\n\n\nこの観測値を表す点から回帰直線に向けて書かれた垂線の長さが残差\\(e\\)となります。 この二乗和を最小にするような回帰直線を求めることが最小二乗法です。 残差の二乗和は、次のように計算できます。\n\\[\n\\begin{aligned}\n\\sum_{i \\in N} e_i^2 &= \\sum_{i \\in N} (y_i - \\hat y_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\hat a - \\hat b x_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y + \\bar y - \\hat a - \\hat b x_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y)^2 + \\sum_{i \\in N} (\\bar y - \\hat a - \\hat b x_i)^2 + 2 \\sum_{i \\in N} (y_i - \\bar y)(\\bar y - \\hat a - \\hat b x_i) \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y)^2 + \\sum_{i \\in N} (\\bar y - \\hat a - \\hat b x_i)^2 + 0 \\\\\n\\end{aligned}\n\\]\nこの最小二乗法による回帰直線の傾きと切片を推定するには、lm関数を使います。 lm()関数は引数にformulaとdataを取ります。\n\n\nformula : 回帰式を指定します。y ~ xとすると、yをxで回帰します。\n\ndata : データフレームを指定します。\n\n\nres01 &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\n\n推定結果を代入したresの中を詳細に見るには、summary関数を使います。\n\nsummary(res01)\n\n\nCall:\nlm(formula = log_売上高 ~ log_広告宣伝費, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.6125 -0.7040 -0.0514  0.7580  3.5226 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    7.770869   0.056878  136.62   &lt;2e-16 ***\nlog_広告宣伝費 0.550978   0.007225   76.26   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.077 on 4440 degrees of freedom\nMultiple R-squared:  0.5671,    Adjusted R-squared:  0.567 \nF-statistic:  5815 on 1 and 4440 DF,  p-value: &lt; 2.2e-16\n\n\n重要な情報が表示されますが、いろいろ表示されすぎて見づらいので、modelsummary関数を使って見やすくします。\n\nlibrary(modelsummary)\nmodelsummary(res01)\n\n\n\n\n (1)\n\n\n\n(Intercept)\n7.771\n\n\n\n(0.057)\n\n\nlog_広告宣伝費\n0.551\n\n\n\n(0.007)\n\n\nNum.Obs.\n4442\n\n\nR2\n0.567\n\n\nR2 Adj.\n0.567\n\n\nAIC\n13272.0\n\n\nBIC\n13291.2\n\n\nLog.Lik.\n-6632.994\n\n\nF\n5815.313\n\n\nRMSE\n1.08\n\n\n\n\n\nいろいろオプションを追加して、もっと見やすい表にします。\n\nlibrary(modelsummary)\ncm  &lt;-  c(\n    \"(Intercept)\" = \"切片\", # 切片のラベルを変更する\n    \"log_広告宣伝費\" = \"対数広告宣伝費\" # 傾きのラベルを変更する\n)\nmodelsummary(res01,\n  estimate = \"{estimate}{stars}\",\n  coef_map = cm,\n  gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"),\n  stars = c('*' = .1, '**' = 0.05, '***' = .01)\n  )\n\n\n\n\n (1)\n\n\n\n切片\n7.771***\n\n\n\n(0.057)\n\n\n対数広告宣伝費\n0.551***\n\n\n\n(0.007)\n\n\nNum.Obs.\n4442\n\n\nR2\n0.567\n\n\nR2 Adj.\n0.567\n\n\n\n\n# # msummary(res01,\n# #   stars = TRUE, # p値の有意性を星で表示する\n# #   fmt = '%.2f',\n# #   coef_map = cm,\n# #   gof_omit = \"AIC|BIC|Log.Lik.\",\n# #   output = 'html'\n# )\n\nとなり、切片が\\(7.77\\)、傾きが\\(0.55\\)と推定されました。 独立変数も従属変数も対数変換をしているため、解釈としては、 広告宣伝費が\\(1\\%\\)上昇すると、売上が\\(0.55\\%\\)増加する、という統計的に正の関係があるといえます。\n\n今までは説明変数が1つだけでしたが、複数の要因が応答変数に影響を与える場合もあります。その場合は、複数の説明変数を使った重回帰分析を行います。\n\\[\ny_i = \\beta_0 + \\beta _1 x_1 + \\beta_2x_2 + e_i\n\\]\nという回帰式を考えます。 この式は、\\(x_1\\)と\\(x_2\\)の2つの説明変数が応答変数\\(y\\)に影響を与えることを表す回帰モデルとなっています。 先の例で用いたデータを使って、広告宣伝費と研究開発費が与える影響についてみてみましょう。\nまずは、単回帰と同様に、散布図と回帰平面を描いてみます。 単回帰では、説明変数が1つであったため、応答変数との関係を2次元平面上にプロットすることができましたが、今回の重回帰では説明変数2個と応答変数の関係となるため、3次元空間にプロットする必要があります。 そのため、回帰直線では無く、回帰平面を描くことになります。\n\n# install.packages(\"rgl\")\nlibrary(rgl) # 3Dグラフのパッケージ\nlibrary(knitr) # グラフの表示を操作\nknitr::knit_hooks$set(webgl = hook_webgl) # おまじない\n\n# 回帰モデルを推定する\nmodel &lt;- lm(log_売上高 ~ log_広告宣伝費 + log_研究開発費, data = df)\n\n# プロットする範囲の値を指定する\nx1_range &lt;- range(df$log_広告宣伝費)\nx2_range &lt;- range(df$log_研究開発費)\n\n# # メッシュグリッドを作成する\ngrid &lt;- expand.grid(\n  log_広告宣伝費 = seq(x1_range[1], x1_range[2], length.out = 50),\n  log_研究開発費 = seq(x2_range[1], x2_range[2], length.out = 50)\n  )\n# メッシュグリッド上での予測値を計算する\ngrid$log_売上高 &lt;- predict(model, newdata = grid)\n\n# メッシュグリッドの座標を行列に変換する\nx1_matrix &lt;- matrix(grid$log_広告宣伝費, nrow = 50)\nx2_matrix &lt;- matrix(grid$log_研究開発費, nrow = 50)\ny_matrix &lt;-  matrix(grid$log_売上高,    nrow = 50)\n\n# グラフを出力\nplot3d(df$log_広告宣伝費, df$log_研究開発費, df$log_売上高,\n xlab = \"対数広告宣伝費\", ylab = \"対数研究開発費\", zlab = \"対数売上高\"\n ) # 3D散布図を描く\nsurface3d(x1_matrix, x2_matrix, y_matrix, alpha = 0.5, color = \"red\") # 回帰平面を描く\n\n\n\n\nでは実際に会計データを使った重回帰分析を行ってみましょう。 売上高\\(y\\)を広告宣伝費\\(x_1\\)と研究開発費\\(x_2\\)で説明する、つまり\n\\[\n\\log y_i = \\beta_0 + \\beta_1 \\log x_{1,i} + \\beta_2 \\log x_{2,i} + e_i\n\\]\nという線形回帰モデルを考えます。 重回帰式の推定は、単回帰式と同様にlm関数を使い、複数の説明変数を+でつなげて指定します。\n\nres02 &lt;- lm(log_売上高 ~ log_広告宣伝費 + log_研究開発費, data = df)\nsummary(res02)\n\n\nCall:\nlm(formula = log_売上高 ~ log_広告宣伝費 + log_研究開発費, \n    data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.9369 -0.5689 -0.0217  0.5057  3.5677 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    6.298486   0.055753  112.97   &lt;2e-16 ***\nlog_広告宣伝費 0.323990   0.007583   42.73   &lt;2e-16 ***\nlog_研究開発費 0.402482   0.008479   47.47   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8775 on 4439 degrees of freedom\nMultiple R-squared:  0.7128,    Adjusted R-squared:  0.7127 \nF-statistic:  5509 on 2 and 4439 DF,  p-value: &lt; 2.2e-16\n\n\n回帰係数だけを知りたいときは、coef()関数を使うと便利です。 ここでは単回帰の例と同様に、modelsummaryパッケージを使って結果をまとめてみましょう。\n\nresults &lt;- list() # 結果を格納するリストを作成\nresults[[\"単回帰\"]] &lt;- res01 # 単回帰の結果\nresults[[\"重回帰\"]] &lt;- res02 # 重回帰の結果\n\nmodelsummary(results, # 結果を表にして出力\n  stars = TRUE, # p値の有意性を星で表示する\n  fmt = '%.2f', # 小数点以下2桁で表示する\n  gof_omit = \"AIC|BIC|Log.Lik.\", # 不要な指標を除去\n  output = 'html' # 出力形式をhtmlにする\n  )\n\n\n\n\n単回帰\n重回帰\n\n\n\n(Intercept)\n7.77***\n6.30***\n\n\n\n(0.06)\n(0.06)\n\n\nlog_広告宣伝費\n0.55***\n0.32***\n\n\n\n(0.01)\n(0.01)\n\n\nlog_研究開発費\n\n0.40***\n\n\n\n\n(0.01)\n\n\nNum.Obs.\n4442\n4442\n\n\nR2\n0.567\n0.713\n\n\nR2 Adj.\n0.567\n0.713\n\n\nF\n5815.313\n5509.365\n\n\nRMSE\n1.08\n0.88\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n広告宣伝費の対数の回帰係数が、単回帰のときの\\(0.55\\)から\\(0.32\\)に減少しています。 これは、研究開発費の対数が追加されたことで、広告宣伝費が売上高を説明する部分が減少したことを意味します。 そして、研究開発費の対数の回帰係数は\\(0.40\\)となっており、広告宣伝費とともに統計的に有意な値となっています。 つまり、研究開発費も売上高を説明する要因となっていることがわかります。\n\n単回帰と重回帰の違いを、実際にデータを使って確認してみましょう。 つまり、以下の3つの回帰モデルの関係について考えてみます。\n\\[\n\\begin{aligned}\ny &= \\beta_0 + \\beta _1 x_1 + \\beta _2 x_2 + e\\\\\ny &= \\alpha_0 + \\alpha _1 x_1 + e_1\\\\\ny &= \\gamma_0 + \\gamma _1 x_2 + e_2\n\\end{aligned}\n\\]\nこのとき、\\(\\beta_1 = \\alpha_1\\)と\\(\\beta_2 = \\gamma_1\\)でとなるのでしょうか？ やってみましょう。\nまず、研究開発費の対数を説明変数として、売上高の対数を目的変数として回帰分析を行います。\n\nres03 &lt;- lm(log_売上高 ~ log_研究開発費, data = df)\n\nこれをmodelsummaryパッケージを使ってまとめてみましょう。\n\nresults &lt;- list()\nresults[[\"単回帰1\"]] &lt;- res01 # 単回帰の結果\nresults[[\"単回帰2\"]] &lt;- res03 # 単回帰の結果\nresults[[\"重回帰\"]] &lt;- res02 # 単回帰の結果\nmodelsummary(results, # 結果を表にして出力\n  stars = TRUE, # p値の有意性を星で表示する\n  fmt = '%.3f', # 小数点以下3桁で表示する\n  gof_omit = \"AIC|BIC|Log.Lik.\", # 不要な指標を除去\n  output = 'html' # 出力形式をhtmlにする\n  )\n\n\n\n\n単回帰1\n 単回帰2\n重回帰\n\n\n\n(Intercept)\n7.771***\n6.936***\n6.298***\n\n\n\n(0.057)\n(0.064)\n(0.056)\n\n\nlog_広告宣伝費\n0.551***\n\n0.324***\n\n\n\n(0.007)\n\n(0.008)\n\n\nlog_研究開発費\n\n0.631***\n0.402***\n\n\n\n\n(0.008)\n(0.008)\n\n\nNum.Obs.\n4442\n4442\n4442\n\n\nR2\n0.567\n0.595\n0.713\n\n\nR2 Adj.\n0.567\n0.595\n0.713\n\n\nF\n5815.313\n6515.603\n5509.365\n\n\nRMSE\n1.08\n1.04\n0.88\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n\n\\(\\beta_1 = \\alpha_1\\)と\\(\\beta_2 = \\gamma_1\\)にはなっていないようです。 なぜでしょう？ それは、重回帰分析の係数は、他の変数を一定としたときのある説明変数が応答変数に与える影響の強さ、なので、単回帰ごとの結果と重回帰の結果は異なります。 そのことを確認するために、研究開発費と広告宣伝費の散布図を描いてみましょう。\n\nggplot(df) + aes(x = log_広告宣伝費, y = log_研究開発費) + geom_point() + mystyle\n\n\n\n\n研究開発費と広告宣伝費の間には、やや強い相関があるようです。相関係数は、0.6306058となります。\nこの関係を前提として，単回帰分析の結果から重回帰分析の結果を導出してみます。 この方法を回帰解剖(regression anatomy)といいます。\nまず，売上高の対数を広告宣伝費の対数で回帰した結果から回帰誤差を得ます。回帰残差を取り出すには、residuals()関数を使います。 この回帰誤差は，売上高の変動のうち，広告宣伝費とは関係ない部分といえます。\n\nres &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\nresid_sale &lt;- residuals(res)\n\n売上高の自然対数を広告宣伝費の自然対数で回帰した残差をresid_saleに代入しました。 次に，広告宣伝費を研究開発費で回帰します。 基本関数lm()\n\nres_adv = lm(log_研究開発費 ~ log_広告宣伝費 , data = df)\ncoef(res_adv)\n\n   (Intercept) log_広告宣伝費 \n     3.6582599      0.5639725 \n\n\nこの結果の残差は、研究開発費の対数の変動のうち、広告宣伝費の対数が説明できていない部分です。 つまり広告宣伝費のうち、研究開発費とは関係のない部分となります。 回帰残差を取り出すには、residuals()関数を使います。\n\nresid_adv &lt;- residuals(res_adv) # 残差を抽出\nplot(resid_adv) # 残差をプロット\n\n\n\n\n売上高の変動のうち広告宣伝費とは関係ない部分である残差resid_saleを，研究開発費の変動の内広告宣伝費とは関係のない部分である残差resid_advで回帰します。\n\nres_ee &lt;- lm(resid_sale ~ resid_adv) # 残差で残差を推定\nround(coef(res_ee), digits = 3) # 回帰係数を丸めて表示\n\n(Intercept)   resid_adv \n      0.000       0.402 \n\n\nこのresid_advの回帰係数をみると，\\(0.402\\)となっており，前に計算した重回帰分析の研究開発費の自然対数の回帰係数と一致しております。\nつまり，重回帰分析の係数とは，複数の説明変数の中で，他の説明変数とは関係の無い部分が，応答変数と他の説明変数との間の関係のない部分に与える影響の強さを表しているということです。\nここでいうと，重回帰分析における研究開発費の回帰係数の意味するところは，研究開発費の変動のうち広告宣伝費とは関係ない部分が，応答変数の変動のうち広告宣伝費とは関係の無い部分に与える影響，を意味しています。\n\n重回帰分析の結果を見ると、\\(R^2\\)という値が表示されています。 これは、決定係数と呼ばれる値で、回帰モデルの当てはまりの良さを表す指標の1つです。 定義については覚えなくてもよいですが，おおよそ次のようになっています。\n\\[\n\\begin{aligned}\nR^2 &= \\frac{\\text{回帰変動}}{\\text{全変動}}\\\\\n&= \\frac{\\sum_{i \\in N} (\\hat y_i - \\bar y)^2}{\\sum_{i \\in N} (y_i - \\bar y)^2}\\\\\n&= 1 - \\frac{\\sum_{i \\in N} e_i^2}{\\sum_{i \\in N} (y_i - \\bar y)^2}\n\\end{aligned}\n\\] ここで\\(\\hat y\\)は予測値(モデルの値)，\\(\\bar y\\)は平均値，\\(e\\)は残差です。 つまり決定係数\\(R^2\\)とは，回帰モデルと平均値の差である回帰変動(\\(\\hat y_i - \\bar y\\))と観測値\\(y_i\\)と平均値の差である全変動(\\(y_i - \\bar y\\))との比であり， これが1に近い，つまり回帰変動と全変動が一致している程度が高いとき，回帰モデルがデータによく当てはまっているといえます。\n決定係数について，以下の点くらいは覚えておくとよいでしょう。\n\n決定係数は、0から1の値をとります。\n\n決定係数は、説明変数の数が増えると必ず増加するので，重回帰分析では修正決定係数を使うことが多いです。\n\n決定係数が1に近いほど、回帰モデルがデータによく当てはまっていることを表しますが，どれほど高いと良いかの目安はありません。\n決定係数は検定統計量ではないため，すべての回帰係数がゼロであるという帰無仮説を検定する\\(F\\)統計量でモデルの有意性を判断します。\n決定係数以外にも，赤池情報量規準やベイズ情報量規準などの指標もありますが，今回は後者の2つは扱いません。\n\n\n会計データの中から従属変数と独立変数を決めて，回帰モデルを作る。\n会計データを使って，回帰モデルを推定し，回帰係数とt値，p値の値を求め，表にする。\n決定係数を確認し，その回帰モデルの説明力を評価する。\n回帰モデルの推定結果を解釈し，そこから何が主張できるのかを記述する。\n\n\n\n従属変数と独立変数を決めるには，とりあえず散布図を描いてみるとよいでしょう。\n回帰モデルの推定は，基本関数lm()を使います。\n各種統計量を示す表を作るには，modelsummaryパッケージのmodelsummary()関数を使います。\n回帰モデルの推定結果の回帰係数の値とp値を見て，統計的有意性を確認し，その意味を考えてみましょう。"
  },
  {
    "objectID": "presemi2023_09.html#線形回帰-散布図への直線の当てはめ",
    "href": "presemi2023_09.html#線形回帰-散布図への直線の当てはめ",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "前章では2変数の関係を表すために散布図を作り，相関係数を求めましたが，この章では，背後にモデルとして原因と結果の関係をもつと仮定し，そのモデルを表すために直線を当てはめる回帰分析について学びます．\n分析に使うデータとして，2006年から2022年の東京証券取引所のプライム市場に上場している会社の決算データを使います。 売上高と広告宣伝費や研究開発費の関係を分析するために，研究開発費が1億円以上，広告宣伝費が1000万円以上の会社に限定し，決算月数が12ヶ月の会社を対象にします。\n\ndf &lt;- read_csv(\"data/adv_2023.csv\") # データの読み込み\ndf &lt;- df %&gt;%\n  filter( # 以下の条件でデータを絞り込む\n    決算月数 == 12 & # 12ヶ月決算企業で，\n    研究開発費 &gt;= 100 & # 研究開発費が1億円以上で，\n    広告宣伝費 &gt; 10) # 広告宣伝費が1000万円以上\nglimpse(df)\n\nRows: 4,442\nColumns: 14\n$ 日経会社コード &lt;chr&gt; \"0000001\", \"0000001\", \"0000003\", \"0000003\", \"0000003\", …\n$ 企業名称       &lt;chr&gt; \"極洋\", \"極洋\", \"日本水産\", \"日本水産\", \"日本水産\", \"日…\n$ 決算期         &lt;chr&gt; \"2006/03\", \"2007/03\", \"2006/03\", \"2007/03\", \"2008/03\", …\n$ 決算種別       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 業種           &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341, 235341, 235341,…\n$ 資産合計       &lt;dbl&gt; 65049, 66459, 384819, 404173, 396739, 385462, 383924, 4…\n$ 売上高         &lt;dbl&gt; 152899, 157088, 539653, 552871, 533970, 505250, 481574,…\n$ 販管費         &lt;dbl&gt; 13702, 14455, 95566, 98200, 100394, 98413, 99938, 10490…\n$ 広告宣伝費     &lt;dbl&gt; 304, 279, 2699, 2569, 2953, 2568, 2636, 3160, 3009, 288…\n$ 拡販費         &lt;dbl&gt; 111, 158, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 研究開発費     &lt;dbl&gt; 193, 188, 3083, 3377, 3718, 3803, 3994, 4499, 4809, 361…\n$ 設備投資額     &lt;dbl&gt; 897, 1841, 17186, 16031, 19105, 28872, 21121, 18633, 16…\n\n\nでは売上高と広告宣伝費の散布図を書いてみます。 ggplot2パッケージを使って散布図を書くには、ggplot()関数とgeom_poin()関数を使います。\n\ng &lt;- ggplot(df) + aes(x = 広告宣伝費, y = 売上高) +\n  geom_point() + mystyle\nprint(g)\n\n\n\n\n散布図を見ると，売上高も広告宣伝費もばらつきが大きいので，とりあえず対数変換してみます。 新しい変数を作るので、dplyrパッケージのmutate()関数を使います。 また自然対数を求めるには、log()関数を使います。\n\ndf &lt;- df %&gt;%\n  mutate(\n    log_広告宣伝費 = log(広告宣伝費), #広告宣伝費の自然対数\n    log_売上高 = log(売上高), #売上高の対数\n    log_研究開発費 = log(研究開発費) # 研究開発費の対数\n  )\nglimpse(df)\n\nRows: 4,442\nColumns: 17\n$ 日経会社コード &lt;chr&gt; \"0000001\", \"0000001\", \"0000003\", \"0000003\", \"0000003\", …\n$ 企業名称       &lt;chr&gt; \"極洋\", \"極洋\", \"日本水産\", \"日本水産\", \"日本水産\", \"日…\n$ 決算期         &lt;chr&gt; \"2006/03\", \"2007/03\", \"2006/03\", \"2007/03\", \"2008/03\", …\n$ 決算種別       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 業種           &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341, 235341, 235341,…\n$ 資産合計       &lt;dbl&gt; 65049, 66459, 384819, 404173, 396739, 385462, 383924, 4…\n$ 売上高         &lt;dbl&gt; 152899, 157088, 539653, 552871, 533970, 505250, 481574,…\n$ 販管費         &lt;dbl&gt; 13702, 14455, 95566, 98200, 100394, 98413, 99938, 10490…\n$ 広告宣伝費     &lt;dbl&gt; 304, 279, 2699, 2569, 2953, 2568, 2636, 3160, 3009, 288…\n$ 拡販費         &lt;dbl&gt; 111, 158, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 研究開発費     &lt;dbl&gt; 193, 188, 3083, 3377, 3718, 3803, 3994, 4499, 4809, 361…\n$ 設備投資額     &lt;dbl&gt; 897, 1841, 17186, 16031, 19105, 28872, 21121, 18633, 16…\n$ log_広告宣伝費 &lt;dbl&gt; 5.717028, 5.631212, 7.900637, 7.851272, 7.990577, 7.850…\n$ log_売上高     &lt;dbl&gt; 11.93753, 11.96456, 13.19868, 13.22288, 13.18809, 13.13…\n$ log_研究開発費 &lt;dbl&gt; 5.262690, 5.236442, 8.033658, 8.124743, 8.220941, 8.243…\n\n\n対数変換した売上高と広告宣伝費の関係を確認するために散布図を作成します。 ggplot()関数を使って散布図を作成するには、geom_point()を使います。\n\ng &lt;- ggplot(df) + aes(x = log_広告宣伝費, y = log_売上高) + geom_point() + mystyle\nprint(g)\n\n\n\n\n正の相関があるようにみえる散布図ができあがりました。 相関係数をcor()関数を使って計算してみると，\n\ncor(df$log_広告宣伝費, df$log_売上高)\n\n[1] 0.7530297\n\n\nとなり，非常に高い正の相関があることが分かりました。\nこの散布図に回帰直線を追加するには，geom_smoothを使います。 先ほど、散布図を作成したオブジェクトgにgeom_smooth()を追加します。 geom_smooth()関数は引数がたくさんありますが、ここではmethod = \"lm\"として、最小二乗法により推定された回帰直線を追加し、se = FALSEとすることで、回帰直線の周りの標準誤差を表す青い帯を消し、color = \"red\"とすることで赤色の線を引いています。\n\ng &lt;- g + geom_smooth(method = \"lm\", se = FALSE, color = \"red\") +\n    xlab(\"広告宣伝費の対数\") +\n    ylab(\"売上高の対数\") + mystyle\nprint(g)\n\n\n\n\nこの赤い直線を回帰直線(regression line)といい，原因となる変数 \\(x\\) (ここでは広告宣伝費)と結果となる変数 \\(y\\) (ここでは売上高)の線形関係を表す次のようなモデルとなります。\n\\[\ny = a + bx\n\\]\n先の広告宣伝費と売上高の散布図に引いた直線だと，\n\nres01 &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\nsummary(res01)\n\n\\[\n\\text{売上高の対数} = 7.770869 + 0.550978 \\times 広告宣伝費の対数\n\\]\nとなり、広告宣伝費が1％増加すると、売上高が0.55％増加する、という関係があることが示されています。 なぜこのような解釈ができるのかは、あとで解説します。"
  },
  {
    "objectID": "presemi2023_09.html#最小二乗法",
    "href": "presemi2023_09.html#最小二乗法",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "先ほどの求めた回帰直線の切片や傾きの値を求める方法の1つに最小二乗法(least squares method)があります。 最小二乗法は、観測値 \\(y_i\\) とモデル上の予測値 \\(\\hat{y}_i\\) の差を残差(residual)と定義し、この残差の二乗の和を最小にするような回帰直線を求める方法です。\nサイズ \\(N\\) の標本 \\((y_i, x_i)_{i \\in N}\\) をデータとして持っているとしましょう。 ここでは、広告宣伝費と売上高のデータが \\(N\\) 組あるということです。\nこのデータの関係を線形で表すモデルとして、\\(\\hat y = \\hat a + \\hat b x\\) を考えます。 観測値は \\(y_i = a + bx_i + e_i\\) です。 したがって、残差 \\(e_i\\) は \\(y_i - \\hat y_i\\) となります。\n\ndata &lt;- data.frame(\n  x = c(1, 2, 3, 4, 5),\n  y = c(3, 10, 9, 12, 18)\n)\nmodel &lt;- lm(y ~ x, data = data)\n\n# 回帰直線と残差を含むグラフを作成する\nggplot(data, aes(x, y)) +\n  geom_point(size = 2) +  # 散布図のプロット\n  geom_smooth(method = \"lm\", se = FALSE, fullrange = TRUE) +  # 回帰直線のプロット\n  geom_segment(aes(xend = x, yend = predict(model), color = \"Residuals\")) +  # 残差のプロット\n  labs(title = \"回帰直線と残差\", x = \"x\", y = \"y\") +  # グラフのタイトルと軸ラベル\n  scale_color_manual(values = c(\"Residuals\" = \"blue\")) + # 残差の色を指定する\n  xlim(0, 6) + ylim(0, 20) + mystyle # x軸とy軸の範囲を指定する\n\n\n\n\nこの観測値を表す点から回帰直線に向けて書かれた垂線の長さが残差\\(e\\)となります。 この二乗和を最小にするような回帰直線を求めることが最小二乗法です。 残差の二乗和は、次のように計算できます。\n\\[\n\\begin{aligned}\n\\sum_{i \\in N} e_i^2 &= \\sum_{i \\in N} (y_i - \\hat y_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\hat a - \\hat b x_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y + \\bar y - \\hat a - \\hat b x_i)^2 \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y)^2 + \\sum_{i \\in N} (\\bar y - \\hat a - \\hat b x_i)^2 + 2 \\sum_{i \\in N} (y_i - \\bar y)(\\bar y - \\hat a - \\hat b x_i) \\\\\n&= \\sum_{i \\in N} (y_i - \\bar y)^2 + \\sum_{i \\in N} (\\bar y - \\hat a - \\hat b x_i)^2 + 0 \\\\\n\\end{aligned}\n\\]\nこの最小二乗法による回帰直線の傾きと切片を推定するには、lm関数を使います。 lm()関数は引数にformulaとdataを取ります。\n\n\nformula : 回帰式を指定します。y ~ xとすると、yをxで回帰します。\n\ndata : データフレームを指定します。\n\n\nres01 &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\n\n推定結果を代入したresの中を詳細に見るには、summary関数を使います。\n\nsummary(res01)\n\n\nCall:\nlm(formula = log_売上高 ~ log_広告宣伝費, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.6125 -0.7040 -0.0514  0.7580  3.5226 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    7.770869   0.056878  136.62   &lt;2e-16 ***\nlog_広告宣伝費 0.550978   0.007225   76.26   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.077 on 4440 degrees of freedom\nMultiple R-squared:  0.5671,    Adjusted R-squared:  0.567 \nF-statistic:  5815 on 1 and 4440 DF,  p-value: &lt; 2.2e-16\n\n\n重要な情報が表示されますが、いろいろ表示されすぎて見づらいので、modelsummary関数を使って見やすくします。\n\nlibrary(modelsummary)\nmodelsummary(res01)\n\n\n\n\n (1)\n\n\n\n(Intercept)\n7.771\n\n\n\n(0.057)\n\n\nlog_広告宣伝費\n0.551\n\n\n\n(0.007)\n\n\nNum.Obs.\n4442\n\n\nR2\n0.567\n\n\nR2 Adj.\n0.567\n\n\nAIC\n13272.0\n\n\nBIC\n13291.2\n\n\nLog.Lik.\n-6632.994\n\n\nF\n5815.313\n\n\nRMSE\n1.08\n\n\n\n\n\nいろいろオプションを追加して、もっと見やすい表にします。\n\nlibrary(modelsummary)\ncm  &lt;-  c(\n    \"(Intercept)\" = \"切片\", # 切片のラベルを変更する\n    \"log_広告宣伝費\" = \"対数広告宣伝費\" # 傾きのラベルを変更する\n)\nmodelsummary(res01,\n  estimate = \"{estimate}{stars}\",\n  coef_map = cm,\n  gof_map = c(\"nobs\", \"r.squared\", \"adj.r.squared\"),\n  stars = c('*' = .1, '**' = 0.05, '***' = .01)\n  )\n\n\n\n\n (1)\n\n\n\n切片\n7.771***\n\n\n\n(0.057)\n\n\n対数広告宣伝費\n0.551***\n\n\n\n(0.007)\n\n\nNum.Obs.\n4442\n\n\nR2\n0.567\n\n\nR2 Adj.\n0.567\n\n\n\n\n# # msummary(res01,\n# #   stars = TRUE, # p値の有意性を星で表示する\n# #   fmt = '%.2f',\n# #   coef_map = cm,\n# #   gof_omit = \"AIC|BIC|Log.Lik.\",\n# #   output = 'html'\n# )\n\nとなり、切片が\\(7.77\\)、傾きが\\(0.55\\)と推定されました。 独立変数も従属変数も対数変換をしているため、解釈としては、 広告宣伝費が\\(1\\%\\)上昇すると、売上が\\(0.55\\%\\)増加する、という統計的に正の関係があるといえます。"
  },
  {
    "objectID": "presemi2023_09.html#単回帰と重回帰",
    "href": "presemi2023_09.html#単回帰と重回帰",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "今までは説明変数が1つだけでしたが、複数の要因が応答変数に影響を与える場合もあります。その場合は、複数の説明変数を使った重回帰分析を行います。\n\\[\ny_i = \\beta_0 + \\beta _1 x_1 + \\beta_2x_2 + e_i\n\\]\nという回帰式を考えます。 この式は、\\(x_1\\)と\\(x_2\\)の2つの説明変数が応答変数\\(y\\)に影響を与えることを表す回帰モデルとなっています。 先の例で用いたデータを使って、広告宣伝費と研究開発費が与える影響についてみてみましょう。\nまずは、単回帰と同様に、散布図と回帰平面を描いてみます。 単回帰では、説明変数が1つであったため、応答変数との関係を2次元平面上にプロットすることができましたが、今回の重回帰では説明変数2個と応答変数の関係となるため、3次元空間にプロットする必要があります。 そのため、回帰直線では無く、回帰平面を描くことになります。\n\n# install.packages(\"rgl\")\nlibrary(rgl) # 3Dグラフのパッケージ\nlibrary(knitr) # グラフの表示を操作\nknitr::knit_hooks$set(webgl = hook_webgl) # おまじない\n\n# 回帰モデルを推定する\nmodel &lt;- lm(log_売上高 ~ log_広告宣伝費 + log_研究開発費, data = df)\n\n# プロットする範囲の値を指定する\nx1_range &lt;- range(df$log_広告宣伝費)\nx2_range &lt;- range(df$log_研究開発費)\n\n# # メッシュグリッドを作成する\ngrid &lt;- expand.grid(\n  log_広告宣伝費 = seq(x1_range[1], x1_range[2], length.out = 50),\n  log_研究開発費 = seq(x2_range[1], x2_range[2], length.out = 50)\n  )\n# メッシュグリッド上での予測値を計算する\ngrid$log_売上高 &lt;- predict(model, newdata = grid)\n\n# メッシュグリッドの座標を行列に変換する\nx1_matrix &lt;- matrix(grid$log_広告宣伝費, nrow = 50)\nx2_matrix &lt;- matrix(grid$log_研究開発費, nrow = 50)\ny_matrix &lt;-  matrix(grid$log_売上高,    nrow = 50)\n\n# グラフを出力\nplot3d(df$log_広告宣伝費, df$log_研究開発費, df$log_売上高,\n xlab = \"対数広告宣伝費\", ylab = \"対数研究開発費\", zlab = \"対数売上高\"\n ) # 3D散布図を描く\nsurface3d(x1_matrix, x2_matrix, y_matrix, alpha = 0.5, color = \"red\") # 回帰平面を描く"
  },
  {
    "objectID": "presemi2023_09.html#会計データを使った重回帰",
    "href": "presemi2023_09.html#会計データを使った重回帰",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "では実際に会計データを使った重回帰分析を行ってみましょう。 売上高\\(y\\)を広告宣伝費\\(x_1\\)と研究開発費\\(x_2\\)で説明する、つまり\n\\[\n\\log y_i = \\beta_0 + \\beta_1 \\log x_{1,i} + \\beta_2 \\log x_{2,i} + e_i\n\\]\nという線形回帰モデルを考えます。 重回帰式の推定は、単回帰式と同様にlm関数を使い、複数の説明変数を+でつなげて指定します。\n\nres02 &lt;- lm(log_売上高 ~ log_広告宣伝費 + log_研究開発費, data = df)\nsummary(res02)\n\n\nCall:\nlm(formula = log_売上高 ~ log_広告宣伝費 + log_研究開発費, \n    data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.9369 -0.5689 -0.0217  0.5057  3.5677 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    6.298486   0.055753  112.97   &lt;2e-16 ***\nlog_広告宣伝費 0.323990   0.007583   42.73   &lt;2e-16 ***\nlog_研究開発費 0.402482   0.008479   47.47   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8775 on 4439 degrees of freedom\nMultiple R-squared:  0.7128,    Adjusted R-squared:  0.7127 \nF-statistic:  5509 on 2 and 4439 DF,  p-value: &lt; 2.2e-16\n\n\n回帰係数だけを知りたいときは、coef()関数を使うと便利です。 ここでは単回帰の例と同様に、modelsummaryパッケージを使って結果をまとめてみましょう。\n\nresults &lt;- list() # 結果を格納するリストを作成\nresults[[\"単回帰\"]] &lt;- res01 # 単回帰の結果\nresults[[\"重回帰\"]] &lt;- res02 # 重回帰の結果\n\nmodelsummary(results, # 結果を表にして出力\n  stars = TRUE, # p値の有意性を星で表示する\n  fmt = '%.2f', # 小数点以下2桁で表示する\n  gof_omit = \"AIC|BIC|Log.Lik.\", # 不要な指標を除去\n  output = 'html' # 出力形式をhtmlにする\n  )\n\n\n\n\n単回帰\n重回帰\n\n\n\n(Intercept)\n7.77***\n6.30***\n\n\n\n(0.06)\n(0.06)\n\n\nlog_広告宣伝費\n0.55***\n0.32***\n\n\n\n(0.01)\n(0.01)\n\n\nlog_研究開発費\n\n0.40***\n\n\n\n\n(0.01)\n\n\nNum.Obs.\n4442\n4442\n\n\nR2\n0.567\n0.713\n\n\nR2 Adj.\n0.567\n0.713\n\n\nF\n5815.313\n5509.365\n\n\nRMSE\n1.08\n0.88\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n広告宣伝費の対数の回帰係数が、単回帰のときの\\(0.55\\)から\\(0.32\\)に減少しています。 これは、研究開発費の対数が追加されたことで、広告宣伝費が売上高を説明する部分が減少したことを意味します。 そして、研究開発費の対数の回帰係数は\\(0.40\\)となっており、広告宣伝費とともに統計的に有意な値となっています。 つまり、研究開発費も売上高を説明する要因となっていることがわかります。"
  },
  {
    "objectID": "presemi2023_09.html#単回帰と重回帰の違い",
    "href": "presemi2023_09.html#単回帰と重回帰の違い",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "単回帰と重回帰の違いを、実際にデータを使って確認してみましょう。 つまり、以下の3つの回帰モデルの関係について考えてみます。\n\\[\n\\begin{aligned}\ny &= \\beta_0 + \\beta _1 x_1 + \\beta _2 x_2 + e\\\\\ny &= \\alpha_0 + \\alpha _1 x_1 + e_1\\\\\ny &= \\gamma_0 + \\gamma _1 x_2 + e_2\n\\end{aligned}\n\\]\nこのとき、\\(\\beta_1 = \\alpha_1\\)と\\(\\beta_2 = \\gamma_1\\)でとなるのでしょうか？ やってみましょう。\nまず、研究開発費の対数を説明変数として、売上高の対数を目的変数として回帰分析を行います。\n\nres03 &lt;- lm(log_売上高 ~ log_研究開発費, data = df)\n\nこれをmodelsummaryパッケージを使ってまとめてみましょう。\n\nresults &lt;- list()\nresults[[\"単回帰1\"]] &lt;- res01 # 単回帰の結果\nresults[[\"単回帰2\"]] &lt;- res03 # 単回帰の結果\nresults[[\"重回帰\"]] &lt;- res02 # 単回帰の結果\nmodelsummary(results, # 結果を表にして出力\n  stars = TRUE, # p値の有意性を星で表示する\n  fmt = '%.3f', # 小数点以下3桁で表示する\n  gof_omit = \"AIC|BIC|Log.Lik.\", # 不要な指標を除去\n  output = 'html' # 出力形式をhtmlにする\n  )\n\n\n\n\n単回帰1\n 単回帰2\n重回帰\n\n\n\n(Intercept)\n7.771***\n6.936***\n6.298***\n\n\n\n(0.057)\n(0.064)\n(0.056)\n\n\nlog_広告宣伝費\n0.551***\n\n0.324***\n\n\n\n(0.007)\n\n(0.008)\n\n\nlog_研究開発費\n\n0.631***\n0.402***\n\n\n\n\n(0.008)\n(0.008)\n\n\nNum.Obs.\n4442\n4442\n4442\n\n\nR2\n0.567\n0.595\n0.713\n\n\nR2 Adj.\n0.567\n0.595\n0.713\n\n\nF\n5815.313\n6515.603\n5509.365\n\n\nRMSE\n1.08\n1.04\n0.88\n\n\n\n\n + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001\n\n\n\n\n\n\n\n\\(\\beta_1 = \\alpha_1\\)と\\(\\beta_2 = \\gamma_1\\)にはなっていないようです。 なぜでしょう？ それは、重回帰分析の係数は、他の変数を一定としたときのある説明変数が応答変数に与える影響の強さ、なので、単回帰ごとの結果と重回帰の結果は異なります。 そのことを確認するために、研究開発費と広告宣伝費の散布図を描いてみましょう。\n\nggplot(df) + aes(x = log_広告宣伝費, y = log_研究開発費) + geom_point() + mystyle\n\n\n\n\n研究開発費と広告宣伝費の間には、やや強い相関があるようです。相関係数は、0.6306058となります。\nこの関係を前提として，単回帰分析の結果から重回帰分析の結果を導出してみます。 この方法を回帰解剖(regression anatomy)といいます。\nまず，売上高の対数を広告宣伝費の対数で回帰した結果から回帰誤差を得ます。回帰残差を取り出すには、residuals()関数を使います。 この回帰誤差は，売上高の変動のうち，広告宣伝費とは関係ない部分といえます。\n\nres &lt;- lm(log_売上高 ~ log_広告宣伝費, data = df)\nresid_sale &lt;- residuals(res)\n\n売上高の自然対数を広告宣伝費の自然対数で回帰した残差をresid_saleに代入しました。 次に，広告宣伝費を研究開発費で回帰します。 基本関数lm()\n\nres_adv = lm(log_研究開発費 ~ log_広告宣伝費 , data = df)\ncoef(res_adv)\n\n   (Intercept) log_広告宣伝費 \n     3.6582599      0.5639725 \n\n\nこの結果の残差は、研究開発費の対数の変動のうち、広告宣伝費の対数が説明できていない部分です。 つまり広告宣伝費のうち、研究開発費とは関係のない部分となります。 回帰残差を取り出すには、residuals()関数を使います。\n\nresid_adv &lt;- residuals(res_adv) # 残差を抽出\nplot(resid_adv) # 残差をプロット\n\n\n\n\n売上高の変動のうち広告宣伝費とは関係ない部分である残差resid_saleを，研究開発費の変動の内広告宣伝費とは関係のない部分である残差resid_advで回帰します。\n\nres_ee &lt;- lm(resid_sale ~ resid_adv) # 残差で残差を推定\nround(coef(res_ee), digits = 3) # 回帰係数を丸めて表示\n\n(Intercept)   resid_adv \n      0.000       0.402 \n\n\nこのresid_advの回帰係数をみると，\\(0.402\\)となっており，前に計算した重回帰分析の研究開発費の自然対数の回帰係数と一致しております。\nつまり，重回帰分析の係数とは，複数の説明変数の中で，他の説明変数とは関係の無い部分が，応答変数と他の説明変数との間の関係のない部分に与える影響の強さを表しているということです。\nここでいうと，重回帰分析における研究開発費の回帰係数の意味するところは，研究開発費の変動のうち広告宣伝費とは関係ない部分が，応答変数の変動のうち広告宣伝費とは関係の無い部分に与える影響，を意味しています。"
  },
  {
    "objectID": "presemi2023_09.html#決定係数",
    "href": "presemi2023_09.html#決定係数",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "重回帰分析の結果を見ると、\\(R^2\\)という値が表示されています。 これは、決定係数と呼ばれる値で、回帰モデルの当てはまりの良さを表す指標の1つです。 定義については覚えなくてもよいですが，おおよそ次のようになっています。\n\\[\n\\begin{aligned}\nR^2 &= \\frac{\\text{回帰変動}}{\\text{全変動}}\\\\\n&= \\frac{\\sum_{i \\in N} (\\hat y_i - \\bar y)^2}{\\sum_{i \\in N} (y_i - \\bar y)^2}\\\\\n&= 1 - \\frac{\\sum_{i \\in N} e_i^2}{\\sum_{i \\in N} (y_i - \\bar y)^2}\n\\end{aligned}\n\\] ここで\\(\\hat y\\)は予測値(モデルの値)，\\(\\bar y\\)は平均値，\\(e\\)は残差です。 つまり決定係数\\(R^2\\)とは，回帰モデルと平均値の差である回帰変動(\\(\\hat y_i - \\bar y\\))と観測値\\(y_i\\)と平均値の差である全変動(\\(y_i - \\bar y\\))との比であり， これが1に近い，つまり回帰変動と全変動が一致している程度が高いとき，回帰モデルがデータによく当てはまっているといえます。\n決定係数について，以下の点くらいは覚えておくとよいでしょう。\n\n決定係数は、0から1の値をとります。\n\n決定係数は、説明変数の数が増えると必ず増加するので，重回帰分析では修正決定係数を使うことが多いです。\n\n決定係数が1に近いほど、回帰モデルがデータによく当てはまっていることを表しますが，どれほど高いと良いかの目安はありません。\n決定係数は検定統計量ではないため，すべての回帰係数がゼロであるという帰無仮説を検定する\\(F\\)統計量でモデルの有意性を判断します。\n決定係数以外にも，赤池情報量規準やベイズ情報量規準などの指標もありますが，今回は後者の2つは扱いません。"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "presemi2023_03.html",
    "href": "presemi2023_03.html",
    "title": "Rの使い方",
    "section": "",
    "text": "第3回講義の到達目標は、\n\nR、Rstudio、Visual Studio Code、Quartoのインストールができる。\nPosit Cloudにログインして、ブラウザ上でRstudioを使うことができる。\nVisual Studio CodeでRのソースコードを書くことができる。\nVisual Studio CodeでQuartoを使って、レポートや論文を書くことができる。\n\n第3回講義の到達度検証のための課題は、以下の通りです。\n\nVisual Studio Codeで必要な拡張機能をインストールする。\nVisual Studio Codeで、Rのソースコードを書いて実行し、結果を見る。\nVisual Studio Codeで、Quartoを使って短いレポートを作成する。\nVisual Studio Codeで、Quartoを使ってスライド資料を作る。\n\n正直、Rの使い方を説明したウェブサイトや書籍、動画はたくさんあります。 そういったものを見てもらった方が早いです。\n\n教科書を見ながらRとRstduioを自分PCにインストールしてください。 以下のウェブサイトが超参考になります。 自分のPCのOSに応じて、資料を見ながらインストールしてください。\n矢内先生のウェブサイト\nあるいは、Posit Cloudを使ってウェブ上でRstudioを使えるようにしてください。\nPosit Cloud\n\nPosit Cloudを使わずに、自分のPCでRを使うことを選択した人は、以下の作業に進みますが、まずは矢内先生のウェブサイトなどを参考に、RとRstudioをインストールはインストールしておいてください。\n教科書では、Posit社のRstudioの説明をしていますが、RstudioはR専用のIDE（統合開発環境）で、R以外の言語を書くことはできませんし、少々重たいです。 そこでここでは、Microsoft社のVisual Studio Codeを使ってRを書く方法を説明します。\nマイクロソフト社のウェブサイトから、自分のPCのOSに合わせて、Visual Studio Codeをインストールしてください。\nまずGoogle等で「Visual Studio Code」と検索して、オフィシャルサイトにアクセスします。\n\n\nVisual Studio Codeのオフィシャルサイト\n\nそして、「Visual Studio Codeをダウンロードする」をクリックすると、次のページにいきます。\n\n\nVisual Studio Codeのダウンロードページ\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 詳しい人なら、下の小さな項目から、適切なものをえらんでください。 MacBookでM2チップを使っている人は、MacのApple siliconのzipをダウンロードして、Zipファイルを展開してインストールしてください。\n\n次に、RstudioやVisual Studio Codeで、レポートや論文を書くためのパッケージであるQuartoをインストールします。 QuartoはRstudioを作ったPosit社が開発している文書作成システムなので、Rとの相性もばっちりです。\nまずGoogle等で「Quarto」と検索して、オフィシャルサイトにアクセスします。\n\n\nQuartoのオフィシャルサイト\n\nそして、「Get Started」をクリックすると、次のページにいきます。\n\n\nQuartoのダウンロードページ\n\nここから自分に合ったOSを選んで、ダウンロードしてください。\nここまでで、\n\nR (本体)\nRstudio (R用IDE)\nVisual Studio Code (R以外の言語も書けるIDE)\nQuarto (レポートや論文を書くためのパッケージ)\n\nのインストールが完了しました。 次に、Visual Studio CodeでRのソースコードを書くための準備をします。\n\nVisual Studio Code(以下、VS Code)の準備をします。 VS Codeを開くと、次のような画面が表示されます。 VS Codeは、機能を拡張するために、拡張パッケージをインストールすることができます。 VS Codeを起動して、左のメニューの中の、四角が4つ並んだアイコンをクリックしてください。\n\n\nVS Codeの初期画面\n\nVS Codeの左のメニュー上部に拡張パッケージの検索画面が表示されます。 そこに拡張パッケージの名前を入れて、必要なものをインストールしていきます。 以下の拡張パッケージは、Rの分析をするために必要あるいは推奨されるものです。\n\n\nJapanese Language Pack for Visual Studio Code : VS Codeの日本語化\n\nR : とりあえず入れておく\n\nQuarto : Quartoを使うために必要\n\nとりあえずこの3つを入れておけば、このプレゼミでは十分です。\n\n\nVS Codeの拡張パッケージ\n\n\nVS Codeでは、分析に使うCSVファイルや、分析のためのRファイル、レポートや論文を書くためのQuartoファイルを、一つのフォルダにまとめておくと便利です。 分かりやすい場所にフォルダを作成し、好きな名前をつけてください。\nVS Codeの上部メニューの中の「ファイル」をクリックして、「フォルダーを開く」をクリックして、先ほど作成したフォルダを選択してください。 すると、左のメニューにフォルダの中身が表示されます。まだ何も入っていなければ、何も表示されません。\nVS Codeではフォルダを指定して開いておくと、そこが作業フォルダとなり、Rは常にそのフォルダの中を参照するようになります。\n\nではVS Code上でRのソースコードを書いてみましょう。 新しいファイルを作成するためには、上のメニューから「ファイル」をクリックして、「新しいファイル」をクリックしてください。\nするとメニューが表示されその中に「R Document」を選ぶと、Rのソースコードを書くためのファイルが作成されます。 Rのソースコードは拡張子が.rというファイルになります。 拡張子が何か分からないひとは、ググっておいてください。 WindowsやMacOSでもファイルの拡張子が表示されるように設定しておいてください。\n\nここまでの準備が出来ていれば、画面にRのソースコードを書くためのファイルが表示されているはずです。 何も書かれていないので、まずは何か書いてみましょう。 まずは、1+2を計算してみます。\n\n1 + 2\n\nと書いて、その行にカーソルがある状態で、Ctrl + Enterを押すと、その行の計算結果が表示されます。\n\n\n[1] 3\n\n\nあとは教科書をみて、練習しておいてください。 以下の事ができるようになっていればOKです。\n\n四則演算\n\nsqrt()関数で平方根の計算\n\nc()関数でベクトルの作成\n\nmean()関数で平均を計算\n\nseq()関数で数列の作成\n\nRはパッケージを使って機能を拡張することができます。\n\n\ninstall.packages()関数でパッケージをインストールして、\n\nlibrary()関数でパッケージを読み込むと、\n\n拡張した機能を使えるようになります。 教科書やこの資料で使う関数はたくさんあるので、その都度説明しますが、ほぼ必ずつかうのが、tidyverseというパッケージ群です。\n以下のコードを実行して、tidyverseをインストールしてください。\n\ninstall.packages(\"tidyverse\") # 最初の一回だけ実行\n\nそして、ほぼ毎回以下のコードを実行して、tidyverseを読み込みます。\n\nlibrary(tidyverse)\n\nついでに、今後使うであろう次のパッケージもインストールしておいてください。\n\ninstall.packages(\"bloom\") # 結果の整形\ninstall.packages(\"ggthemes\") # グラフの見た目\ninstall.packages(\"modelsummary\") # 回帰結果の作表\ninstall.packages(\"kableExtra\") # 表の整形\ninstall.packages(\"gt\") # 表の整形\ninstall.packages(\"patchwork\") # グラフを並べて表示\n\n\nGitHubは、Gitというバージョン管理システムを使って、ソースコードのバージョン管理をクラウド上で行うことができる無料サービスです。 使いこなすには、少々勉強が必要ですが、使えれば非常に有用なので、是非やってみてください。 Visual Studio CodeはGit/GitHubとの連携も簡単なので、複数人でウェブ開発やプログラミングをする場合には、非常に有益です。\nまずは、GitHubのウェブサイトにアクセスし、アカウントを作成してください。\nGitHub\nそこから先は、書籍やウェブサイトを参考にしてください。 例えばこんな本が便利です。\n\n\n\n\n\nGitHubのオススメ本\n\n\n\n\n\nはじめてでもできるGitとGitHubの教科書\n\n\n\n\n\nわかばちゃんと学ぶGit使い方入門\n\n\n\n\n\nGitHub Copilotは、AIがコードの作成を支援してくれる超便利なツールです。 学生は無料で利用できるので、プログラミングを学習しようとしている人は、導入の検討をしてみてください。\nGitHub Copilot\n\nここでは、\n\nRのインストール\nRstudioのインストール\nVS Codeのインストール\nQuartoのインストール\n\nを行い、VS Code上での分析・レポート作成環境を整えました。 また、ソースコードの書き方や、パッケージのインストール方法、GitHubとの連携方法を学び、GitHub Copilotの紹介をしました。"
  },
  {
    "objectID": "presemi2023_03.html#rとrstudio",
    "href": "presemi2023_03.html#rとrstudio",
    "title": "Rの使い方",
    "section": "",
    "text": "教科書を見ながらRとRstduioを自分PCにインストールしてください。 以下のウェブサイトが超参考になります。 自分のPCのOSに応じて、資料を見ながらインストールしてください。\n矢内先生のウェブサイト\nあるいは、Posit Cloudを使ってウェブ上でRstudioを使えるようにしてください。\nPosit Cloud"
  },
  {
    "objectID": "presemi2023_03.html#visual-studio-codeの使い方",
    "href": "presemi2023_03.html#visual-studio-codeの使い方",
    "title": "Rの使い方",
    "section": "",
    "text": "Posit Cloudを使わずに、自分のPCでRを使うことを選択した人は、以下の作業に進みますが、まずは矢内先生のウェブサイトなどを参考に、RとRstudioをインストールはインストールしておいてください。\n教科書では、Posit社のRstudioの説明をしていますが、RstudioはR専用のIDE（統合開発環境）で、R以外の言語を書くことはできませんし、少々重たいです。 そこでここでは、Microsoft社のVisual Studio Codeを使ってRを書く方法を説明します。\nマイクロソフト社のウェブサイトから、自分のPCのOSに合わせて、Visual Studio Codeをインストールしてください。\nまずGoogle等で「Visual Studio Code」と検索して、オフィシャルサイトにアクセスします。\n\n\nVisual Studio Codeのオフィシャルサイト\n\nそして、「Visual Studio Codeをダウンロードする」をクリックすると、次のページにいきます。\n\n\nVisual Studio Codeのダウンロードページ\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 詳しい人なら、下の小さな項目から、適切なものをえらんでください。 MacBookでM2チップを使っている人は、MacのApple siliconのzipをダウンロードして、Zipファイルを展開してインストールしてください。\n\n次に、RstudioやVisual Studio Codeで、レポートや論文を書くためのパッケージであるQuartoをインストールします。 QuartoはRstudioを作ったPosit社が開発している文書作成システムなので、Rとの相性もばっちりです。\nまずGoogle等で「Quarto」と検索して、オフィシャルサイトにアクセスします。\n\n\nQuartoのオフィシャルサイト\n\nそして、「Get Started」をクリックすると、次のページにいきます。\n\n\nQuartoのダウンロードページ\n\nここから自分に合ったOSを選んで、ダウンロードしてください。\nここまでで、\n\nR (本体)\nRstudio (R用IDE)\nVisual Studio Code (R以外の言語も書けるIDE)\nQuarto (レポートや論文を書くためのパッケージ)\n\nのインストールが完了しました。 次に、Visual Studio CodeでRのソースコードを書くための準備をします。\n\nVisual Studio Code(以下、VS Code)の準備をします。 VS Codeを開くと、次のような画面が表示されます。 VS Codeは、機能を拡張するために、拡張パッケージをインストールすることができます。 VS Codeを起動して、左のメニューの中の、四角が4つ並んだアイコンをクリックしてください。\n\n\nVS Codeの初期画面\n\nVS Codeの左のメニュー上部に拡張パッケージの検索画面が表示されます。 そこに拡張パッケージの名前を入れて、必要なものをインストールしていきます。 以下の拡張パッケージは、Rの分析をするために必要あるいは推奨されるものです。\n\n\nJapanese Language Pack for Visual Studio Code : VS Codeの日本語化\n\nR : とりあえず入れておく\n\nQuarto : Quartoを使うために必要\n\nとりあえずこの3つを入れておけば、このプレゼミでは十分です。\n\n\nVS Codeの拡張パッケージ\n\n\nVS Codeでは、分析に使うCSVファイルや、分析のためのRファイル、レポートや論文を書くためのQuartoファイルを、一つのフォルダにまとめておくと便利です。 分かりやすい場所にフォルダを作成し、好きな名前をつけてください。\nVS Codeの上部メニューの中の「ファイル」をクリックして、「フォルダーを開く」をクリックして、先ほど作成したフォルダを選択してください。 すると、左のメニューにフォルダの中身が表示されます。まだ何も入っていなければ、何も表示されません。\nVS Codeではフォルダを指定して開いておくと、そこが作業フォルダとなり、Rは常にそのフォルダの中を参照するようになります。\n\nではVS Code上でRのソースコードを書いてみましょう。 新しいファイルを作成するためには、上のメニューから「ファイル」をクリックして、「新しいファイル」をクリックしてください。\nするとメニューが表示されその中に「R Document」を選ぶと、Rのソースコードを書くためのファイルが作成されます。 Rのソースコードは拡張子が.rというファイルになります。 拡張子が何か分からないひとは、ググっておいてください。 WindowsやMacOSでもファイルの拡張子が表示されるように設定しておいてください。"
  },
  {
    "objectID": "presemi2023_03.html#rの基本操作",
    "href": "presemi2023_03.html#rの基本操作",
    "title": "Rの使い方",
    "section": "",
    "text": "ここまでの準備が出来ていれば、画面にRのソースコードを書くためのファイルが表示されているはずです。 何も書かれていないので、まずは何か書いてみましょう。 まずは、1+2を計算してみます。\n\n1 + 2\n\nと書いて、その行にカーソルがある状態で、Ctrl + Enterを押すと、その行の計算結果が表示されます。\n\n\n[1] 3\n\n\nあとは教科書をみて、練習しておいてください。 以下の事ができるようになっていればOKです。\n\n四則演算\n\nsqrt()関数で平方根の計算\n\nc()関数でベクトルの作成\n\nmean()関数で平均を計算\n\nseq()関数で数列の作成"
  },
  {
    "objectID": "presemi2023_03.html#パッケージ",
    "href": "presemi2023_03.html#パッケージ",
    "title": "Rの使い方",
    "section": "",
    "text": "Rはパッケージを使って機能を拡張することができます。\n\n\ninstall.packages()関数でパッケージをインストールして、\n\nlibrary()関数でパッケージを読み込むと、\n\n拡張した機能を使えるようになります。 教科書やこの資料で使う関数はたくさんあるので、その都度説明しますが、ほぼ必ずつかうのが、tidyverseというパッケージ群です。\n以下のコードを実行して、tidyverseをインストールしてください。\n\ninstall.packages(\"tidyverse\") # 最初の一回だけ実行\n\nそして、ほぼ毎回以下のコードを実行して、tidyverseを読み込みます。\n\nlibrary(tidyverse)\n\nついでに、今後使うであろう次のパッケージもインストールしておいてください。\n\ninstall.packages(\"bloom\") # 結果の整形\ninstall.packages(\"ggthemes\") # グラフの見た目\ninstall.packages(\"modelsummary\") # 回帰結果の作表\ninstall.packages(\"kableExtra\") # 表の整形\ninstall.packages(\"gt\") # 表の整形\ninstall.packages(\"patchwork\") # グラフを並べて表示\n\n\nGitHubは、Gitというバージョン管理システムを使って、ソースコードのバージョン管理をクラウド上で行うことができる無料サービスです。 使いこなすには、少々勉強が必要ですが、使えれば非常に有用なので、是非やってみてください。 Visual Studio CodeはGit/GitHubとの連携も簡単なので、複数人でウェブ開発やプログラミングをする場合には、非常に有益です。\nまずは、GitHubのウェブサイトにアクセスし、アカウントを作成してください。\nGitHub\nそこから先は、書籍やウェブサイトを参考にしてください。 例えばこんな本が便利です。\n\n\n\n\n\nGitHubのオススメ本\n\n\n\n\n\nはじめてでもできるGitとGitHubの教科書\n\n\n\n\n\nわかばちゃんと学ぶGit使い方入門\n\n\n\n\n\nGitHub Copilotは、AIがコードの作成を支援してくれる超便利なツールです。 学生は無料で利用できるので、プログラミングを学習しようとしている人は、導入の検討をしてみてください。\nGitHub Copilot"
  },
  {
    "objectID": "presemi2023_03.html#まとめ",
    "href": "presemi2023_03.html#まとめ",
    "title": "Rの使い方",
    "section": "",
    "text": "ここでは、\n\nRのインストール\nRstudioのインストール\nVS Codeのインストール\nQuartoのインストール\n\nを行い、VS Code上での分析・レポート作成環境を整えました。 また、ソースコードの書き方や、パッケージのインストール方法、GitHubとの連携方法を学び、GitHub Copilotの紹介をしました。"
  },
  {
    "objectID": "presemi2023_04.html",
    "href": "presemi2023_04.html",
    "title": "Rによるデータ操作",
    "section": "",
    "text": "第5回講義の到達目標は、\n\n様々なデータをRで読み込むことができる。\n読み込んだデータを確認できる。\n基本的なデータ操作ができる。\n整然データの構造を理解し、データを必要な形に成形できる。\n複数のデータを結合できる。\n作成したデータを保存できる。\n\n第5回講義の到達度検証のための課題は、以下の通りです。\n\nCSVファイル、Excelファイルを読み込んで、中身を確認する。\n必要なデータの抽出、変数の追加、変数の選択を行い、分析に適した形に持っていける。(filter()、mutate(),select(), arrange(), pivot_longer(), pivot_wider())\nデータ結合の種類を理解し、複数のデータを結合して、1つのデータフレームを作成する。(bind_rows(), bind_cols(), left_join(), right_join(), inner_join(), full_join())\n\nこの章では、Rを用いたデータ操作の基本的な方法を学びます。 この章は何度も読み返し、繰り返し練習してください。 ここでは、なぜRを使うと便利なのかを分かってもらうために、Excelの操作と比較する形で、Rのデータ操作の基本を学びます。\n\n\n多くのプログラミング言語で、読み込むデータとして最も多いのが、CSV形式のファイルです。ファイルの拡張子は.csvです。 CSVとは、Comma Separated Valuesの略で、カンマで区切られたデータのことです。 次のような形をしています。\n企業ID,決算年月,売上高\n13,2020/03,1000\n13,2021/03,1200\n13,2022/03,1500\n24,2020/03,2000\n24,2021/03,2200\n24,2022/03,2500\n33,2020/03,3000\n33,2021/03,3200\n33,2022/03,3500\nこのように、値とコンマ,のみで構成されたファイルのため、余計な情報が入っておらず、またファイルサイズも小さく、加工が簡単なので、データのやり取りによく使われます。\nさっそくファイルを読み込んでみましょう。 ここでは、松浦のウェブサイトにあるデータkeshohin_2023.csvを読み込んでみます。 Rの場合は、read.csvという関数を使って、URLを直接指定して読み込むことができます。読み込んだデータをdfという変数に代入しています。\nExcelの場合は、インターネット上のデータを直接取り込むことは難しいので、いったんパソコンの中に保存してから、ファイルを開くとします。\n\n\n\n\n\n\nRの場合\n\n\n\nRでcsvファイルを読み込む最もシンプルな方法は、基本関数read.csv()を用いて、ファイル名やファイルを参照するURLを直接指定することです。\n\ndf &lt;- read.csv(\"https://so-ichi.com/kesho_2023.csv\")\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n\nURLhttps://so-ichi.com/kesho_2023.csvをブラウザに入力してファイルをダウンロードし、任意の場所に保存\n「ファイル」から「開く…」をクリックして、保存したCSVファイルを選択し「開く」をクリック\n\n\n\n\nMS Excelのファイルは拡張子が.xlsx、古いMS Excelだと.xlsです。 RでExcelファイルを読み込むときは、read_excelという関数を使います。 Excelファイルを用意するのが面倒なので、ここではこうやれば読み込めるよ、というコードだけ説明します。ファイル名はhoge.xlsxとします。\n\n\n\n\n\n\nRの場合\n\n\n\nRでMS Excelのファイルを読み込むには、readxlパッケージのread_excel()関数を用います。\n\ndfx &lt;- readxl::read_excel(\"hoge.xlsx\")\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n\n「ファイル」から「開く…」をクリックし、保存してあるExcelファイルを選択し「開く」をクリック\n\n\n\nMS Excelの問題点は、目的のデータがどのExcelファイルに入っていて、それがどこに保存されているのかを覚えておかないと、いちいちファイルを開いて探さないといけないことです。\nRだとソースコードを残すことができますので、 どこにあるファイルを読み込んで、そこに何が入っているのかをコメントで残しておくことができます。\n\nMS Excelは読み込んだデータが画面上に表として表示されていますが、Rでは変数に代入しただけでは、画面には何も表示されません。 そこでデータの中身を確認する関数として、次のようなものがあります。\n\n\nhead() : 最初の数行を表示させる基本関数\n\nstr() : データの構造を表示させる基本関数\n\nglimpse() : データの構造を表示させるdplyrパッケージの関数\n\nnames() : 変数名を表示させる基本関数\n\nこれらを使って、データの中身を確認し、データの形に適した処理方法を学ぶ必要があります。 以下では、head()関数を使って、データの最初の数行を表示させてから、str()関数でデータの中の変数とその型を確認します。\nExcelは目視が中心ですが、見ただけでは、文字列なのか数なのかが分からないので、やはりデータの型は確認する必要があります。\n\n\n\n\n\n\nRの場合\n\n\n\n\nhead(df)\n\n\n\n\ncode\nname\nterm\nshubetsu\nren\nsales\nnetincome\nmonth\n\n\n\n641\n資生堂\n1985/11\n10\n1\n371040\n14526\n12\n\n\n641\n資生堂\n1986/11\n10\n1\n375294\n13632\n12\n\n\n641\n資生堂\n1987/11\n10\n1\n378977\n9014\n12\n\n\n641\n資生堂\n1988/11\n10\n1\n401311\n9515\n12\n\n\n641\n資生堂\n1989/03\n10\n1\n130654\n4265\n4\n\n\n641\n資生堂\n1990/03\n10\n1\n456352\n11362\n12\n\n\n\n\n\nstr(df)\n\n'data.frame':   130 obs. of  8 variables:\n $ code     : int  641 641 641 641 641 641 641 641 641 641 ...\n $ name     : chr  \"資生堂\" \"資生堂\" \"資生堂\" \"資生堂\" ...\n $ term     : chr  \"1985/11\" \"1986/11\" \"1987/11\" \"1988/11\" ...\n $ shubetsu : int  10 10 10 10 10 10 10 10 10 10 ...\n $ ren      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ sales    : int  371040 375294 378977 401311 130654 456352 517252 553299 561549 549178 ...\n $ netincome: int  14526 13632 9014 9515 4265 11362 15850 16011 13290 14668 ...\n $ month    : int  12 12 12 12 4 12 12 12 12 12 ...\n\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n画面を見て確認する。\n\n\nこのデータには，\n\n\ncode : 企業コード (文字列)\n\nname : 企業名 (文字列)\n\nterm : 決算年月 (文字列)\n\nshubetsu : 会計基準の種類 (数値)\n\nren : 連結か単体 (数値)\n\nsales : 売上高 (数値)\n\nnetincome : 当期純利益 (数値)\n\nmonth : 決算月数 (数値)\n\nが入っています。\n\n\nさあ面白くなってきました。 次はデータを操作していきます。 Rによるデータ操作では、tidyverseパッケージ群のdplyrパッケージが大活躍します。\ndplyrパッケージの関数の中でもよく使うものに次のようなものがあります。\n\n\nselect() : 変数を選択する\n\nfilter() : データを抽出する\n\nmutate() : 変数を追加する\n\narrange() : データを並び替える\n\nsummarise() : データを集計する\n\ngroup_by() : データをグループ化する\n\nRでソースコードを書く際に，理解しやすく，読みやすいコードにするために非常に便利なのが，パイプ演算子%&gt;%です。 パイプ演算子%&gt;%は，左側のオブジェクトを右側の関数の第一引数に渡すという処理を行います。 たとえば，\n\n(1 + 2) %&gt;% sqrt()\n\n[1] 1.732051\n\n\nと書くと，sqrt(1 + 2)と同じ意味になります。 たとえば，rnorm()関数を使って平均0，分散1の標準正規分から100個のデータを作りたいとします。 rnorm()関数は3つの引数を取ります。\n\nデータの個数\n平均\n標準偏差\n\nしたがって，rnorm(100, 0, 1)と書くと，平均0，分散1の標準正規分布から100個のデータを取り出すことができます。 パイプ演算子を使うと，\n\n100 %&gt;% rnorm(mean = 0, sd = 1)\n\n  [1]  0.063002985  0.844220595 -0.859654144 -0.002598543 -0.673578358\n  [6]  1.639704853 -1.549973784  0.295819981  0.964837474 -0.020988105\n [11]  0.145755011 -0.572766400  0.211520038  0.142918140  1.200105131\n [16] -1.356500340  0.160727176  2.107029445  0.684120140 -1.131749423\n [21]  0.065803029 -1.053419403  0.071881357  0.393473855  1.345375015\n [26]  0.182275159  0.106148856  0.770796621  0.282349942  2.075331770\n [31] -0.647271035 -0.816778157 -0.467397752 -0.843322581 -0.593600586\n [36] -0.726601884 -1.411886656 -0.106748290  0.099307863 -0.783453133\n [41] -1.625140162  0.702656323 -0.482923735 -0.612147194 -0.315351199\n [46]  0.080216155  0.599338123 -1.518915104 -0.829310311  2.169091051\n [51]  0.998798468  0.160424232  0.881413387  0.556656966  1.241829913\n [56] -0.433506814  0.799280369 -1.321652130 -0.886215684  1.297740051\n [61]  0.541221113  0.187269574 -0.799209946  2.096347220 -1.155127641\n [66]  0.943143604  0.988734856  0.391969098 -0.243363347  1.888303431\n [71]  0.405853978  0.888160467  1.560873419  0.266495427 -0.157736359\n [76] -0.910317880  0.863239959  1.142179270 -0.785002218 -1.392131708\n [81] -0.625873931 -0.955372590  0.957322565 -1.134434260 -0.285509488\n [86] -2.115343597  0.653078769  2.399415564 -0.140698689  2.523217876\n [91] -0.113023442 -1.174571457  0.638856097  1.577217187 -0.093800828\n [96] -1.445292349 -1.377312236  0.546255685 -0.273281621 -0.012987443\n\n\nとなります。 これはrnorm()関数の第1引数がデータの個数なので，そこに100を渡しています。 ここで平均に値を渡したい場合を考えます。 mean引数は第2引数なので，パイプ演算子では自動で渡してくれません。 そこで.を使って渡す場所を指定してあげます。\n\n100 %&gt;% rnorm(100, mean =. , sd = 1)\n\n  [1]  98.48961 100.51837 102.71930  99.87553 100.22687 100.60825  98.95075\n  [8]  99.76190 101.62591  99.25217 100.74600  98.98241 101.29855  99.40596\n [15]  99.04232  99.99752 101.31296  99.49977  99.25496  99.98878  99.25437\n [22] 102.36015  97.36997  99.75281 100.29611  99.95644  99.57598  99.30659\n [29] 101.68088  99.94344 100.34321 101.92322 100.79492  99.63788 100.74923\n [36] 100.67090 100.36256  99.68836  99.49566  99.78931 100.07927 100.76766\n [43]  98.99613  98.94864 100.18985  98.90317  99.47791 100.23840  99.23254\n [50] 101.25166 101.78315 101.38781 100.52495 100.26678 100.68225  99.52430\n [57]  98.69746 100.47472  98.41986 101.24240 101.76202 100.93738  99.64664\n [64]  99.45147  99.81417  99.51845 100.14589 100.03142 101.17669  98.30816\n [71] 101.47371  99.75616 100.70050 100.50162 100.84103  98.28449  99.49989\n [78] 100.07390 100.24002  99.68234 101.40671  99.42597  98.98013  99.46850\n [85] 100.80821  99.81356 100.44890  98.97466 101.58507  99.99225  99.60774\n [92]  97.93813 101.02105  98.66530 101.36966  98.61330  99.78128 100.83186\n [99]  98.88836  99.45513\n\n\nこれで平均100，標準偏差1の正規分布から100個のデータを取り出せました。\nこれだけだとパイプ演算子%&gt;%の便利さが伝わらないので，たとえば次のような処理を考えてみましょう。\n\n2020年のデータを抜き出し，\n売上高当期純利益率を計算し，\n産業グループごとに平均を計算する\n利益率が高い順番に並び替える\n\nをパイプ演算子を使って書くと，\n\ndf &lt;- df %&gt;%\n    filter(term == \"2020\") %&gt;% # 2020年のみ\n    mutate( # 新しい変数を作成\n        ratio = netincome / sales # 売上高利益率\n        ) %&gt;%\n    group_by(sangyo) %&gt;% # 産業グループごとに\n    summarise( # 平均を計算\n        mean_ratio = mean(ratio) # 利益率の平均\n        ) %&gt;%\n    arrange(desc(mean_ratio)) # 利益率の高い順に並び替え\n\nのように，上から順番に処理を実行し，次に渡す，というプロセスが分かりやすく，読みやすいコードができました。 コメントも残しておけば，後から見返したときにも分かりやすいですし，他人によんでもらうときも親切ですね。 したがって，以下ではパイプ演算子を駆使して，データ操作を行っていきます。\n\n新しい変数を作成するには，dplyrパッケージのmutate()関数を使います。 先ほど読みこんだデータから，当期純利益を売上高で除して売上高当期純利益率を計算して，ratioという変数を作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        ratio = netincome / sales # 売上高利益率\n        )\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nI1のセルに変数名を表すratioと入力する。 F列のsaleとG列のnetincomeを使って，I2のセルに\n= G2 / F2\nとし，I2セルの右下の四角をダブルクリックすると，自動で下のセルにも同じ計算がコピーされる。\n\n\n次に，ある変数の値に応じて異なる値をとる変数を作るには，mutate()関数とifelse()関数を同時に使います。ifelse()関数は次のような引数を取ります。\n\nifelse(条件, 条件が真のときの値, 条件が偽のときの値)\n\n先ほど計算した売上高当期純利益率が5%以上ならば「高い」，そうでなければ「低い」という変数highlowを作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        highlow = ifelse(ratio &gt;= 0.05, \"高い\", \"低い\") # 売上高利益率\n        )\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nJ1セルにhighlowと入力する。 J2セルに\n= if(I2 &gt;= 0.05, \"高い\", \"低い\")\nと入力し，J2セルの右下の四角をダブルクリックすると，自動で下のセルにも同じ計算がコピーされる。\n\n\nExcelだとセルの移動や変数名の入力，計算式の入力，セルのコピーといった作業で，キーボードとマウスを行ったり来たりする必要があり，若干面倒です。\nついでに，mutate()関数を使って，長すぎる企業名を短くしてみます。 ここでは「ポーラ・オルビスホールディングス」を「ポーラ」と略してみます。 mutate()とifelseを使って，name変数の値が「ポーラ・オルビスホールディング」ならば「ポーラ」という値をとる変数name上書きします。を作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        name = ifelse(\n            name == \"ポーラ・オルビスホールディング\", \"ポーラ\", name) # 企業名\n        )\n\n\n\n\nデータを抽出するには，dplyrパッケージのfilter()関数を使います。 filter()関数は，次のような引数を取ります。\n\nfilter(データ, 条件)\n\n先ほど作成したratio2が「高い」企業だけを抽出してみましょう。 filter()関数の中の条件は，==を使って，\"高い\"という文字列と一致するかどうかを確認しています。 ここでは，highlow変数の値が\"高い\"と一致する企業だけを抽出し，df_highという変数に代入しています。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf_high &lt;- df %&gt;%\n    filter(highlow == \"高い\") # 条件\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nhighlow変数のあるJ列をクリックして枠を移動させ，上の「ホーム」メニューから「並び替えとフィルター」をクリックし，「フィルター」をクリックする。 すると，変数名highlowのヨコに漏斗のようなマークが出るので，それをクリックすると，記録されたデータの種類が出てくるので，「高い」だけにチェックが入った状態にする。\n\n\nExcelのクリック回数が増えてきましたね。\nfilter()関数の中で指定する条件は，\n\n\n== : 一致する\n\n!= : 一致しない\n\n&gt;=や&lt;= : 以上や以下\n\n&gt;や&lt; : より大きいや小さい\n\n%in% : いずれかに一致する\n\nなどがあります。またこれらの条件を組み合わせることもできます。 その場合は，以下のように&や|を使います。\n\n\n& : かつ\n\n| : または\n\nたとえば，資生堂と花王を抽出したり，売上高当期純利益率が5%以上かつ売上高が1000億円以上の企業を抽出するには， 次のように書きます。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf_shiseido_kao &lt;- df %&gt;%\n    filter(name %in% c(\"資生堂\", \"花王\")) # 2社だけ抽出\ndf_high2 &lt;- df %&gt;%\n    filter(ratio &gt;= 0.05 & sales &gt;= 1000) # 2条件を同時に満たす\n\n\n\n\nデータの中から必要な変数だけを選択するには，dplyrパッケージのselect()関数を使います。 たとえば，先ほど作成したdfから，企業コード，企業名，売上高当期純利益率の3つの変数だけを選択してみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf3 &lt;- df %&gt;%\n    select(code, name, ratio) # 3つの変数だけ選択\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nオリジナルのデータをコピーして，下のタブから別のシートを選択し，そこに貼り付ける。\n貼り付けたデータからcodeとnameとratio以外の列を削除する。\n\n\nMS Excelだと，不要なデータを削除するのが怖い作業で，必要になったときにまた元のデータを読み込まないといけないので，面倒ですし，ミスのもとです。\nselect()関数の中で使えるものには，以下のようなものがあります。 とても便利なので，覚えておくとよいでしょう。\n\n\n- : 除外する (-ratioとかくとratio以外を選択)\n\n: : 連続する変数を選択 (code:renと書くとcodeからrenまでを選択)\n\nstarts_with() : ある文字列で始まる変数を選択\n\nends_with() : ある文字列で終わる変数を選択\n\nたとえば，mutate()で新しい変数を作る場合に，変数名に法則性をつけておけば，starts_with()を使って一気に変数を選択することができます。 たとえば，比率を表す変数はratioで始まるように統一しておく，基準化した変数には_Kを最後に付けておく，などです。\n\nデータを並び替えるには，dplyrパッケージのarrange()関数を使います。 たとえば，先ほど作成したdfから，売上高当期純利益率を並び替えてみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf %&gt;%\n    select(name, ratio) %&gt;% # 2つの変数だけ選択\n    arrange(ratio) %&gt;%\n    head()\n\n\n\n\nname\nratio\n\n\n\nポーラ\n-0.4349581\n\n\n資生堂\n-0.0757638\n\n\n資生堂\n-0.0385906\n\n\n資生堂\n-0.0216680\n\n\n資生堂\n-0.0138412\n\n\n資生堂\n-0.0126617\n\n\n\n\n\n\n\n\n小さい順に並び替えられました。 大きい順にするには，desc()関数を使います。 ついでにknitrパッケージのkabble()関数で表を見やすく加工してみます。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf %&gt;%\n    select(name, ratio) %&gt;% # 2つの変数だけ選択\n    arrange(desc(ratio)) %&gt;%\n    head(10) %&gt;% # 先頭の10行\n    knitr::kable(booktabs = TRUE) # 表をきれいに表示\n\n\n\nname\nratio\n\n\n\nポーラ\n0.1110647\n\n\n花王\n0.1019213\n\n\n花王\n0.0987028\n\n\n花王\n0.0986613\n\n\nユニ・チャーム\n0.0929384\n\n\n花王\n0.0912752\n\n\nポーラ\n0.0895507\n\n\nユニ・チャーム\n0.0891383\n\n\nユニ・チャーム\n0.0890311\n\n\nユニ・チャーム\n0.0869777\n\n\n\n\n\n\n\nこれでどの企業のどの年度の売上高当期純利益率が大きいのかが一目瞭然になりました。\nMS Excelだと，\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n「ホーム」メニューから「並び替えとフィルター」をクリックし，「昇順」をクリックする。\n必要なデータだけ選択してコピペすれば，表が完成します。\n\n\nとなります。 簡単ですが，MS Excelの並び替えは注意が必要で，並び替えた後にデータを追加すると，並び替えが解除されてしまい，元に戻せなくなったり，空列があると並び替えがうまくいかなかったりします。\n\n人間には読みやすいけれどパソコンは読みにくい，というデータの形式があります。 例えば下の表を見てみましょう。\n\n\n地点\n6時\n12時\n18時\n\n\n\n札幌\n12℃\n15℃\n13℃\n\n\n大阪\n20℃\n24℃\n22℃\n\n\n福岡\n23℃\n25℃\n25℃\n\n\n\nこのような形のデータをワイド形式(wide)といいます。 天気予報で見かけそうなこの表は，人間にとっては分かりやすいですが，実はコンピュータにとっては，分かりにくいものです。 コンピュータが理解しやすいデータとして表すなら，次のような表になります。\n\n\n地点\n時間\n気温(℃)\n\n\n\n札幌\n6時\n12\n\n\n札幌\n12時\n15\n\n\n札幌\n18時\n13\n\n\n大阪\n6時\n20\n\n\n大阪\n12時\n24\n\n\n大阪\n18時\n22\n\n\n福岡\n6時\n23\n\n\n福岡\n12時\n25\n\n\n福岡\n18時\n25\n\n\n\nこのような形式のデータをロング型(long)といいます。 このロング型のうち，一定のルールに従って作成されたデータを整然データ(tidy data)といい，Rでは，この整然データを扱うことが多いです。\nR神Hadley Wickham氏は，データの型を理解することを，データ分析の第一歩とし，その一貫として整然データという考え方を提唱しています。 整然データとは，次のような原則に従って構築されたデータのことです(Wickham, 2014) 参考https://id.fnshr.info/2017/01/09/tidy-data-intro/。\n\n個々の変数 (variable) が1つの列 (column) をなす。\n個々の観測 (observation) が1つの行 (row) をなす。\n個々の観測の構成単位の類型 (type of observational unit) が1つの表 (table) をなす。\n個々の値 (value) が1つのセル (cell) をなす\n\n上の表は，地点，時間，天気，気温の4つの変数があり1つの列をつくっています(ルール1)。 大阪12時の天気は雨，気温は12℃といったように1つの行が1つの観測を表しています(ルール2)。 このデータには種類の異なる観測はない(ルール3)。 また，各セルには1つの値が入っています(ルール4)。 よって，これが整然データとなります。\n上のロング型の天気データを使って，ロングからワイド，ワイドからロングの操作を学びましょう。\nまずデータを作ります。\n\ndf_weather &lt;- data.frame(\n    place = c(\"札幌\",\"札幌\",\"札幌\",\"大阪\",\"大阪\",\"大阪\",\"福岡\",\"福岡\",\"福岡\"), # 各地を3個ずつ\n    time = rep(c(\"6時\", \"12時\", \"18時\"),3),\n    temp = c(12,15,13,20,24,22,23,25,25)\n)\nprint(df_weather)\n\n  place time temp\n1  札幌  6時   12\n2  札幌 12時   15\n3  札幌 18時   13\n4  大阪  6時   20\n5  大阪 12時   24\n6  大阪 18時   22\n7  福岡  6時   23\n8  福岡 12時   25\n9  福岡 18時   25\n\n\nこれはロング型の整然データとなります。\n\nRで使うならこのままでよいのですが，あえてこれをワイド型に変えてみましょう。\n教科書で使用されているspread()は「根本的に設計ミスってた」と公式で発表されているので，R神が作ったpivot_wider()を使います。widerという名前の通り，ワイド型に変換する関数です。\npivot_wider()の引数は，names_fromとvalues_fromです。names_fromは，ワイド型に変換するときに，どの変数を列にするかを指定します。values_fromは，ワイド型に変換するときに，どの変数の値を使うかを指定します。\n以下のコードでは，time変数の値を列に，temp変数の値を値にして，df_wideという変数に代入しています。\n\ndf_wide &lt;- df_weather %&gt;%\n    pivot_wider(names_from = time, values_from = temp)\nprint(df_wide)\n\n# A tibble: 3 × 4\n  place `6時` `12時` `18時`\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 札幌     12     15     13\n2 大阪     20     24     22\n3 福岡     23     25     25\n\n\nこれでワイド型に変換できました。\n\n次に，このワイド型のデータをロング型に変換してみます。 教科書では，tidyrのgather()を使っていますが，これもwider()と同じ問題を持っているので，R神によるpivot_longer()を使います。\npivot_longer()の引数は，colsとnames_toとvalues_toです。\n\n\ncolsは，ロング型に変換するときに，どの変数を行にするかを指定\n\nnames_toは，ロング型に変換するときに，どの変数の値を使うかを指定\n\nvalues_toは，ロング型に変換するときに，どの変数の値を使うかを指定\n\n以下のコードでは，6時，12時，18時の3つの変数を行に，timeという変数の値を列に，tempという変数の値を値にして，df_longという変数に代入しています。\n\ndf_long &lt;- df_wide %&gt;%\n    pivot_longer(\n        cols = c(\"6時\", \"12時\", \"18時\"), # 縦にする変数\n        names_to = \"time\", # 縦にした変数名\n        values_to = \"temp\") # 値\nprint(df_long)\n\n# A tibble: 9 × 3\n  place time   temp\n  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n1 札幌  6時      12\n2 札幌  12時     15\n3 札幌  18時     13\n4 大阪  6時      20\n5 大阪  12時     24\n6 大阪  18時     22\n7 福岡  6時      23\n8 福岡  12時     25\n9 福岡  18時     25\n\n\n元のロング型に戻りました。\n\n別々のデータを結合させて使いたいことはよくあります。 例えば，次のようなデータを結合させる場合を考えてみましょう。\n\n\n\nname\nterm\nsale\n\n\n\nトヨタ\n2020\n1000\n\n\nトヨタ\n2021\n900\n\n\nトヨタ\n2022\n1400\n\n\nホンダ\n2020\n800\n\n\nホンダ\n2021\n700\n\n\nホンダ\n2022\n900\n\n\n\n\ndf_A &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(1000, 900, 1400, 800, 700, 900)\n)\n\n\n\n\nname\nterm\nsale\n\n\n\n日産\n2020\n400\n\n\n日産\n2021\n500\n\n\n日産\n2022\n900\n\n\nマツダ\n2020\n300\n\n\nマツダ\n2021\n400\n\n\nマツダ\n2022\n200\n\n\n\n\ndf_B &lt;- data.frame(\n    name = c(\"日産\", \"日産\", \"日産\", \"マツダ\", \"マツダ\", \"マツダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(400, 500, 900, 300, 400, 200)\n)\n\n\n\n\nname\nterm\nnetincome\n\n\n\nトヨタ\n2020\n100\n\n\nトヨタ\n2021\n90\n\n\nトヨタ\n2022\n150\n\n\nホンダ\n2020\n140\n\n\nホンダ\n2021\n100\n\n\nホンダ\n2022\n90\n\n\nスバル\n2020\n30\n\n\nスバル\n2021\n35\n\n\nスバル\n2022\n50\n\n\n\n\ndf_C &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\", \"スバル\", \"スバル\", \"スバル\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022),\n    netincome = c(100, 90, 150, 140, 100, 90, 30, 35, 50)\n)\n\nこの3つのデータを結合させる場合を考えます。 まず表Aと表Bは同じ変数をもつデータなので，これらを結合させるには，縦につなげる必要があります。 このような結合を縦結合とか連結といいます。 縦結合は，dplyrパッケージのbind_rows()関数を使います。\n\ndf_AB &lt;- bind_rows(df_A, df_B)\nprint(df_AB)\n\n     name term sale\n1  トヨタ 2020 1000\n2  トヨタ 2021  900\n3  トヨタ 2022 1400\n4  ホンダ 2020  800\n5  ホンダ 2021  700\n6  ホンダ 2022  900\n7    日産 2020  400\n8    日産 2021  500\n9    日産 2022  900\n10 マツダ 2020  300\n11 マツダ 2021  400\n12 マツダ 2022  200\n\n\n縦に結合できたので，トヨタ，ホンダ，日産，マツダのデータが入ったデータベースdf_ABができました。\n次に，このdf_ABとdf_Cを結合させます。 df_Cはnetincomeというdf_ABにはない変数があり，異なる変数をもつデータ同士の結合となります。 これらを結合させるには，横につなげる必要があります。 このような結合を結合といいます。\n結合には，\n\n\n内部結合(inner join)\n\n外部結合(outer join)\n\nがあり，外部結合には，\n\n\n完全結合(full join)\n\n左結合(left join)\n\n右結合(right join)\n\nがあります。\n内部結合は両方のデータベースに存在する観測値のみを保持するため，多くのデータが欠落することになりますが，外部結合は、少なくとも1つのテーブルに存在する観測値を保持するので，大部分のデータが欠落することにはなりません。\n3つの外部結合の特徴は次の通りです。\n\n\n完全結合は、xとyのすべての観測値を保持します。\n\n左結合は、xのすべての観測値を保持します。\n\n右結合は、yのすべての観測値を保持します。\n\nR神の神書籍R for Data Science (2e)の図がわかりやすいので，ここで紹介します。\n\n\n外部結合の例\n\n内部結合と3つの外部結合をベン図で表すとこうなります。\n\n\n外部結合のベン図\n\n最もよく使われる結合は左結合です。 元データに他のデータを結合する場合，元データに含まれるデータのみ保持したい場合が多いので，追加データを調べるときはいつもこれを使います。 左結合はデフォルトの結合であるべきで、他の結合を選択する強い理由がない限り、これを使用します。\nでは，df_ABとdf_Cを左結合してみましょう。 結合する際にキーとなる変数を指定する必要があります。 ここではnameとtermの2つの変数をキーとして指定します。 こうすることで，nameとtermが一致する観測値を結合します。\n\ndf_left &lt;- df_AB %&gt;%\n    left_join(df_C, by = c(\"name\", \"term\"))\nprint(df_left)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cには日産とマツダのデータがなく，スバルのデータがあります。 そのため左結合すると，日産とマツダのnetincomeにはNAが入り，スバルは欠落します。\ndf_ABとdf_Cを右結合してみましょう。\n\ndf_right &lt;- df_AB %&gt;%\n    right_join(df_C, by = c(\"name\", \"term\"))\nprint(df_right)\n\n    name term sale netincome\n1 トヨタ 2020 1000       100\n2 トヨタ 2021  900        90\n3 トヨタ 2022 1400       150\n4 ホンダ 2020  800       140\n5 ホンダ 2021  700       100\n6 ホンダ 2022  900        90\n7 スバル 2020   NA        30\n8 スバル 2021   NA        35\n9 スバル 2022   NA        50\n\n\ndf_Cには日産とマツダのデータがなく，トヨタとホンダとスバルのデータがあります。 そのため右結合すると日産とマツダのデータが欠落し，df_Cに含まれていたトヨタ，ホンダ，スバルのデータが残ります。 しかしスバルのsaleにはNAが入ります。\n最後に，df_ABとdf_Cを完全結合してみましょう。\n\ndf_full &lt;- df_AB %&gt;%\n    full_join(df_C, by = c(\"name\", \"term\"))\nprint(df_full)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n13 スバル 2020   NA        30\n14 スバル 2021   NA        35\n15 スバル 2022   NA        50\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cにはトヨタ，ホンダ，スバルのデータがあるため， 完全結合したdf_fullにはすべての企業のデータが入ります。 しかし，日産とマツダのnetincomeにはNAが入り，スバルのsaleにもNAが入ります。\nこのように，結合するデータによって，結合したデータに含まれるデータが変わるので，自分が望む結合後のデータの形を考えて，どの結合を使うかを選ぶ必要があります。\nついでに内部結合もやってみましょう。\n\ndf_inner &lt;- df_AB %&gt;%\n    inner_join(df_C, by = c(\"name\", \"term\"))\nprint(df_inner)\n\n    name term sale netincome\n1 トヨタ 2020 1000       100\n2 トヨタ 2021  900        90\n3 トヨタ 2022 1400       150\n4 ホンダ 2020  800       140\n5 ホンダ 2021  700       100\n6 ホンダ 2022  900        90\n\n\n予想どおり，両方のデータに含まれているトヨタとホンダだけが残り，片方のデータにしか含まれていない日産，マツダ，スバルのデータは欠落してしまいました。 このように内部結合は，両方のデータに存在する観測値のみを保持するため，多くのデータが欠落することになり，利用する機会があまりないです。\n\n前処理が終わったデータは，ファイルとして保存しておくとよいでしょう。 たとえば，df_leftをdf_left.csvというファイル名で保存するには，readrパッケージのwrite_csv()関数を使います。\nwrite_csv()関数の第1引数は保存したいオブジェクト(ここではdf_left)で，あとの主要な引数は，\n\nfile\nna = \"NA\"\nappend = FALSE\n\nとなります。 fileは保存するファイル名を指定します。 naは欠損値をどうするかを指定します。デフォルトではNAとなっています。 appendは，既存のファイルに追記するかどうかを指定します。基本は上書きなので，FALSEにしておきます。\n\nwrite_csv(df_left, file = \"df_left.csv\")\n\nこれで，作業ディレクトリにdf_left.csvが保存されました。 分析を進める際は，このようにして保存したデータを読み込んで使います。"
  },
  {
    "objectID": "presemi2023_04.html#データの読み込み",
    "href": "presemi2023_04.html#データの読み込み",
    "title": "Rによるデータ操作",
    "section": "",
    "text": "多くのプログラミング言語で、読み込むデータとして最も多いのが、CSV形式のファイルです。ファイルの拡張子は.csvです。 CSVとは、Comma Separated Valuesの略で、カンマで区切られたデータのことです。 次のような形をしています。\n企業ID,決算年月,売上高\n13,2020/03,1000\n13,2021/03,1200\n13,2022/03,1500\n24,2020/03,2000\n24,2021/03,2200\n24,2022/03,2500\n33,2020/03,3000\n33,2021/03,3200\n33,2022/03,3500\nこのように、値とコンマ,のみで構成されたファイルのため、余計な情報が入っておらず、またファイルサイズも小さく、加工が簡単なので、データのやり取りによく使われます。\nさっそくファイルを読み込んでみましょう。 ここでは、松浦のウェブサイトにあるデータkeshohin_2023.csvを読み込んでみます。 Rの場合は、read.csvという関数を使って、URLを直接指定して読み込むことができます。読み込んだデータをdfという変数に代入しています。\nExcelの場合は、インターネット上のデータを直接取り込むことは難しいので、いったんパソコンの中に保存してから、ファイルを開くとします。\n\n\n\n\n\n\nRの場合\n\n\n\nRでcsvファイルを読み込む最もシンプルな方法は、基本関数read.csv()を用いて、ファイル名やファイルを参照するURLを直接指定することです。\n\ndf &lt;- read.csv(\"https://so-ichi.com/kesho_2023.csv\")\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n\nURLhttps://so-ichi.com/kesho_2023.csvをブラウザに入力してファイルをダウンロードし、任意の場所に保存\n「ファイル」から「開く…」をクリックして、保存したCSVファイルを選択し「開く」をクリック\n\n\n\n\nMS Excelのファイルは拡張子が.xlsx、古いMS Excelだと.xlsです。 RでExcelファイルを読み込むときは、read_excelという関数を使います。 Excelファイルを用意するのが面倒なので、ここではこうやれば読み込めるよ、というコードだけ説明します。ファイル名はhoge.xlsxとします。\n\n\n\n\n\n\nRの場合\n\n\n\nRでMS Excelのファイルを読み込むには、readxlパッケージのread_excel()関数を用います。\n\ndfx &lt;- readxl::read_excel(\"hoge.xlsx\")\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n\n「ファイル」から「開く…」をクリックし、保存してあるExcelファイルを選択し「開く」をクリック\n\n\n\nMS Excelの問題点は、目的のデータがどのExcelファイルに入っていて、それがどこに保存されているのかを覚えておかないと、いちいちファイルを開いて探さないといけないことです。\nRだとソースコードを残すことができますので、 どこにあるファイルを読み込んで、そこに何が入っているのかをコメントで残しておくことができます。"
  },
  {
    "objectID": "presemi2023_04.html#読み込んだデータの確認",
    "href": "presemi2023_04.html#読み込んだデータの確認",
    "title": "Rによるデータ操作",
    "section": "",
    "text": "MS Excelは読み込んだデータが画面上に表として表示されていますが、Rでは変数に代入しただけでは、画面には何も表示されません。 そこでデータの中身を確認する関数として、次のようなものがあります。\n\n\nhead() : 最初の数行を表示させる基本関数\n\nstr() : データの構造を表示させる基本関数\n\nglimpse() : データの構造を表示させるdplyrパッケージの関数\n\nnames() : 変数名を表示させる基本関数\n\nこれらを使って、データの中身を確認し、データの形に適した処理方法を学ぶ必要があります。 以下では、head()関数を使って、データの最初の数行を表示させてから、str()関数でデータの中の変数とその型を確認します。\nExcelは目視が中心ですが、見ただけでは、文字列なのか数なのかが分からないので、やはりデータの型は確認する必要があります。\n\n\n\n\n\n\nRの場合\n\n\n\n\nhead(df)\n\n\n\n\ncode\nname\nterm\nshubetsu\nren\nsales\nnetincome\nmonth\n\n\n\n641\n資生堂\n1985/11\n10\n1\n371040\n14526\n12\n\n\n641\n資生堂\n1986/11\n10\n1\n375294\n13632\n12\n\n\n641\n資生堂\n1987/11\n10\n1\n378977\n9014\n12\n\n\n641\n資生堂\n1988/11\n10\n1\n401311\n9515\n12\n\n\n641\n資生堂\n1989/03\n10\n1\n130654\n4265\n4\n\n\n641\n資生堂\n1990/03\n10\n1\n456352\n11362\n12\n\n\n\n\n\nstr(df)\n\n'data.frame':   130 obs. of  8 variables:\n $ code     : int  641 641 641 641 641 641 641 641 641 641 ...\n $ name     : chr  \"資生堂\" \"資生堂\" \"資生堂\" \"資生堂\" ...\n $ term     : chr  \"1985/11\" \"1986/11\" \"1987/11\" \"1988/11\" ...\n $ shubetsu : int  10 10 10 10 10 10 10 10 10 10 ...\n $ ren      : int  1 1 1 1 1 1 1 1 1 1 ...\n $ sales    : int  371040 375294 378977 401311 130654 456352 517252 553299 561549 549178 ...\n $ netincome: int  14526 13632 9014 9515 4265 11362 15850 16011 13290 14668 ...\n $ month    : int  12 12 12 12 4 12 12 12 12 12 ...\n\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n画面を見て確認する。\n\n\nこのデータには，\n\n\ncode : 企業コード (文字列)\n\nname : 企業名 (文字列)\n\nterm : 決算年月 (文字列)\n\nshubetsu : 会計基準の種類 (数値)\n\nren : 連結か単体 (数値)\n\nsales : 売上高 (数値)\n\nnetincome : 当期純利益 (数値)\n\nmonth : 決算月数 (数値)\n\nが入っています。"
  },
  {
    "objectID": "presemi2023_04.html#データの整形",
    "href": "presemi2023_04.html#データの整形",
    "title": "Rによるデータ操作",
    "section": "",
    "text": "さあ面白くなってきました。 次はデータを操作していきます。 Rによるデータ操作では、tidyverseパッケージ群のdplyrパッケージが大活躍します。\ndplyrパッケージの関数の中でもよく使うものに次のようなものがあります。\n\n\nselect() : 変数を選択する\n\nfilter() : データを抽出する\n\nmutate() : 変数を追加する\n\narrange() : データを並び替える\n\nsummarise() : データを集計する\n\ngroup_by() : データをグループ化する\n\nRでソースコードを書く際に，理解しやすく，読みやすいコードにするために非常に便利なのが，パイプ演算子%&gt;%です。 パイプ演算子%&gt;%は，左側のオブジェクトを右側の関数の第一引数に渡すという処理を行います。 たとえば，\n\n(1 + 2) %&gt;% sqrt()\n\n[1] 1.732051\n\n\nと書くと，sqrt(1 + 2)と同じ意味になります。 たとえば，rnorm()関数を使って平均0，分散1の標準正規分から100個のデータを作りたいとします。 rnorm()関数は3つの引数を取ります。\n\nデータの個数\n平均\n標準偏差\n\nしたがって，rnorm(100, 0, 1)と書くと，平均0，分散1の標準正規分布から100個のデータを取り出すことができます。 パイプ演算子を使うと，\n\n100 %&gt;% rnorm(mean = 0, sd = 1)\n\n  [1]  0.063002985  0.844220595 -0.859654144 -0.002598543 -0.673578358\n  [6]  1.639704853 -1.549973784  0.295819981  0.964837474 -0.020988105\n [11]  0.145755011 -0.572766400  0.211520038  0.142918140  1.200105131\n [16] -1.356500340  0.160727176  2.107029445  0.684120140 -1.131749423\n [21]  0.065803029 -1.053419403  0.071881357  0.393473855  1.345375015\n [26]  0.182275159  0.106148856  0.770796621  0.282349942  2.075331770\n [31] -0.647271035 -0.816778157 -0.467397752 -0.843322581 -0.593600586\n [36] -0.726601884 -1.411886656 -0.106748290  0.099307863 -0.783453133\n [41] -1.625140162  0.702656323 -0.482923735 -0.612147194 -0.315351199\n [46]  0.080216155  0.599338123 -1.518915104 -0.829310311  2.169091051\n [51]  0.998798468  0.160424232  0.881413387  0.556656966  1.241829913\n [56] -0.433506814  0.799280369 -1.321652130 -0.886215684  1.297740051\n [61]  0.541221113  0.187269574 -0.799209946  2.096347220 -1.155127641\n [66]  0.943143604  0.988734856  0.391969098 -0.243363347  1.888303431\n [71]  0.405853978  0.888160467  1.560873419  0.266495427 -0.157736359\n [76] -0.910317880  0.863239959  1.142179270 -0.785002218 -1.392131708\n [81] -0.625873931 -0.955372590  0.957322565 -1.134434260 -0.285509488\n [86] -2.115343597  0.653078769  2.399415564 -0.140698689  2.523217876\n [91] -0.113023442 -1.174571457  0.638856097  1.577217187 -0.093800828\n [96] -1.445292349 -1.377312236  0.546255685 -0.273281621 -0.012987443\n\n\nとなります。 これはrnorm()関数の第1引数がデータの個数なので，そこに100を渡しています。 ここで平均に値を渡したい場合を考えます。 mean引数は第2引数なので，パイプ演算子では自動で渡してくれません。 そこで.を使って渡す場所を指定してあげます。\n\n100 %&gt;% rnorm(100, mean =. , sd = 1)\n\n  [1]  98.48961 100.51837 102.71930  99.87553 100.22687 100.60825  98.95075\n  [8]  99.76190 101.62591  99.25217 100.74600  98.98241 101.29855  99.40596\n [15]  99.04232  99.99752 101.31296  99.49977  99.25496  99.98878  99.25437\n [22] 102.36015  97.36997  99.75281 100.29611  99.95644  99.57598  99.30659\n [29] 101.68088  99.94344 100.34321 101.92322 100.79492  99.63788 100.74923\n [36] 100.67090 100.36256  99.68836  99.49566  99.78931 100.07927 100.76766\n [43]  98.99613  98.94864 100.18985  98.90317  99.47791 100.23840  99.23254\n [50] 101.25166 101.78315 101.38781 100.52495 100.26678 100.68225  99.52430\n [57]  98.69746 100.47472  98.41986 101.24240 101.76202 100.93738  99.64664\n [64]  99.45147  99.81417  99.51845 100.14589 100.03142 101.17669  98.30816\n [71] 101.47371  99.75616 100.70050 100.50162 100.84103  98.28449  99.49989\n [78] 100.07390 100.24002  99.68234 101.40671  99.42597  98.98013  99.46850\n [85] 100.80821  99.81356 100.44890  98.97466 101.58507  99.99225  99.60774\n [92]  97.93813 101.02105  98.66530 101.36966  98.61330  99.78128 100.83186\n [99]  98.88836  99.45513\n\n\nこれで平均100，標準偏差1の正規分布から100個のデータを取り出せました。\nこれだけだとパイプ演算子%&gt;%の便利さが伝わらないので，たとえば次のような処理を考えてみましょう。\n\n2020年のデータを抜き出し，\n売上高当期純利益率を計算し，\n産業グループごとに平均を計算する\n利益率が高い順番に並び替える\n\nをパイプ演算子を使って書くと，\n\ndf &lt;- df %&gt;%\n    filter(term == \"2020\") %&gt;% # 2020年のみ\n    mutate( # 新しい変数を作成\n        ratio = netincome / sales # 売上高利益率\n        ) %&gt;%\n    group_by(sangyo) %&gt;% # 産業グループごとに\n    summarise( # 平均を計算\n        mean_ratio = mean(ratio) # 利益率の平均\n        ) %&gt;%\n    arrange(desc(mean_ratio)) # 利益率の高い順に並び替え\n\nのように，上から順番に処理を実行し，次に渡す，というプロセスが分かりやすく，読みやすいコードができました。 コメントも残しておけば，後から見返したときにも分かりやすいですし，他人によんでもらうときも親切ですね。 したがって，以下ではパイプ演算子を駆使して，データ操作を行っていきます。\n\n新しい変数を作成するには，dplyrパッケージのmutate()関数を使います。 先ほど読みこんだデータから，当期純利益を売上高で除して売上高当期純利益率を計算して，ratioという変数を作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        ratio = netincome / sales # 売上高利益率\n        )\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nI1のセルに変数名を表すratioと入力する。 F列のsaleとG列のnetincomeを使って，I2のセルに\n= G2 / F2\nとし，I2セルの右下の四角をダブルクリックすると，自動で下のセルにも同じ計算がコピーされる。\n\n\n次に，ある変数の値に応じて異なる値をとる変数を作るには，mutate()関数とifelse()関数を同時に使います。ifelse()関数は次のような引数を取ります。\n\nifelse(条件, 条件が真のときの値, 条件が偽のときの値)\n\n先ほど計算した売上高当期純利益率が5%以上ならば「高い」，そうでなければ「低い」という変数highlowを作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        highlow = ifelse(ratio &gt;= 0.05, \"高い\", \"低い\") # 売上高利益率\n        )\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nJ1セルにhighlowと入力する。 J2セルに\n= if(I2 &gt;= 0.05, \"高い\", \"低い\")\nと入力し，J2セルの右下の四角をダブルクリックすると，自動で下のセルにも同じ計算がコピーされる。\n\n\nExcelだとセルの移動や変数名の入力，計算式の入力，セルのコピーといった作業で，キーボードとマウスを行ったり来たりする必要があり，若干面倒です。\nついでに，mutate()関数を使って，長すぎる企業名を短くしてみます。 ここでは「ポーラ・オルビスホールディングス」を「ポーラ」と略してみます。 mutate()とifelseを使って，name変数の値が「ポーラ・オルビスホールディング」ならば「ポーラ」という値をとる変数name上書きします。を作ってみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        name = ifelse(\n            name == \"ポーラ・オルビスホールディング\", \"ポーラ\", name) # 企業名\n        )\n\n\n\n\nデータを抽出するには，dplyrパッケージのfilter()関数を使います。 filter()関数は，次のような引数を取ります。\n\nfilter(データ, 条件)\n\n先ほど作成したratio2が「高い」企業だけを抽出してみましょう。 filter()関数の中の条件は，==を使って，\"高い\"という文字列と一致するかどうかを確認しています。 ここでは，highlow変数の値が\"高い\"と一致する企業だけを抽出し，df_highという変数に代入しています。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf_high &lt;- df %&gt;%\n    filter(highlow == \"高い\") # 条件\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nhighlow変数のあるJ列をクリックして枠を移動させ，上の「ホーム」メニューから「並び替えとフィルター」をクリックし，「フィルター」をクリックする。 すると，変数名highlowのヨコに漏斗のようなマークが出るので，それをクリックすると，記録されたデータの種類が出てくるので，「高い」だけにチェックが入った状態にする。\n\n\nExcelのクリック回数が増えてきましたね。\nfilter()関数の中で指定する条件は，\n\n\n== : 一致する\n\n!= : 一致しない\n\n&gt;=や&lt;= : 以上や以下\n\n&gt;や&lt; : より大きいや小さい\n\n%in% : いずれかに一致する\n\nなどがあります。またこれらの条件を組み合わせることもできます。 その場合は，以下のように&や|を使います。\n\n\n& : かつ\n\n| : または\n\nたとえば，資生堂と花王を抽出したり，売上高当期純利益率が5%以上かつ売上高が1000億円以上の企業を抽出するには， 次のように書きます。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf_shiseido_kao &lt;- df %&gt;%\n    filter(name %in% c(\"資生堂\", \"花王\")) # 2社だけ抽出\ndf_high2 &lt;- df %&gt;%\n    filter(ratio &gt;= 0.05 & sales &gt;= 1000) # 2条件を同時に満たす\n\n\n\n\nデータの中から必要な変数だけを選択するには，dplyrパッケージのselect()関数を使います。 たとえば，先ほど作成したdfから，企業コード，企業名，売上高当期純利益率の3つの変数だけを選択してみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf3 &lt;- df %&gt;%\n    select(code, name, ratio) # 3つの変数だけ選択\n\n\n\n\n\n\n\n\n\nMS Excelの場合\n\n\n\nオリジナルのデータをコピーして，下のタブから別のシートを選択し，そこに貼り付ける。\n貼り付けたデータからcodeとnameとratio以外の列を削除する。\n\n\nMS Excelだと，不要なデータを削除するのが怖い作業で，必要になったときにまた元のデータを読み込まないといけないので，面倒ですし，ミスのもとです。\nselect()関数の中で使えるものには，以下のようなものがあります。 とても便利なので，覚えておくとよいでしょう。\n\n\n- : 除外する (-ratioとかくとratio以外を選択)\n\n: : 連続する変数を選択 (code:renと書くとcodeからrenまでを選択)\n\nstarts_with() : ある文字列で始まる変数を選択\n\nends_with() : ある文字列で終わる変数を選択\n\nたとえば，mutate()で新しい変数を作る場合に，変数名に法則性をつけておけば，starts_with()を使って一気に変数を選択することができます。 たとえば，比率を表す変数はratioで始まるように統一しておく，基準化した変数には_Kを最後に付けておく，などです。\n\nデータを並び替えるには，dplyrパッケージのarrange()関数を使います。 たとえば，先ほど作成したdfから，売上高当期純利益率を並び替えてみましょう。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf %&gt;%\n    select(name, ratio) %&gt;% # 2つの変数だけ選択\n    arrange(ratio) %&gt;%\n    head()\n\n\n\n\nname\nratio\n\n\n\nポーラ\n-0.4349581\n\n\n資生堂\n-0.0757638\n\n\n資生堂\n-0.0385906\n\n\n資生堂\n-0.0216680\n\n\n資生堂\n-0.0138412\n\n\n資生堂\n-0.0126617\n\n\n\n\n\n\n\n\n小さい順に並び替えられました。 大きい順にするには，desc()関数を使います。 ついでにknitrパッケージのkabble()関数で表を見やすく加工してみます。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf %&gt;%\n    select(name, ratio) %&gt;% # 2つの変数だけ選択\n    arrange(desc(ratio)) %&gt;%\n    head(10) %&gt;% # 先頭の10行\n    knitr::kable(booktabs = TRUE) # 表をきれいに表示\n\n\n\nname\nratio\n\n\n\nポーラ\n0.1110647\n\n\n花王\n0.1019213\n\n\n花王\n0.0987028\n\n\n花王\n0.0986613\n\n\nユニ・チャーム\n0.0929384\n\n\n花王\n0.0912752\n\n\nポーラ\n0.0895507\n\n\nユニ・チャーム\n0.0891383\n\n\nユニ・チャーム\n0.0890311\n\n\nユニ・チャーム\n0.0869777\n\n\n\n\n\n\n\nこれでどの企業のどの年度の売上高当期純利益率が大きいのかが一目瞭然になりました。\nMS Excelだと，\n\n\n\n\n\n\nMS Excelの場合\n\n\n\n「ホーム」メニューから「並び替えとフィルター」をクリックし，「昇順」をクリックする。\n必要なデータだけ選択してコピペすれば，表が完成します。\n\n\nとなります。 簡単ですが，MS Excelの並び替えは注意が必要で，並び替えた後にデータを追加すると，並び替えが解除されてしまい，元に戻せなくなったり，空列があると並び替えがうまくいかなかったりします。\n\n人間には読みやすいけれどパソコンは読みにくい，というデータの形式があります。 例えば下の表を見てみましょう。\n\n\n地点\n6時\n12時\n18時\n\n\n\n札幌\n12℃\n15℃\n13℃\n\n\n大阪\n20℃\n24℃\n22℃\n\n\n福岡\n23℃\n25℃\n25℃\n\n\n\nこのような形のデータをワイド形式(wide)といいます。 天気予報で見かけそうなこの表は，人間にとっては分かりやすいですが，実はコンピュータにとっては，分かりにくいものです。 コンピュータが理解しやすいデータとして表すなら，次のような表になります。\n\n\n地点\n時間\n気温(℃)\n\n\n\n札幌\n6時\n12\n\n\n札幌\n12時\n15\n\n\n札幌\n18時\n13\n\n\n大阪\n6時\n20\n\n\n大阪\n12時\n24\n\n\n大阪\n18時\n22\n\n\n福岡\n6時\n23\n\n\n福岡\n12時\n25\n\n\n福岡\n18時\n25\n\n\n\nこのような形式のデータをロング型(long)といいます。 このロング型のうち，一定のルールに従って作成されたデータを整然データ(tidy data)といい，Rでは，この整然データを扱うことが多いです。\nR神Hadley Wickham氏は，データの型を理解することを，データ分析の第一歩とし，その一貫として整然データという考え方を提唱しています。 整然データとは，次のような原則に従って構築されたデータのことです(Wickham, 2014) 参考https://id.fnshr.info/2017/01/09/tidy-data-intro/。\n\n個々の変数 (variable) が1つの列 (column) をなす。\n個々の観測 (observation) が1つの行 (row) をなす。\n個々の観測の構成単位の類型 (type of observational unit) が1つの表 (table) をなす。\n個々の値 (value) が1つのセル (cell) をなす\n\n上の表は，地点，時間，天気，気温の4つの変数があり1つの列をつくっています(ルール1)。 大阪12時の天気は雨，気温は12℃といったように1つの行が1つの観測を表しています(ルール2)。 このデータには種類の異なる観測はない(ルール3)。 また，各セルには1つの値が入っています(ルール4)。 よって，これが整然データとなります。\n上のロング型の天気データを使って，ロングからワイド，ワイドからロングの操作を学びましょう。\nまずデータを作ります。\n\ndf_weather &lt;- data.frame(\n    place = c(\"札幌\",\"札幌\",\"札幌\",\"大阪\",\"大阪\",\"大阪\",\"福岡\",\"福岡\",\"福岡\"), # 各地を3個ずつ\n    time = rep(c(\"6時\", \"12時\", \"18時\"),3),\n    temp = c(12,15,13,20,24,22,23,25,25)\n)\nprint(df_weather)\n\n  place time temp\n1  札幌  6時   12\n2  札幌 12時   15\n3  札幌 18時   13\n4  大阪  6時   20\n5  大阪 12時   24\n6  大阪 18時   22\n7  福岡  6時   23\n8  福岡 12時   25\n9  福岡 18時   25\n\n\nこれはロング型の整然データとなります。\n\nRで使うならこのままでよいのですが，あえてこれをワイド型に変えてみましょう。\n教科書で使用されているspread()は「根本的に設計ミスってた」と公式で発表されているので，R神が作ったpivot_wider()を使います。widerという名前の通り，ワイド型に変換する関数です。\npivot_wider()の引数は，names_fromとvalues_fromです。names_fromは，ワイド型に変換するときに，どの変数を列にするかを指定します。values_fromは，ワイド型に変換するときに，どの変数の値を使うかを指定します。\n以下のコードでは，time変数の値を列に，temp変数の値を値にして，df_wideという変数に代入しています。\n\ndf_wide &lt;- df_weather %&gt;%\n    pivot_wider(names_from = time, values_from = temp)\nprint(df_wide)\n\n# A tibble: 3 × 4\n  place `6時` `12時` `18時`\n  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 札幌     12     15     13\n2 大阪     20     24     22\n3 福岡     23     25     25\n\n\nこれでワイド型に変換できました。\n\n次に，このワイド型のデータをロング型に変換してみます。 教科書では，tidyrのgather()を使っていますが，これもwider()と同じ問題を持っているので，R神によるpivot_longer()を使います。\npivot_longer()の引数は，colsとnames_toとvalues_toです。\n\n\ncolsは，ロング型に変換するときに，どの変数を行にするかを指定\n\nnames_toは，ロング型に変換するときに，どの変数の値を使うかを指定\n\nvalues_toは，ロング型に変換するときに，どの変数の値を使うかを指定\n\n以下のコードでは，6時，12時，18時の3つの変数を行に，timeという変数の値を列に，tempという変数の値を値にして，df_longという変数に代入しています。\n\ndf_long &lt;- df_wide %&gt;%\n    pivot_longer(\n        cols = c(\"6時\", \"12時\", \"18時\"), # 縦にする変数\n        names_to = \"time\", # 縦にした変数名\n        values_to = \"temp\") # 値\nprint(df_long)\n\n# A tibble: 9 × 3\n  place time   temp\n  &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n1 札幌  6時      12\n2 札幌  12時     15\n3 札幌  18時     13\n4 大阪  6時      20\n5 大阪  12時     24\n6 大阪  18時     22\n7 福岡  6時      23\n8 福岡  12時     25\n9 福岡  18時     25\n\n\n元のロング型に戻りました。\n\n別々のデータを結合させて使いたいことはよくあります。 例えば，次のようなデータを結合させる場合を考えてみましょう。\n\n\n\nname\nterm\nsale\n\n\n\nトヨタ\n2020\n1000\n\n\nトヨタ\n2021\n900\n\n\nトヨタ\n2022\n1400\n\n\nホンダ\n2020\n800\n\n\nホンダ\n2021\n700\n\n\nホンダ\n2022\n900\n\n\n\n\ndf_A &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(1000, 900, 1400, 800, 700, 900)\n)\n\n\n\n\nname\nterm\nsale\n\n\n\n日産\n2020\n400\n\n\n日産\n2021\n500\n\n\n日産\n2022\n900\n\n\nマツダ\n2020\n300\n\n\nマツダ\n2021\n400\n\n\nマツダ\n2022\n200\n\n\n\n\ndf_B &lt;- data.frame(\n    name = c(\"日産\", \"日産\", \"日産\", \"マツダ\", \"マツダ\", \"マツダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(400, 500, 900, 300, 400, 200)\n)\n\n\n\n\nname\nterm\nnetincome\n\n\n\nトヨタ\n2020\n100\n\n\nトヨタ\n2021\n90\n\n\nトヨタ\n2022\n150\n\n\nホンダ\n2020\n140\n\n\nホンダ\n2021\n100\n\n\nホンダ\n2022\n90\n\n\nスバル\n2020\n30\n\n\nスバル\n2021\n35\n\n\nスバル\n2022\n50\n\n\n\n\ndf_C &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\", \"スバル\", \"スバル\", \"スバル\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022),\n    netincome = c(100, 90, 150, 140, 100, 90, 30, 35, 50)\n)\n\nこの3つのデータを結合させる場合を考えます。 まず表Aと表Bは同じ変数をもつデータなので，これらを結合させるには，縦につなげる必要があります。 このような結合を縦結合とか連結といいます。 縦結合は，dplyrパッケージのbind_rows()関数を使います。\n\ndf_AB &lt;- bind_rows(df_A, df_B)\nprint(df_AB)\n\n     name term sale\n1  トヨタ 2020 1000\n2  トヨタ 2021  900\n3  トヨタ 2022 1400\n4  ホンダ 2020  800\n5  ホンダ 2021  700\n6  ホンダ 2022  900\n7    日産 2020  400\n8    日産 2021  500\n9    日産 2022  900\n10 マツダ 2020  300\n11 マツダ 2021  400\n12 マツダ 2022  200\n\n\n縦に結合できたので，トヨタ，ホンダ，日産，マツダのデータが入ったデータベースdf_ABができました。\n次に，このdf_ABとdf_Cを結合させます。 df_Cはnetincomeというdf_ABにはない変数があり，異なる変数をもつデータ同士の結合となります。 これらを結合させるには，横につなげる必要があります。 このような結合を結合といいます。\n結合には，\n\n\n内部結合(inner join)\n\n外部結合(outer join)\n\nがあり，外部結合には，\n\n\n完全結合(full join)\n\n左結合(left join)\n\n右結合(right join)\n\nがあります。\n内部結合は両方のデータベースに存在する観測値のみを保持するため，多くのデータが欠落することになりますが，外部結合は、少なくとも1つのテーブルに存在する観測値を保持するので，大部分のデータが欠落することにはなりません。\n3つの外部結合の特徴は次の通りです。\n\n\n完全結合は、xとyのすべての観測値を保持します。\n\n左結合は、xのすべての観測値を保持します。\n\n右結合は、yのすべての観測値を保持します。\n\nR神の神書籍R for Data Science (2e)の図がわかりやすいので，ここで紹介します。\n\n\n外部結合の例\n\n内部結合と3つの外部結合をベン図で表すとこうなります。\n\n\n外部結合のベン図\n\n最もよく使われる結合は左結合です。 元データに他のデータを結合する場合，元データに含まれるデータのみ保持したい場合が多いので，追加データを調べるときはいつもこれを使います。 左結合はデフォルトの結合であるべきで、他の結合を選択する強い理由がない限り、これを使用します。\nでは，df_ABとdf_Cを左結合してみましょう。 結合する際にキーとなる変数を指定する必要があります。 ここではnameとtermの2つの変数をキーとして指定します。 こうすることで，nameとtermが一致する観測値を結合します。\n\ndf_left &lt;- df_AB %&gt;%\n    left_join(df_C, by = c(\"name\", \"term\"))\nprint(df_left)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cには日産とマツダのデータがなく，スバルのデータがあります。 そのため左結合すると，日産とマツダのnetincomeにはNAが入り，スバルは欠落します。\ndf_ABとdf_Cを右結合してみましょう。\n\ndf_right &lt;- df_AB %&gt;%\n    right_join(df_C, by = c(\"name\", \"term\"))\nprint(df_right)\n\n    name term sale netincome\n1 トヨタ 2020 1000       100\n2 トヨタ 2021  900        90\n3 トヨタ 2022 1400       150\n4 ホンダ 2020  800       140\n5 ホンダ 2021  700       100\n6 ホンダ 2022  900        90\n7 スバル 2020   NA        30\n8 スバル 2021   NA        35\n9 スバル 2022   NA        50\n\n\ndf_Cには日産とマツダのデータがなく，トヨタとホンダとスバルのデータがあります。 そのため右結合すると日産とマツダのデータが欠落し，df_Cに含まれていたトヨタ，ホンダ，スバルのデータが残ります。 しかしスバルのsaleにはNAが入ります。\n最後に，df_ABとdf_Cを完全結合してみましょう。\n\ndf_full &lt;- df_AB %&gt;%\n    full_join(df_C, by = c(\"name\", \"term\"))\nprint(df_full)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n13 スバル 2020   NA        30\n14 スバル 2021   NA        35\n15 スバル 2022   NA        50\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cにはトヨタ，ホンダ，スバルのデータがあるため， 完全結合したdf_fullにはすべての企業のデータが入ります。 しかし，日産とマツダのnetincomeにはNAが入り，スバルのsaleにもNAが入ります。\nこのように，結合するデータによって，結合したデータに含まれるデータが変わるので，自分が望む結合後のデータの形を考えて，どの結合を使うかを選ぶ必要があります。\nついでに内部結合もやってみましょう。\n\ndf_inner &lt;- df_AB %&gt;%\n    inner_join(df_C, by = c(\"name\", \"term\"))\nprint(df_inner)\n\n    name term sale netincome\n1 トヨタ 2020 1000       100\n2 トヨタ 2021  900        90\n3 トヨタ 2022 1400       150\n4 ホンダ 2020  800       140\n5 ホンダ 2021  700       100\n6 ホンダ 2022  900        90\n\n\n予想どおり，両方のデータに含まれているトヨタとホンダだけが残り，片方のデータにしか含まれていない日産，マツダ，スバルのデータは欠落してしまいました。 このように内部結合は，両方のデータに存在する観測値のみを保持するため，多くのデータが欠落することになり，利用する機会があまりないです。"
  },
  {
    "objectID": "presemi2023_04.html#データの保存",
    "href": "presemi2023_04.html#データの保存",
    "title": "Rによるデータ操作",
    "section": "",
    "text": "前処理が終わったデータは，ファイルとして保存しておくとよいでしょう。 たとえば，df_leftをdf_left.csvというファイル名で保存するには，readrパッケージのwrite_csv()関数を使います。\nwrite_csv()関数の第1引数は保存したいオブジェクト(ここではdf_left)で，あとの主要な引数は，\n\nfile\nna = \"NA\"\nappend = FALSE\n\nとなります。 fileは保存するファイル名を指定します。 naは欠損値をどうするかを指定します。デフォルトではNAとなっています。 appendは，既存のファイルに追記するかどうかを指定します。基本は上書きなので，FALSEにしておきます。\n\nwrite_csv(df_left, file = \"df_left.csv\")\n\nこれで，作業ディレクトリにdf_left.csvが保存されました。 分析を進める際は，このようにして保存したデータを読み込んで使います。"
  },
  {
    "objectID": "presemi2023_07.html",
    "href": "presemi2023_07.html",
    "title": "統計的仮説検定",
    "section": "",
    "text": "第7回講義の到達目標は、\n\n統計的検定の基礎を理解し，説明することができる。\n帰無仮説と対立仮説を理解し，説明することができる。\n第1種の過誤と第2種の過誤を理解し，説明することができる。\n\n第6回講義の到達度検証のための課題は、以下の通りです。\n\n標本を構築し，記述統計量を計算する。\nシミュレーションを利用して，統計量を作る事が出来る。\n信頼区間を計算することができる\n\n第8章「統計的仮説検定」は統計学における最重要学習内容の「検定」について学びます。 検定は、母集団の母数(パラメータ)に関する仮説を立てて、その仮説が正しいかどうかを検証する方法です。 統計学は、観察できない未知の母数をもつ母集団から標本を抽出し、標本の特徴をもとに母集団の母数を推定することを目的としています。 そのため、自分の手元にある標本が、母集団の母数を推定するための有効な情報をもっているかどうかを検証する必要があります。\nテレビCMを流せば本当に売上が上がるのか、を調べたいと思い、標本を集めて分析しようとし、その結果、テレビCMを流すと売上が上がるという結果が出たとします。 しかし、この結果が、本当は母集団ではCMと売上高は無関係であるのに、たまたま集めた標本で関係があるように見えているだけなのか、それとも母集団でもCMと売上高は関係があるのか、を検証する必要があります。 統計的仮説検定は、(頻度主義)統計学で最も重要なものですので、何度も読んで理解し、そして使いこなせるようになってください。\n\n母集団の母数(パラメータ)を知りたいけれど観察できないので、母集団から標本(sample)を抽出して、標本の特徴をつかって母集団の母数を予想しようとすることを、統計的推定(statistical estimation)といいます。\nこの章では、母数に対して立てた仮説が妥当かどうかを検証する方法を学びます。\n\n仮説をたてる\n有意水準を設定する\n検定統計量を計算する\n検定統計量の確率分布を求めて有意水準で棄却域を決める\n検定統計量が棄却域に入るかどうかを確認する\n\n\n仮説の立て方は、帰無仮説(null hypothesis)と対立仮説(alternative hypothesis)の2つに分けられます。 (頻度主義)統計学では、本当に示したい仮説(対立仮説)ではなく、その排反事象である帰無仮説を立てて、帰無仮説が棄却されることで、対立仮説が採択されるという考え方をとります。 排反事象(incompatible events)とは、同時に起こりえない事象のことです。\n例えば、\n\n帰無仮説\\(H_0\\) : 利益反応係数\\(ERC\\)はゼロである。　\\(ERC =0\\)\n\n対立仮説\\(H_A\\) : 利益反応係数$\\(ERC\\)はゼロではない。 \\(ERC \\not = 0\\)\n\n\nというように、帰無仮説は対立仮説と背反となるように立てます。 また、帰無仮説は母数に対して等号で成立する仮説となります。 なぜこんなことをするのかというと、母数がある特定の値をとる、という帰無仮説を否定するためには、その値以外の取りうることを示せばよいだけですが、もし対立仮説が\\(ERC=0\\)であったなら、これを示すためには、\\(ERC \\not = 0\\)を示す必要があります。 これは不可能です。\n\n次に、どんなときに帰無仮説を棄却するのかを決めます。 帰無仮説として仮定した母数の値から標本から計算した値が大きく異なる場合には、帰無仮説を棄却する、とします。 このとき、どのくらい帰無仮説として仮定した母数の値から離れたら帰無仮説を棄却するのかを決めるのが有意水準(significance level)です。優位水準と書かないように気をつけましょう。\n有意水準は、\\(\\alpha\\)で表され、会計研究では\\(0.01\\)、\\(0.05\\)、\\(0.10\\)が使われることが多いです。 標本サイズが大きい場合だと、\\(0.001\\)とか\\(0.005\\)とかも使われます。\n例えば、母集団の平均\\(\\mu\\)が\\(0\\)である、という帰無仮説を考えます。このとき対立仮説は母集団の平均\\(\\mu\\)は\\(0\\)ではない、というものです。 標本サイズ\\(100\\)の標本から抽出した標本平均の分布から計算した\\(t\\)値が自由度\\(100-1\\)の\\(t\\)分布にしたがうとき、\n\\[\nt = \\frac{\\bar{x} - \\mu}{s/\\sqrt{n}}\n\\] となり，今\\(\\bar{x} = \\mu\\)という帰無仮説を仮定しているので、\\(t = 0\\)となります。\n\n# 自由度を設定\nn = 100\ndf &lt;- n-1\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df) # 変数yを作成\n\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x = x, y = y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &lt;= ql), fill = \"blue\", alpha = 0.3) + geom_area(data = data %&gt;% filter(x &gt;= qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + geom_vline(xintercept = 0, color = \"red\")\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\")\ng &lt;- g + geom_hline(yintercept = 0)\ng &lt;- g + annotate(geom = \"text\", x = 2.4, y = 0.08, label = \"α/2\", size = 10)\ng &lt;- g + annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = 2.4, xend = 2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = -2.4, y = 0.08, label = \"α/2\", size = 10) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = -2.4, xend = -2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  ) + mystyle\nprint(g)\n\n\n\n\n\n標本から平均などの統計量を計算し，その統計量は確率変数なので分布をもち，その分布 \\[\n\\begin{align*}\nt = \\frac{\\bar{x} - \\mu}{SE} = \\displaystyle \\frac{\\bar{x} - \\mu}{\\frac{u}{\\sqrt{n}}}\n\\end{align*}\n\\] を検定統計量\n\n母平均\\(62\\)、母標準偏差\\(5\\)の正規分布にしたがう変数\\(X\\)を考えます。 母集団のサイズは10000とします。 この母集団の分布は次のようになっています。\n\nN &lt;- 10000\nX &lt;- rnorm(N, 62, 5) # 母集団\nggplot(data.frame(X)) + aes(X) + geom_histogram() + ggtitle(\"母集団\") + geom_vline(xintercept = 62, color = \"red\") + mystyle\n\n\n\n\nこの母集団から標本サイズ100の標本を100個とりだし、平均を100個計算します。\n\nn &lt;- 100\nsample_mean &lt;- numeric(n) # 空の箱を用意\nfor(i in 1:100){\n  x_sample &lt;- sample(X, n) # 標本を抽出\n  sample_mean[i] &lt;- mean(x_sample) # 標本平均を計算\n}\ndf_mean &lt;- data.frame(sample_mean)\n\nたとえば、ある標本の平均値は62.75はこうなります。\nこの平均値がどのように分布しているのかを調べるために、ヒストグラムを作成してみます。\n\ng_mean &lt;- ggplot(df_mean) + aes(x=sample_mean) +\n  geom_histogram() + xlab(\"標本平均\") + ylab(\"度数\") +\n  geom_vline(xintercept = mean(sample_mean), color = \"blue\") +\n  geom_vline(xintercept = 62, color=\"red\") + mystyle\nprint(g_mean)\n\n\n\n\n\ng_m &lt;- ggplot(df_mean) +\n    aes(x = reorder(seq_along(sample_mean), sample_mean), y = sample_mean) +\n    geom_bar(stat=\"identity\") + geom_hline(yintercept = 62, color = \"red\") +\n   coord_cartesian(ylim = c(60, 64)) +\n    ylab(\"標本平均\") + xlab(\"標本ID\") + ggtitle(\"標本平均の分布\") + mystyle\nprint(g_m)\n\n\n\n\nおおよそ母平均\\(\\mu = 62\\)の周りに分布していることがわかりますが，かなり離れた標本平均をもつ標本もあるようです。 たとえば，100個の標本で最小の標本平均となった標本の平均は60.59です。 このように母平均62，母標準偏差5の母集団から抽出した1つの標本サイズ100の標本平均が，60.59という値になる確率はどのくらいでしょうか。 標本平均から\\(t\\)値を計算し，その\\(t\\)値が自由度99の\\(t\\)分布にしたがう確率を求めることで，この確率を求めることができます。\n\nt &lt;- (min(df_mean$sample_mean) - 62) / (5 / sqrt(n))\nprint(t)\n\n[1] -2.81836\n\n\n自由度99の\\(t\\)分布の下で，となる確率は求めると，\n\npt(t, df = n-1)\n\n[1] 0.00291464\n\n\nとなり，この確率は非常に小さい値となります。 つまり100個の標本をとってくると，いくつかの標本から計算された標本平均は，母平均62からかなり離れた値となることがわかります。 それぞれの標本平均から計算された\\(t\\)値の分布を調べると，次のようになります。\n\ndf_mean &lt;- df_mean %&gt;%\n  mutate(\n    t_value = (sample_mean - 62) / (5 / sqrt(n)),\n    p_value = pt(t_value, df = n-1)\n  )\n\nggplot(df_mean) +\n    aes(x = reorder(seq_along(p_value), p_value), y = p_value) + # グラフの設定\n    geom_bar(stat=\"identity\", fill = ifelse(df_mean$p_value &lt; 0.05, \"red\", \"black\")) + #\n    geom_hline(yintercept = 0.05, color = \"red\") + # 有意水準0.05\n    ylab(\"p値\") + xlab(\"標本ID\") + ggtitle(\"p値の分布\") + mystyle # 軸の設定\n\n\n\n\nとなり，\\(t\\)値が生じる確率が5%未満となる標本がいくつかあることがわかった。 自分が集めた標本の1つから計算した標本平均、そして\\(t\\)値が、帰無仮説が正しいと仮定した場合に、その標本平均がどのくらいの確率で生じるかを調べ、それが5%未満や1%未満であったならば、帰無仮説が正しいと考えるよりも、帰無仮説とは異なる母平均をもつ母集団から標本を集めたから、そのような標本平均が生じたと考えるほうがもっともらしいと考えることができます。 これが統計的仮説検定の考え方です。\n\n\n\n第1種の過誤(type 1 error) : 帰無仮説が正しいのに，帰無仮説を棄却してしまう誤り。偽陽性(False Positive)とも呼ばれる。\n第2種の過誤(type 2 error) : 帰無仮説が正しくないのに，帰無仮説を棄却しない誤り。偽陰性（False Negative）とも呼ばれる。\n\n第1種の過誤の例として，よく挙げられる犯罪容疑者の例で説明すると，容疑者が無実なのに，容疑者を有罪としてしまう(えん罪)誤りを第1種の過誤といい，容疑者が犯罪者なのに，容疑者を無罪としてしまう誤りを第2種の過誤といいます。\n第1種の過誤(えん罪)を小さくしたいとします。 この確率を$$で表し，実はこれが有意水準の大きさとなります。 有意水準5％というのは，ある検定統計量の標本分布の平均から離れた5％の面積に入る統計量をかけ離れた値とするかを(研究者が勝手に)決めたものです。 両側検定なら，標本平均から離れた左右の2.5％の面積に入る統計量をかけ離れた値とし，ここに計算した統計量が含まれるとき，帰無仮説を棄却します。\n第1種の過誤と減らすために有意水準を小さくすると，だい2種の過誤が大きくなります。 当然ですが，えん罪を減らそうとしてほとんどのケースを無罪とすると，犯罪者を逃がすことになる，というロジックと同じです。\n帰無仮説が正しいとした場合の正規分布を青色で，真の分布を赤色で示し，有意水準が両側で5％，つまり片側が2.5％となる図を書くとこんな感じです。\n\n# 正規分布の確率密度関数\ndnorm_with_mean_sd &lt;- function(x, mean = 0, sd = 1) {\n  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))\n}\n\n# パラメータの設定\nmu1 &lt;- 0   # 帰無仮説の平均\nsd1 &lt;- 1   # 帰無仮説の標準偏差\nmu2 &lt;- 1.5 # 対立仮説の平均\nsd2 &lt;- 1   # 対立仮説の標準偏差\nalpha = 0.025\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\")\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &lt; qnorm(alpha, mu1, sd1)),\n  aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(alpha, mu1, sd1) & x &lt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"両側検定における第1種の過誤と第2種の過誤\")\ng &lt;- g + geom_vline(xintercept = qnorm(1-alpha), linetype=\"dotted\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\n\ng &lt;- g + annotate(\"text\", x = mu1 + 2.5, y = max(df$dnorm1) / 6,\n           label = \"第1種の過誤\", color = \"darkblue\", family = \"HiraKakuProN-W3\") +\n  annotate(\"text\", x = mu2 - 0.5, y = max(df$dnorm2) / 6,\n           label = \"第2種の過誤\", color = \"darkred\", family = \"HiraKakuProN-W3\")\n\ng &lt;- g + annotate(\"text\", x = mu1 - 2, y = max(df$dnorm1)-0.1,\n                  label = \"帰無仮説下の分布\", color = \"blue\", family = \"HiraKakuProN-W3\" ) +\n  annotate(\"text\", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,\n           label = \"真の分布\", color = \"red\", family = \"HiraKakuProN-W3\") + mystyle\nprint(g)\n\n\n\n\n帰無仮説が正しいときに帰無仮説を棄却する確率である第1種の過誤\\(\\alpha\\)を小さくすると，こうなります。\n\n\n\n\n\n片側検定の場合なら，こんな感じです。"
  },
  {
    "objectID": "presemi2023_07.html#統計的仮説検定の基礎",
    "href": "presemi2023_07.html#統計的仮説検定の基礎",
    "title": "統計的仮説検定",
    "section": "",
    "text": "母集団の母数(パラメータ)を知りたいけれど観察できないので、母集団から標本(sample)を抽出して、標本の特徴をつかって母集団の母数を予想しようとすることを、統計的推定(statistical estimation)といいます。\nこの章では、母数に対して立てた仮説が妥当かどうかを検証する方法を学びます。\n\n仮説をたてる\n有意水準を設定する\n検定統計量を計算する\n検定統計量の確率分布を求めて有意水準で棄却域を決める\n検定統計量が棄却域に入るかどうかを確認する\n\n\n仮説の立て方は、帰無仮説(null hypothesis)と対立仮説(alternative hypothesis)の2つに分けられます。 (頻度主義)統計学では、本当に示したい仮説(対立仮説)ではなく、その排反事象である帰無仮説を立てて、帰無仮説が棄却されることで、対立仮説が採択されるという考え方をとります。 排反事象(incompatible events)とは、同時に起こりえない事象のことです。\n例えば、\n\n帰無仮説\\(H_0\\) : 利益反応係数\\(ERC\\)はゼロである。　\\(ERC =0\\)\n\n対立仮説\\(H_A\\) : 利益反応係数$\\(ERC\\)はゼロではない。 \\(ERC \\not = 0\\)\n\n\nというように、帰無仮説は対立仮説と背反となるように立てます。 また、帰無仮説は母数に対して等号で成立する仮説となります。 なぜこんなことをするのかというと、母数がある特定の値をとる、という帰無仮説を否定するためには、その値以外の取りうることを示せばよいだけですが、もし対立仮説が\\(ERC=0\\)であったなら、これを示すためには、\\(ERC \\not = 0\\)を示す必要があります。 これは不可能です。\n\n次に、どんなときに帰無仮説を棄却するのかを決めます。 帰無仮説として仮定した母数の値から標本から計算した値が大きく異なる場合には、帰無仮説を棄却する、とします。 このとき、どのくらい帰無仮説として仮定した母数の値から離れたら帰無仮説を棄却するのかを決めるのが有意水準(significance level)です。優位水準と書かないように気をつけましょう。\n有意水準は、\\(\\alpha\\)で表され、会計研究では\\(0.01\\)、\\(0.05\\)、\\(0.10\\)が使われることが多いです。 標本サイズが大きい場合だと、\\(0.001\\)とか\\(0.005\\)とかも使われます。\n例えば、母集団の平均\\(\\mu\\)が\\(0\\)である、という帰無仮説を考えます。このとき対立仮説は母集団の平均\\(\\mu\\)は\\(0\\)ではない、というものです。 標本サイズ\\(100\\)の標本から抽出した標本平均の分布から計算した\\(t\\)値が自由度\\(100-1\\)の\\(t\\)分布にしたがうとき、\n\\[\nt = \\frac{\\bar{x} - \\mu}{s/\\sqrt{n}}\n\\] となり，今\\(\\bar{x} = \\mu\\)という帰無仮説を仮定しているので、\\(t = 0\\)となります。\n\n# 自由度を設定\nn = 100\ndf &lt;- n-1\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df) # 変数yを作成\n\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x = x, y = y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &lt;= ql), fill = \"blue\", alpha = 0.3) + geom_area(data = data %&gt;% filter(x &gt;= qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + geom_vline(xintercept = 0, color = \"red\")\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\")\ng &lt;- g + geom_hline(yintercept = 0)\ng &lt;- g + annotate(geom = \"text\", x = 2.4, y = 0.08, label = \"α/2\", size = 10)\ng &lt;- g + annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = 2.4, xend = 2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = -2.4, y = 0.08, label = \"α/2\", size = 10) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = -2.4, xend = -2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  ) + mystyle\nprint(g)\n\n\n\n\n\n標本から平均などの統計量を計算し，その統計量は確率変数なので分布をもち，その分布 \\[\n\\begin{align*}\nt = \\frac{\\bar{x} - \\mu}{SE} = \\displaystyle \\frac{\\bar{x} - \\mu}{\\frac{u}{\\sqrt{n}}}\n\\end{align*}\n\\] を検定統計量\n\n母平均\\(62\\)、母標準偏差\\(5\\)の正規分布にしたがう変数\\(X\\)を考えます。 母集団のサイズは10000とします。 この母集団の分布は次のようになっています。\n\nN &lt;- 10000\nX &lt;- rnorm(N, 62, 5) # 母集団\nggplot(data.frame(X)) + aes(X) + geom_histogram() + ggtitle(\"母集団\") + geom_vline(xintercept = 62, color = \"red\") + mystyle\n\n\n\n\nこの母集団から標本サイズ100の標本を100個とりだし、平均を100個計算します。\n\nn &lt;- 100\nsample_mean &lt;- numeric(n) # 空の箱を用意\nfor(i in 1:100){\n  x_sample &lt;- sample(X, n) # 標本を抽出\n  sample_mean[i] &lt;- mean(x_sample) # 標本平均を計算\n}\ndf_mean &lt;- data.frame(sample_mean)\n\nたとえば、ある標本の平均値は62.75はこうなります。\nこの平均値がどのように分布しているのかを調べるために、ヒストグラムを作成してみます。\n\ng_mean &lt;- ggplot(df_mean) + aes(x=sample_mean) +\n  geom_histogram() + xlab(\"標本平均\") + ylab(\"度数\") +\n  geom_vline(xintercept = mean(sample_mean), color = \"blue\") +\n  geom_vline(xintercept = 62, color=\"red\") + mystyle\nprint(g_mean)\n\n\n\n\n\ng_m &lt;- ggplot(df_mean) +\n    aes(x = reorder(seq_along(sample_mean), sample_mean), y = sample_mean) +\n    geom_bar(stat=\"identity\") + geom_hline(yintercept = 62, color = \"red\") +\n   coord_cartesian(ylim = c(60, 64)) +\n    ylab(\"標本平均\") + xlab(\"標本ID\") + ggtitle(\"標本平均の分布\") + mystyle\nprint(g_m)\n\n\n\n\nおおよそ母平均\\(\\mu = 62\\)の周りに分布していることがわかりますが，かなり離れた標本平均をもつ標本もあるようです。 たとえば，100個の標本で最小の標本平均となった標本の平均は60.59です。 このように母平均62，母標準偏差5の母集団から抽出した1つの標本サイズ100の標本平均が，60.59という値になる確率はどのくらいでしょうか。 標本平均から\\(t\\)値を計算し，その\\(t\\)値が自由度99の\\(t\\)分布にしたがう確率を求めることで，この確率を求めることができます。\n\nt &lt;- (min(df_mean$sample_mean) - 62) / (5 / sqrt(n))\nprint(t)\n\n[1] -2.81836\n\n\n自由度99の\\(t\\)分布の下で，となる確率は求めると，\n\npt(t, df = n-1)\n\n[1] 0.00291464\n\n\nとなり，この確率は非常に小さい値となります。 つまり100個の標本をとってくると，いくつかの標本から計算された標本平均は，母平均62からかなり離れた値となることがわかります。 それぞれの標本平均から計算された\\(t\\)値の分布を調べると，次のようになります。\n\ndf_mean &lt;- df_mean %&gt;%\n  mutate(\n    t_value = (sample_mean - 62) / (5 / sqrt(n)),\n    p_value = pt(t_value, df = n-1)\n  )\n\nggplot(df_mean) +\n    aes(x = reorder(seq_along(p_value), p_value), y = p_value) + # グラフの設定\n    geom_bar(stat=\"identity\", fill = ifelse(df_mean$p_value &lt; 0.05, \"red\", \"black\")) + #\n    geom_hline(yintercept = 0.05, color = \"red\") + # 有意水準0.05\n    ylab(\"p値\") + xlab(\"標本ID\") + ggtitle(\"p値の分布\") + mystyle # 軸の設定\n\n\n\n\nとなり，\\(t\\)値が生じる確率が5%未満となる標本がいくつかあることがわかった。 自分が集めた標本の1つから計算した標本平均、そして\\(t\\)値が、帰無仮説が正しいと仮定した場合に、その標本平均がどのくらいの確率で生じるかを調べ、それが5%未満や1%未満であったならば、帰無仮説が正しいと考えるよりも、帰無仮説とは異なる母平均をもつ母集団から標本を集めたから、そのような標本平均が生じたと考えるほうがもっともらしいと考えることができます。 これが統計的仮説検定の考え方です。"
  },
  {
    "objectID": "presemi2023_07.html#統計的検定の諸問題",
    "href": "presemi2023_07.html#統計的検定の諸問題",
    "title": "統計的仮説検定",
    "section": "",
    "text": "第1種の過誤(type 1 error) : 帰無仮説が正しいのに，帰無仮説を棄却してしまう誤り。偽陽性(False Positive)とも呼ばれる。\n第2種の過誤(type 2 error) : 帰無仮説が正しくないのに，帰無仮説を棄却しない誤り。偽陰性（False Negative）とも呼ばれる。\n\n第1種の過誤の例として，よく挙げられる犯罪容疑者の例で説明すると，容疑者が無実なのに，容疑者を有罪としてしまう(えん罪)誤りを第1種の過誤といい，容疑者が犯罪者なのに，容疑者を無罪としてしまう誤りを第2種の過誤といいます。\n第1種の過誤(えん罪)を小さくしたいとします。 この確率を$$で表し，実はこれが有意水準の大きさとなります。 有意水準5％というのは，ある検定統計量の標本分布の平均から離れた5％の面積に入る統計量をかけ離れた値とするかを(研究者が勝手に)決めたものです。 両側検定なら，標本平均から離れた左右の2.5％の面積に入る統計量をかけ離れた値とし，ここに計算した統計量が含まれるとき，帰無仮説を棄却します。\n第1種の過誤と減らすために有意水準を小さくすると，だい2種の過誤が大きくなります。 当然ですが，えん罪を減らそうとしてほとんどのケースを無罪とすると，犯罪者を逃がすことになる，というロジックと同じです。\n帰無仮説が正しいとした場合の正規分布を青色で，真の分布を赤色で示し，有意水準が両側で5％，つまり片側が2.5％となる図を書くとこんな感じです。\n\n# 正規分布の確率密度関数\ndnorm_with_mean_sd &lt;- function(x, mean = 0, sd = 1) {\n  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))\n}\n\n# パラメータの設定\nmu1 &lt;- 0   # 帰無仮説の平均\nsd1 &lt;- 1   # 帰無仮説の標準偏差\nmu2 &lt;- 1.5 # 対立仮説の平均\nsd2 &lt;- 1   # 対立仮説の標準偏差\nalpha = 0.025\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\")\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &lt; qnorm(alpha, mu1, sd1)),\n  aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(alpha, mu1, sd1) & x &lt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"両側検定における第1種の過誤と第2種の過誤\")\ng &lt;- g + geom_vline(xintercept = qnorm(1-alpha), linetype=\"dotted\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\n\ng &lt;- g + annotate(\"text\", x = mu1 + 2.5, y = max(df$dnorm1) / 6,\n           label = \"第1種の過誤\", color = \"darkblue\", family = \"HiraKakuProN-W3\") +\n  annotate(\"text\", x = mu2 - 0.5, y = max(df$dnorm2) / 6,\n           label = \"第2種の過誤\", color = \"darkred\", family = \"HiraKakuProN-W3\")\n\ng &lt;- g + annotate(\"text\", x = mu1 - 2, y = max(df$dnorm1)-0.1,\n                  label = \"帰無仮説下の分布\", color = \"blue\", family = \"HiraKakuProN-W3\" ) +\n  annotate(\"text\", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,\n           label = \"真の分布\", color = \"red\", family = \"HiraKakuProN-W3\") + mystyle\nprint(g)\n\n\n\n\n帰無仮説が正しいときに帰無仮説を棄却する確率である第1種の過誤\\(\\alpha\\)を小さくすると，こうなります。\n\n\n\n\n\n片側検定の場合なら，こんな感じです。"
  },
  {
    "objectID": "presemi2023_06.html",
    "href": "presemi2023_06.html",
    "title": "統計的推定",
    "section": "",
    "text": "第6回講義の到達目標は、\n\n母集団と標本の違いを理解する。\n不偏推定量と一致推定量を理解し，説明することができる。\n信頼区間を理解し，説明することが出来る。\n\n第6回講義の到達度検証のための課題は、以下の通りです。\n\n標本を構築し，記述統計量を計算する。\nシミュレーションを利用して，統計量を作る事が出来る。\n信頼区間を計算することができる\n\n\n\n\n\n\n\n用語の意味\n\n\n\n\n母集団：研究対象となるすべての集合\n標本：母集団から抽出されたデータ\n標本サイズ：標本に含まれるデータの個数\n標本数・サンプル数：標本の数のことで標本サイズのことじゃないよ\n母数：母集団を特徴付ける値、母平均や母分散など\n統計量：標本を特徴付ける値、標本平均や標本分散など\n推定量：母数の推定に使われる統計量\n統計的推定：推定量から母数を予想すること\n\n\n\n\n\n母集団(population)とは、研究問題(research question)に基づいて選定された対象全体の集まりを指します。 しかし、その全体を調査・分析することは、時間や費用の制約から現実的ではありません。そのため、母集団から一部を抜き出した標本(sample)を選び、この標本を通じて母集団の特性を推定します。\n\n統計学とは、限られた標本から母集団の特性（母数またはパラメータとも呼ばれます）をどのように探求するかについて研究する学問です。 例えば、作ったお味噌汁全体の味を確かめるには、お味噌汁を全部飲むのではなく、しっかりお味噌汁を鍋の中でかき混ぜてから、スプーン一杯を試飲し、その全体の味を推定する、という作業と同じです。\n標本の特徴を調べることで，観察できない母集団の母数(parameter)を推定することを，統計的推定(statistical estimation)とよびます。 統計的推定には，標本から計算される統計量(statistic)を用います。 母数の推定のために利用される統計量を推定量(estimator)といいます。\n母数は定数ですが，標本が変われば値が変わるので推定量は確率変数です。 1つの標本から計算された1つの標本平均は，たまたま今手元にある標本から計算された1つの平均値にすぎず，別の標本を集めて再度標本平均を計算すれば，異なる値になることが予想されます。\nまた母数を推定するために用いられる統計量と一般的な数式記号は以下の通りです。\n\n\n母数\n記号\n統計量\n記号\n\n\n\n母平均\n\\(\\mu\\)\n標本平均\n\\(\\bar x\\)\n\n\n母比率\n\\(\\pi\\)\n標本比率\n\\(p\\)\n\n\n母分散\n\\(\\sigma^2\\)\n標本分散\n\\(s^2\\)\n\n\n母標準偏差\n\\(\\sigma\\)\n標本標準偏差\n\\(s\\)\n\n\n\n標本から母数を推定するためには，適切な方法で標本を集めなければなりません。 1限の講義に出席している学生にアンケートをとっても，学生全体の推定には適切とはいえない標本があつまるでしょう。\n母集団から標本を選ぶ標本抽出方法として代表的なものが，単純無作為抽出(simple randome sampling)です。 単純無作為抽出で選ばれた標本は、母集団の偏りのない標本といえます。 たとえば，平均10，標準偏差1の正規分布からランダムに100個のデータを抽出して標本を作り，その平均値を計算してみます。\n\nn = 100 # 標本サイズ\nx &lt;- rnorm(n, 10, 1) # 標本抽出\nmean(x) # 標本平均\n\n[1] 9.960697\n\n\n平均値は9.9606967となり，母平均10とほぼ同じ値になりましたが、ぴったり10ではありませんよね。 この母平均\\(10\\)と標本平均9.9606967の差を誤差といい、母集団と標本のズレを意味します。\n平均10，標準偏差1の正規分布からランダムに100個のデータを抽出して標本を作り，その平均値を計算する，という試行(trial)を10000回繰り返します。 すると標本サイズ100の標本が10000個できるので、その各標本ごとに標本平均を計算して、10000個の標本平均を得ます。 その10000個の標本平均をヒストグラムで表示してたものが、以下のグラフとなります。\n\nn = 100 # 標本サイズ\ntrial = 10000 # 標本数\nresult &lt;- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x &lt;- rnorm(n, 10, 1) # 標本抽出\n  result[i] &lt;- mean(x) # 標本平均\n}\nhist(result) # 基本関数histでヒストグラム作成\n\n\n\n\nこの図をみると、キレイな左右対称の釣り鐘型の分布になっていることが分かります。 この10000個の平均値の平均は，\n\nmean(result)\n\n[1] 10.00174\n\n\nとほぼ10と等しくなります。 このように，標本数を増やしていくと，標本平均の平均値は母平均に近づく，という法則を大数の法則(law of large numbers)といいます。 統計学における極めて重要な概念です。\n\n関心の対象となる母集団から同じサイズの標本を取り出すにしても，その組み合わせは1つではありません。\nたとえば，プレゼミのメンバー25名から5名の標本を選ぶなら，その組み合わせは，\n\\[\n{}_{25} \\mathrm{C}_5 = \\binom{25}{5} = \\frac{25!}{5!(25-5)!} = 53130\n\\]\nたったこの人数でもこれだけの組み合わせがあるので，すべての株式会社から標本を選ぶ組み合わせは無数になります。 したがって，その標本から計算した統計量は標本ごとに異なる値となります。このような統計量の分布を標本分布(sampling distribution)といいます。\n\n「偏りのない」(unbiased)標本をたくさん集めることができれば，標本分布は母集団の分布に近づきます。 この多くの標本から計算される統計量の平均が母数に一致する性質を不偏性(unbiasedness)といい，普遍性をもつ推定量を不偏推定量(unbiased estimator)といいます。\nたとえば，5個のデータ(2,4,6,7,9)について考えてみましょう。 ここから3つのデータを取り出して標本を作ります。 その組み合わせは，\n\\[\n{}_{5} \\mathrm{C}_3 = \\binom{5}{3} = \\frac{5!}{3!(5-3)!} = 10\n\\]\nとなります。 この10個の標本から計算される標本分散と標本平均を計算してみます。 それぞれの定義は次のとおりです。\n\\[\n\\begin{aligned}\n\\text{標本平均} &= \\frac 1n \\sum_{i=1}^n x_i \\\\\n\\text{標本分散} &= \\frac 1n \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\end{aligned}\n\\] 標本平均と標本分散を計算する関数を作ります。 関数の作り方については，また後で勉強する予定ですので，ここでは関数の使い方だけを覚えておいてください。\n\nmeanp &lt;- function(x){\n  sum(x) / length(x) # 合計をデータの個数で割る\n}\nvarp &lt;- function(x){\n  sum((x - meanp(x))^2) / length(x) # 分散の計算式\n}\n\nこれで平均と分散を計算する関数ができました。 これを使って，標本平均と標本分散を計算してみましょう。 まず5のサイズをもつ母集団から標本サイズ3の標本を10通り作成します。\n\nx &lt;- c(2,4,6,7,9)\nmeanp(x) # 母平均 5.6\n\n[1] 5.6\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nprint(res)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n[1,]    2    2    2    2    2    2    4    4    4     6\n[2,]    4    4    4    6    6    7    6    6    7     7\n[3,]    6    7    9    7    9    9    7    9    9     9\n\n\nこれですべての組み合わせを作り出せましたので，それぞれの標本から標本平均と標本分散を計算します。 各列に，先ほど作ったmeanp()関数をapply関数で適用し，10の標本平均を作り，sample_meanという変数に代入し，その平均を計算します。\n\nsample_mean &lt;- apply(res, 2, meanp)\nmeanp(sample_mean) # 標本平均の平均は5.6\n\n[1] 5.6\n\n\n標本平均の平均5.6が母平均5.6に一致したので，標本平均は不偏推定量であることが分かります。\n次に分散を計算してみましょう。\n\nvarp(x) # 母分散 5.84\n\n[1] 5.84\n\nsample_var &lt;- apply(res, 2, varp)\nmeanp(sample_var) #\n\n[1] 4.866667\n\n\n標本分散の平均4.8666667は母分散5.84より小さな値になりました。つまり標本分散は不偏推定量ではありません。またこの結果は自明のことです(後述します)。 これには自由度という概念が関係しています。 自由度とは，標本から計算される統計量の値を決めるのに使える情報の数のことですが，ここではスルーして，標本分散ではなく標本不偏分散を計算します。 違いは，分母が\\(n\\)ではなく\\(n-1\\)になっていることです。 \\[\n\\text{標本不偏分散} = \\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\]\nRの基本関数であるvar()は標本分散ではなく標本不偏分散を計算するので，これを使って先ほどの計算を再現してみましょう。\n\nvar(x) # 母分散 5.84\n\n[1] 7.3\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nsample_var &lt;- apply(res, 2, var)\nmeanp(sample_var) # 標本平均の平均は5.6\n\n[1] 7.3\n\n\n母分散と標本不偏分散の平均は一致しました。 つまり母数である母分散を推定するためには，標本不偏分散を使う必要があるということです。\nとはいえ，違いは\\(n\\)で割るか，\\(n-1\\)で割るか，という点だけなので，標本サイズ\\(n\\)が大きければ，標本分散と標本不偏分散の違いは無視できるので，経営学の研究ではそこまで気にしなくてもよいでしょう。\n\n標本数が増えると，標本分布は母集団の分布に近づく，という特徴をもつ推定量を一致推定量(consistent estimator)といいます。 これが最も重要な特徴です。\n例えば，関心のある母集団が\n\n母平均\\(\\mu = 62\\)\n\n母分散\\(\\sigma^2 = 25\\)\n\n\nという母数をもつ正規分布に従っている，としましょう。 グラフにする前に，必要なパッケージの読み出しと，グラフのスタイルを設定します。\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nmystyle &lt;- list (#  ggplotのテーマ\n  theme_few(), # ggthemesパッケージ\n  theme(\n    text = element_text(\n      size=16,  #  フォントサイズ\n      family = \"HiraKakuProN-W3\" # ヒラギノフォント\n    )\n  )\n)\n\nグラフにすると次のようになります。\n\np &lt;- ggplot(data = data.frame(X = c(47,77)))\np &lt;- p + aes(x = X)\np &lt;- p + stat_function(\n  fun = dnorm,\n  args = list(mean = 62, sd = 5)\n  ) + mystyle\nprint(p)\n\n\n\n\nここから，標本サイズ10の標本を取り出し，標本平均を計算する，という試行を1000回繰り返し，1000個の標本平均を作りましょう。\n\nn = 10 # 標本サイズ\ntrial = 1000 # 試行回数\nresult &lt;- numeric(trial) # 結果を入れる空の箱\nfor (i in 1:trial) { # 以下をtrial回繰り返す\n  x &lt;- rnorm(n, 62, 5) # 標本を生成\n  result[i] &lt;- mean(x) # 標本平均を計算\n}\nmean(result) # 標本平均の平均\n\n[1] 62.03523\n\n\nヒストグラムの中心が母平均の62に近づいていることが分かります。 標本平均の平均は62.0352337となりますが，これは母平均62に近い値になっています。\nグラフで確認すると，\n\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) # 軸の設定\ng &lt;- g + geom_histogram( # ヒストグラム\n  aes(y = ..density..), bins = 60, # y軸を密度に\n  fill = \"white\", color = \"black\") # ヒストグラムの色\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))　# 母集団の分布\ng &lt;- g + geom_vline(xintercept = 62, color = \"red\") # 母平均の縦線\ng &lt;- g + xlim(47,77) + mystyle # x軸の範囲を指定\nprint(g)\n\n\n\n\nと母平均と標本平均のヒストグラムの中心が一致していることが分かります。 ただ，母分散と比べて標本分散が非常に小さいことが一目瞭然です。\n標本サイズを先ほどの100倍の1000として，同じ試行を1000回繰り返してみましょう。\n\n\n\n\n\nどんどん標本サイズを増やして，100000として，同じ試行を1000回繰り返してみましょう。\n\n\n\n\n\nこのように，標本平均の分散は，標本サイズが大きくなるにつれて，どんどん小さくなっていくことが分かります。 たとえば30から150の間の値をとり，母平均62，母分散25の正規分布にしたがう母集団から標本を採ったとしましょう。 母集団が30から150の値をとるのに対して，標本サイズが大きいとき，標本平均が30とか150の値をとることはあり得ません。\n標本平均の標準偏差\\(SD(\\bar x)\\)は，\n\\[\nSD(\\bar x) = \\frac{\\sigma}{\\sqrt{n}}\n\\]\nこのように，標本サイズを大きくすると，標本平均が母平均の近くの値をとる確率が大きくなる，という性質を一致性(consistency)と呼び，一致性をもつ推定量を一致推定量(consistent estimator)といいます。\n\n\n標本から得た統計量をつかって母数である母平均を予想したいとき，手元にある1つの標本から計算した標本平均は，どの程度の精度をもつでしょうか？\n\n信頼区間(confidence interval)は，非常に難解な概念です。 まず確認として，母数である母平均は観察できない数値ですが，確率変数ではなく定数です。 この母平均が計算した信頼区間に含まれるか，含まれないか，のどちらかしかありません。 信頼区間の正しい解釈は，母集団から標本を取ってきて、その標本平均から95%信頼区間を求める、という作業を100回やったときに、95回はその区間の中に母平均が含まれる，というものです。 この信頼区間の計算をしてみます。\n\n標本の統計量は確率変数なので，統計量は分布します。 標本平均の標準偏差は，\n\\[\nSD(\\bar x) = \\frac{\\sigma }{\\sqrt{n}}\n\\]\nと定義されます。 ここで\\(n\\)は標本サイズなのですぐ分かりますが，$\\(は母標準偏差なので未知です。 そこでまず\\)$の推定のために，不偏標準偏差\n\\[\nu = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2}\n\\]\nを計算します。 先ほど定義した\\(SD(\\bar x)\\)の分子\\(\\sigma\\)の代わりに推定量\\(u\\)を使ったものを標準誤差(standard error: SE)と呼びます。 \\[\nSE = \\frac{u}{\\sqrt{n}}\n\\]\nこの標準誤差を標本平均の標準誤差の代わりに使います。\n\nさて，とうとう統計学の真骨頂であるt分布の登場です。 \\(t\\)分布(t-distribution)は，母集団が正規分布にしたがうとき，標本平均の分布が従う確率分布です。 絵で描くとこんな感じです。\n\nx &lt;- seq(-4, 4, length.out = 100)\n\ndf1 &lt;- dt(x, df = 1)\ndf5 &lt;- dt(x, df = 5)\ndf100 &lt;- dt(x, df = 100)\n\n# データフレームに変換\ndf &lt;- data.frame(x = rep(x, 3),\n                 y = c(df1, df5, df100),\n                 freedom = factor(rep(c(\"df = 1\", \"df = 5\", \"df = 100\"), each = length(x)), ordered = TRUE)\n                 )\n# プロット\nggplot(df, aes(x = x, y = y, color = freedom)) +\n  geom_line() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"green\")) +\n  labs(title = \"自由度が異なるt分布のプロット\") + xlab(\"t値\") + ylab(\"確率密度\") + mystyle\n\n\n\n\n標本平均\\(\\bar x\\)から母平均を引いて，それを標準誤差\\(SE\\)で割った値をt値(t-value)といい，この\\(t\\)値は\\(t\\)分布にしたがうことが知られていますが，ここでは詳細に触れません。\n自由度99の\\(t\\)分布の場合，95%の確率で\\(t\\)値は-1.98から1.98の間に入ります。\n\n# 自由度を設定\ndf &lt;- 99\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df)\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x=x, y=y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &gt; ql & x &lt; qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\") + xlim(-3,3)\ng &lt;- g + annotate(geom = \"text\", x = qu, y = 0.12,\n  label = \"1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = qu, xend = qu,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = 0, y = 0.15,\n  label = \"95%\", size = 8)\ng &lt;- g + annotate(geom = \"text\", x = ql, y = 0.12,\n  label = \"-1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = ql, xend = ql,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  ) + mystyle\nprint(g)\n\n\n\n\n\\(t\\)分布は確率分布ですので，面積は1となります。 青い領域が95％の確率で\\(t\\)値が入る範囲です。 ということは両側の白い領域は，片方が2.5％と面積となっています。 これを次のように書きます。\n\\[\n[ -t _{100-1, 0.025}, \\ t_{100-1, 0.025}]\n\\]\n\\(t\\)分布表を使って，自由度99のときの\\(t\\)値を調べると，\\(t_{100-1, 0.025} = 1.98\\)となります。 Rだとqt()関数を使って計算できます。\n\nround(qt(0.025, df = 99),digits =2)\n\n[1] -1.98\n\nround(qt(0.975, df = 99),digits =2)\n\n[1] 1.98\n\n\n\n標本サイズ\\(n\\)の標本から計算される標本平均\\(\\bar x\\)から計算される次の\\(t\\)値 \\[\nt = \\frac{\\bar x - \\mu}{SE}\n\\] が自由度\\(n-1\\)の\\(t\\)分布にしたがうことが知られています。\nつまり，標本の95％の\\(t\\)値は，\\(t_{n-1, 0.025}\\)から\\(t_{n-1, 0.975}\\)の間に入ります。 よって，\n\\[\n-t _{n-1, 0.025} \\leq \\frac{\\bar x - \\mu}{SE} \\leq  t_{n-1, 0.025}\n\\] 両辺に\\(SE\\)をかけると， \\[\n-t _{n-1, 0.025} \\times SE \\leq \\bar{x} - \\mu \\leq  t_{n-1, 0.025}\\times SE\n\\]\nこの区間を95％信頼区間といいます。\n\n信頼区間とは、観察できない真の値である母数が存在し、その母集団から標本を抽出し、標本平均を計算するということを繰り返したときに、95%の標本平均の信頼区間の中に真の値である母平均が入っている、ということです。\n先の例を使って、信頼区間を表現してみます。 いま、母集団が平均62，標準偏差5の正規分布にしたがうとします。 この母集団から標本サイズ50の標本を100個抽出して，標本平均と標本標準偏差を計算します。\n\ntrial &lt;- 100 # 標本数\nn &lt;- 50 # 標本サイズ\nmu &lt;- 62 # 母平均\nsigma &lt;- 5 # 母標準偏差\n\nset.seed(1234) # 乱数を準備\n\n# 標本ごとの統計量を収納する空のベクトルを作成\nsample_mean &lt;- numeric(trial) # 標本平均の入れ物\nsample_sd   &lt;- numeric(trial) # 標本標準偏差の入れ物\nuplimit     &lt;- numeric(trial) # 信頼区間の上限の入れ物\nlowlimit    &lt;- numeric(trial) # 信頼区間の下限の入れ物\n\n# 標本の数だけ，以下の計算を繰り返す\nfor (i in 1:trial) {\n  temp_sample    &lt;- rnorm(n, mu, sigma) # 標本を抽出\n  sample_mean[i] &lt;- mean(temp_sample) # 標本平均を計算\n  sample_sd[i]   &lt;- sd(temp_sample) # 標本標準偏差を計算\n}\n\n# 信頼区間の計算\np &lt;- .95 # 信頼水準の設定 (95%信頼区間)\nalpha &lt;- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  &lt;- sample_mean + alpha * sample_sd/sqrt(n) # 信頼区間上限\nlowlimit &lt;- sample_mean - alpha * sample_sd/sqrt(n) # 信頼区間下限\n\n# 信頼区間の計算結果をデータフレームにまとめる\nconfidence_interval &lt;- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci &lt;- ggplot(confidence_interval) +\n  aes(x = 標本番号, y = 標本平均)\n  # aes(x = reorder(標本番号, 標本平均), y = 標本平均)\ng_ci &lt;- g_ci + geom_errorbar( # 信頼区間を表す線を描く\n  aes(ymin = 下限, ymax = 上限,\n      color = (下限 &lt;= 62 & 上限 &gt;= 62)\n      ), width = 0.2)\ng_ci &lt;- g_ci + scale_color_manual( # 色の設定\n  values = c(\"magenta\", \"black\"),\n  guide = FALSE)\ng_ci &lt;- g_ci + geom_point(aes(y = 標本平均)) # 標本平均を点で表す\ng_ci &lt;- g_ci + geom_hline(yintercept = 62, color = \"red\") # 母平均を赤い線で表す\ng_ci &lt;- g_ci + xlab(\"標本ID\") + ylab(\"95%信頼区間\") # 軸ラベルの設定\ng_ci &lt;- g_ci + ylim(47,77) + coord_flip() + mystyle # 軸の範囲と向きの設定\n\np &lt;- ggplot(data.frame(X = c(47,77))) + aes(x = X) # 母集団を描く範囲\np &lt;- p + stat_function(fun = dnorm, args = list(mean = 62, sd = 5)) # 正規分布を描く\np &lt;- p + geom_vline(xintercept = 62, color=\"red\") + mystyle　# 母平均を赤い線で表す\n\nlibrary(patchwork) # グラフを並べるためのパッケージ\np / g_ci # グラフを縦に並べる\n\n\n\n\n本当は未知である母平均62，母標準偏差5の母集団から標本を100個取り出し，100個の標本平均と95%信頼区間を計算し，グラフにしています。 この100個の標本から計算した95％信頼区間に母平均62が含まれているかどうかを確認すると，7つの95％信頼区間に母平均が含まれていないことが分かります。\\(7/100\\)の割合で信頼区間に母平均が含まれていないので，信頼水準は\\(1-7/100=0.93\\)となります。\n信頼区間を50%にするとどうなるでしょうか？ こうなります。\n\n\n\n\n\n信頼区間が短くなり，母平均を含まない50%信頼区間が増えました。\n標本サイズを大きくすればどうでしょうか。 先ほどまでは標本サイズ50の標本でしたが、標本サイズを500にして、95%信頼区間を計算してみます。\n\n\n\n\n\n標本サイズ\\(n\\)が大きくなると、信頼区間の上限と下限を計算するさいの\\(\\sqrt{n}\\)が大きくなるため、信頼区間が短くなっていることがわかります。"
  },
  {
    "objectID": "presemi2023_06.html#母集団と標本",
    "href": "presemi2023_06.html#母集団と標本",
    "title": "統計的推定",
    "section": "",
    "text": "母集団(population)とは、研究問題(research question)に基づいて選定された対象全体の集まりを指します。 しかし、その全体を調査・分析することは、時間や費用の制約から現実的ではありません。そのため、母集団から一部を抜き出した標本(sample)を選び、この標本を通じて母集団の特性を推定します。\n\n統計学とは、限られた標本から母集団の特性（母数またはパラメータとも呼ばれます）をどのように探求するかについて研究する学問です。 例えば、作ったお味噌汁全体の味を確かめるには、お味噌汁を全部飲むのではなく、しっかりお味噌汁を鍋の中でかき混ぜてから、スプーン一杯を試飲し、その全体の味を推定する、という作業と同じです。\n標本の特徴を調べることで，観察できない母集団の母数(parameter)を推定することを，統計的推定(statistical estimation)とよびます。 統計的推定には，標本から計算される統計量(statistic)を用います。 母数の推定のために利用される統計量を推定量(estimator)といいます。\n母数は定数ですが，標本が変われば値が変わるので推定量は確率変数です。 1つの標本から計算された1つの標本平均は，たまたま今手元にある標本から計算された1つの平均値にすぎず，別の標本を集めて再度標本平均を計算すれば，異なる値になることが予想されます。\nまた母数を推定するために用いられる統計量と一般的な数式記号は以下の通りです。\n\n\n母数\n記号\n統計量\n記号\n\n\n\n母平均\n\\(\\mu\\)\n標本平均\n\\(\\bar x\\)\n\n\n母比率\n\\(\\pi\\)\n標本比率\n\\(p\\)\n\n\n母分散\n\\(\\sigma^2\\)\n標本分散\n\\(s^2\\)\n\n\n母標準偏差\n\\(\\sigma\\)\n標本標準偏差\n\\(s\\)\n\n\n\n標本から母数を推定するためには，適切な方法で標本を集めなければなりません。 1限の講義に出席している学生にアンケートをとっても，学生全体の推定には適切とはいえない標本があつまるでしょう。\n母集団から標本を選ぶ標本抽出方法として代表的なものが，単純無作為抽出(simple randome sampling)です。 単純無作為抽出で選ばれた標本は、母集団の偏りのない標本といえます。 たとえば，平均10，標準偏差1の正規分布からランダムに100個のデータを抽出して標本を作り，その平均値を計算してみます。\n\nn = 100 # 標本サイズ\nx &lt;- rnorm(n, 10, 1) # 標本抽出\nmean(x) # 標本平均\n\n[1] 9.960697\n\n\n平均値は9.9606967となり，母平均10とほぼ同じ値になりましたが、ぴったり10ではありませんよね。 この母平均\\(10\\)と標本平均9.9606967の差を誤差といい、母集団と標本のズレを意味します。\n平均10，標準偏差1の正規分布からランダムに100個のデータを抽出して標本を作り，その平均値を計算する，という試行(trial)を10000回繰り返します。 すると標本サイズ100の標本が10000個できるので、その各標本ごとに標本平均を計算して、10000個の標本平均を得ます。 その10000個の標本平均をヒストグラムで表示してたものが、以下のグラフとなります。\n\nn = 100 # 標本サイズ\ntrial = 10000 # 標本数\nresult &lt;- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x &lt;- rnorm(n, 10, 1) # 標本抽出\n  result[i] &lt;- mean(x) # 標本平均\n}\nhist(result) # 基本関数histでヒストグラム作成\n\n\n\n\nこの図をみると、キレイな左右対称の釣り鐘型の分布になっていることが分かります。 この10000個の平均値の平均は，\n\nmean(result)\n\n[1] 10.00174\n\n\nとほぼ10と等しくなります。 このように，標本数を増やしていくと，標本平均の平均値は母平均に近づく，という法則を大数の法則(law of large numbers)といいます。 統計学における極めて重要な概念です。"
  },
  {
    "objectID": "presemi2023_06.html#標本分布",
    "href": "presemi2023_06.html#標本分布",
    "title": "統計的推定",
    "section": "",
    "text": "関心の対象となる母集団から同じサイズの標本を取り出すにしても，その組み合わせは1つではありません。\nたとえば，プレゼミのメンバー25名から5名の標本を選ぶなら，その組み合わせは，\n\\[\n{}_{25} \\mathrm{C}_5 = \\binom{25}{5} = \\frac{25!}{5!(25-5)!} = 53130\n\\]\nたったこの人数でもこれだけの組み合わせがあるので，すべての株式会社から標本を選ぶ組み合わせは無数になります。 したがって，その標本から計算した統計量は標本ごとに異なる値となります。このような統計量の分布を標本分布(sampling distribution)といいます。\n\n「偏りのない」(unbiased)標本をたくさん集めることができれば，標本分布は母集団の分布に近づきます。 この多くの標本から計算される統計量の平均が母数に一致する性質を不偏性(unbiasedness)といい，普遍性をもつ推定量を不偏推定量(unbiased estimator)といいます。\nたとえば，5個のデータ(2,4,6,7,9)について考えてみましょう。 ここから3つのデータを取り出して標本を作ります。 その組み合わせは，\n\\[\n{}_{5} \\mathrm{C}_3 = \\binom{5}{3} = \\frac{5!}{3!(5-3)!} = 10\n\\]\nとなります。 この10個の標本から計算される標本分散と標本平均を計算してみます。 それぞれの定義は次のとおりです。\n\\[\n\\begin{aligned}\n\\text{標本平均} &= \\frac 1n \\sum_{i=1}^n x_i \\\\\n\\text{標本分散} &= \\frac 1n \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\end{aligned}\n\\] 標本平均と標本分散を計算する関数を作ります。 関数の作り方については，また後で勉強する予定ですので，ここでは関数の使い方だけを覚えておいてください。\n\nmeanp &lt;- function(x){\n  sum(x) / length(x) # 合計をデータの個数で割る\n}\nvarp &lt;- function(x){\n  sum((x - meanp(x))^2) / length(x) # 分散の計算式\n}\n\nこれで平均と分散を計算する関数ができました。 これを使って，標本平均と標本分散を計算してみましょう。 まず5のサイズをもつ母集団から標本サイズ3の標本を10通り作成します。\n\nx &lt;- c(2,4,6,7,9)\nmeanp(x) # 母平均 5.6\n\n[1] 5.6\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nprint(res)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n[1,]    2    2    2    2    2    2    4    4    4     6\n[2,]    4    4    4    6    6    7    6    6    7     7\n[3,]    6    7    9    7    9    9    7    9    9     9\n\n\nこれですべての組み合わせを作り出せましたので，それぞれの標本から標本平均と標本分散を計算します。 各列に，先ほど作ったmeanp()関数をapply関数で適用し，10の標本平均を作り，sample_meanという変数に代入し，その平均を計算します。\n\nsample_mean &lt;- apply(res, 2, meanp)\nmeanp(sample_mean) # 標本平均の平均は5.6\n\n[1] 5.6\n\n\n標本平均の平均5.6が母平均5.6に一致したので，標本平均は不偏推定量であることが分かります。\n次に分散を計算してみましょう。\n\nvarp(x) # 母分散 5.84\n\n[1] 5.84\n\nsample_var &lt;- apply(res, 2, varp)\nmeanp(sample_var) #\n\n[1] 4.866667\n\n\n標本分散の平均4.8666667は母分散5.84より小さな値になりました。つまり標本分散は不偏推定量ではありません。またこの結果は自明のことです(後述します)。 これには自由度という概念が関係しています。 自由度とは，標本から計算される統計量の値を決めるのに使える情報の数のことですが，ここではスルーして，標本分散ではなく標本不偏分散を計算します。 違いは，分母が\\(n\\)ではなく\\(n-1\\)になっていることです。 \\[\n\\text{標本不偏分散} = \\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\]\nRの基本関数であるvar()は標本分散ではなく標本不偏分散を計算するので，これを使って先ほどの計算を再現してみましょう。\n\nvar(x) # 母分散 5.84\n\n[1] 7.3\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nsample_var &lt;- apply(res, 2, var)\nmeanp(sample_var) # 標本平均の平均は5.6\n\n[1] 7.3\n\n\n母分散と標本不偏分散の平均は一致しました。 つまり母数である母分散を推定するためには，標本不偏分散を使う必要があるということです。\nとはいえ，違いは\\(n\\)で割るか，\\(n-1\\)で割るか，という点だけなので，標本サイズ\\(n\\)が大きければ，標本分散と標本不偏分散の違いは無視できるので，経営学の研究ではそこまで気にしなくてもよいでしょう。\n\n標本数が増えると，標本分布は母集団の分布に近づく，という特徴をもつ推定量を一致推定量(consistent estimator)といいます。 これが最も重要な特徴です。\n例えば，関心のある母集団が\n\n母平均\\(\\mu = 62\\)\n\n母分散\\(\\sigma^2 = 25\\)\n\n\nという母数をもつ正規分布に従っている，としましょう。 グラフにする前に，必要なパッケージの読み出しと，グラフのスタイルを設定します。\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nmystyle &lt;- list (#  ggplotのテーマ\n  theme_few(), # ggthemesパッケージ\n  theme(\n    text = element_text(\n      size=16,  #  フォントサイズ\n      family = \"HiraKakuProN-W3\" # ヒラギノフォント\n    )\n  )\n)\n\nグラフにすると次のようになります。\n\np &lt;- ggplot(data = data.frame(X = c(47,77)))\np &lt;- p + aes(x = X)\np &lt;- p + stat_function(\n  fun = dnorm,\n  args = list(mean = 62, sd = 5)\n  ) + mystyle\nprint(p)\n\n\n\n\nここから，標本サイズ10の標本を取り出し，標本平均を計算する，という試行を1000回繰り返し，1000個の標本平均を作りましょう。\n\nn = 10 # 標本サイズ\ntrial = 1000 # 試行回数\nresult &lt;- numeric(trial) # 結果を入れる空の箱\nfor (i in 1:trial) { # 以下をtrial回繰り返す\n  x &lt;- rnorm(n, 62, 5) # 標本を生成\n  result[i] &lt;- mean(x) # 標本平均を計算\n}\nmean(result) # 標本平均の平均\n\n[1] 62.03523\n\n\nヒストグラムの中心が母平均の62に近づいていることが分かります。 標本平均の平均は62.0352337となりますが，これは母平均62に近い値になっています。\nグラフで確認すると，\n\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) # 軸の設定\ng &lt;- g + geom_histogram( # ヒストグラム\n  aes(y = ..density..), bins = 60, # y軸を密度に\n  fill = \"white\", color = \"black\") # ヒストグラムの色\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))　# 母集団の分布\ng &lt;- g + geom_vline(xintercept = 62, color = \"red\") # 母平均の縦線\ng &lt;- g + xlim(47,77) + mystyle # x軸の範囲を指定\nprint(g)\n\n\n\n\nと母平均と標本平均のヒストグラムの中心が一致していることが分かります。 ただ，母分散と比べて標本分散が非常に小さいことが一目瞭然です。\n標本サイズを先ほどの100倍の1000として，同じ試行を1000回繰り返してみましょう。\n\n\n\n\n\nどんどん標本サイズを増やして，100000として，同じ試行を1000回繰り返してみましょう。\n\n\n\n\n\nこのように，標本平均の分散は，標本サイズが大きくなるにつれて，どんどん小さくなっていくことが分かります。 たとえば30から150の間の値をとり，母平均62，母分散25の正規分布にしたがう母集団から標本を採ったとしましょう。 母集団が30から150の値をとるのに対して，標本サイズが大きいとき，標本平均が30とか150の値をとることはあり得ません。\n標本平均の標準偏差\\(SD(\\bar x)\\)は，\n\\[\nSD(\\bar x) = \\frac{\\sigma}{\\sqrt{n}}\n\\]\nこのように，標本サイズを大きくすると，標本平均が母平均の近くの値をとる確率が大きくなる，という性質を一致性(consistency)と呼び，一致性をもつ推定量を一致推定量(consistent estimator)といいます。"
  },
  {
    "objectID": "presemi2023_06.html#母平均の推定と信頼区間",
    "href": "presemi2023_06.html#母平均の推定と信頼区間",
    "title": "統計的推定",
    "section": "",
    "text": "標本から得た統計量をつかって母数である母平均を予想したいとき，手元にある1つの標本から計算した標本平均は，どの程度の精度をもつでしょうか？\n\n信頼区間(confidence interval)は，非常に難解な概念です。 まず確認として，母数である母平均は観察できない数値ですが，確率変数ではなく定数です。 この母平均が計算した信頼区間に含まれるか，含まれないか，のどちらかしかありません。 信頼区間の正しい解釈は，母集団から標本を取ってきて、その標本平均から95%信頼区間を求める、という作業を100回やったときに、95回はその区間の中に母平均が含まれる，というものです。 この信頼区間の計算をしてみます。\n\n標本の統計量は確率変数なので，統計量は分布します。 標本平均の標準偏差は，\n\\[\nSD(\\bar x) = \\frac{\\sigma }{\\sqrt{n}}\n\\]\nと定義されます。 ここで\\(n\\)は標本サイズなのですぐ分かりますが，$\\(は母標準偏差なので未知です。 そこでまず\\)$の推定のために，不偏標準偏差\n\\[\nu = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2}\n\\]\nを計算します。 先ほど定義した\\(SD(\\bar x)\\)の分子\\(\\sigma\\)の代わりに推定量\\(u\\)を使ったものを標準誤差(standard error: SE)と呼びます。 \\[\nSE = \\frac{u}{\\sqrt{n}}\n\\]\nこの標準誤差を標本平均の標準誤差の代わりに使います。\n\nさて，とうとう統計学の真骨頂であるt分布の登場です。 \\(t\\)分布(t-distribution)は，母集団が正規分布にしたがうとき，標本平均の分布が従う確率分布です。 絵で描くとこんな感じです。\n\nx &lt;- seq(-4, 4, length.out = 100)\n\ndf1 &lt;- dt(x, df = 1)\ndf5 &lt;- dt(x, df = 5)\ndf100 &lt;- dt(x, df = 100)\n\n# データフレームに変換\ndf &lt;- data.frame(x = rep(x, 3),\n                 y = c(df1, df5, df100),\n                 freedom = factor(rep(c(\"df = 1\", \"df = 5\", \"df = 100\"), each = length(x)), ordered = TRUE)\n                 )\n# プロット\nggplot(df, aes(x = x, y = y, color = freedom)) +\n  geom_line() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"green\")) +\n  labs(title = \"自由度が異なるt分布のプロット\") + xlab(\"t値\") + ylab(\"確率密度\") + mystyle\n\n\n\n\n標本平均\\(\\bar x\\)から母平均を引いて，それを標準誤差\\(SE\\)で割った値をt値(t-value)といい，この\\(t\\)値は\\(t\\)分布にしたがうことが知られていますが，ここでは詳細に触れません。\n自由度99の\\(t\\)分布の場合，95%の確率で\\(t\\)値は-1.98から1.98の間に入ります。\n\n# 自由度を設定\ndf &lt;- 99\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df)\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x=x, y=y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &gt; ql & x &lt; qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\") + xlim(-3,3)\ng &lt;- g + annotate(geom = \"text\", x = qu, y = 0.12,\n  label = \"1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = qu, xend = qu,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = 0, y = 0.15,\n  label = \"95%\", size = 8)\ng &lt;- g + annotate(geom = \"text\", x = ql, y = 0.12,\n  label = \"-1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = ql, xend = ql,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  ) + mystyle\nprint(g)\n\n\n\n\n\\(t\\)分布は確率分布ですので，面積は1となります。 青い領域が95％の確率で\\(t\\)値が入る範囲です。 ということは両側の白い領域は，片方が2.5％と面積となっています。 これを次のように書きます。\n\\[\n[ -t _{100-1, 0.025}, \\ t_{100-1, 0.025}]\n\\]\n\\(t\\)分布表を使って，自由度99のときの\\(t\\)値を調べると，\\(t_{100-1, 0.025} = 1.98\\)となります。 Rだとqt()関数を使って計算できます。\n\nround(qt(0.025, df = 99),digits =2)\n\n[1] -1.98\n\nround(qt(0.975, df = 99),digits =2)\n\n[1] 1.98\n\n\n\n標本サイズ\\(n\\)の標本から計算される標本平均\\(\\bar x\\)から計算される次の\\(t\\)値 \\[\nt = \\frac{\\bar x - \\mu}{SE}\n\\] が自由度\\(n-1\\)の\\(t\\)分布にしたがうことが知られています。\nつまり，標本の95％の\\(t\\)値は，\\(t_{n-1, 0.025}\\)から\\(t_{n-1, 0.975}\\)の間に入ります。 よって，\n\\[\n-t _{n-1, 0.025} \\leq \\frac{\\bar x - \\mu}{SE} \\leq  t_{n-1, 0.025}\n\\] 両辺に\\(SE\\)をかけると， \\[\n-t _{n-1, 0.025} \\times SE \\leq \\bar{x} - \\mu \\leq  t_{n-1, 0.025}\\times SE\n\\]\nこの区間を95％信頼区間といいます。\n\n信頼区間とは、観察できない真の値である母数が存在し、その母集団から標本を抽出し、標本平均を計算するということを繰り返したときに、95%の標本平均の信頼区間の中に真の値である母平均が入っている、ということです。\n先の例を使って、信頼区間を表現してみます。 いま、母集団が平均62，標準偏差5の正規分布にしたがうとします。 この母集団から標本サイズ50の標本を100個抽出して，標本平均と標本標準偏差を計算します。\n\ntrial &lt;- 100 # 標本数\nn &lt;- 50 # 標本サイズ\nmu &lt;- 62 # 母平均\nsigma &lt;- 5 # 母標準偏差\n\nset.seed(1234) # 乱数を準備\n\n# 標本ごとの統計量を収納する空のベクトルを作成\nsample_mean &lt;- numeric(trial) # 標本平均の入れ物\nsample_sd   &lt;- numeric(trial) # 標本標準偏差の入れ物\nuplimit     &lt;- numeric(trial) # 信頼区間の上限の入れ物\nlowlimit    &lt;- numeric(trial) # 信頼区間の下限の入れ物\n\n# 標本の数だけ，以下の計算を繰り返す\nfor (i in 1:trial) {\n  temp_sample    &lt;- rnorm(n, mu, sigma) # 標本を抽出\n  sample_mean[i] &lt;- mean(temp_sample) # 標本平均を計算\n  sample_sd[i]   &lt;- sd(temp_sample) # 標本標準偏差を計算\n}\n\n# 信頼区間の計算\np &lt;- .95 # 信頼水準の設定 (95%信頼区間)\nalpha &lt;- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  &lt;- sample_mean + alpha * sample_sd/sqrt(n) # 信頼区間上限\nlowlimit &lt;- sample_mean - alpha * sample_sd/sqrt(n) # 信頼区間下限\n\n# 信頼区間の計算結果をデータフレームにまとめる\nconfidence_interval &lt;- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci &lt;- ggplot(confidence_interval) +\n  aes(x = 標本番号, y = 標本平均)\n  # aes(x = reorder(標本番号, 標本平均), y = 標本平均)\ng_ci &lt;- g_ci + geom_errorbar( # 信頼区間を表す線を描く\n  aes(ymin = 下限, ymax = 上限,\n      color = (下限 &lt;= 62 & 上限 &gt;= 62)\n      ), width = 0.2)\ng_ci &lt;- g_ci + scale_color_manual( # 色の設定\n  values = c(\"magenta\", \"black\"),\n  guide = FALSE)\ng_ci &lt;- g_ci + geom_point(aes(y = 標本平均)) # 標本平均を点で表す\ng_ci &lt;- g_ci + geom_hline(yintercept = 62, color = \"red\") # 母平均を赤い線で表す\ng_ci &lt;- g_ci + xlab(\"標本ID\") + ylab(\"95%信頼区間\") # 軸ラベルの設定\ng_ci &lt;- g_ci + ylim(47,77) + coord_flip() + mystyle # 軸の範囲と向きの設定\n\np &lt;- ggplot(data.frame(X = c(47,77))) + aes(x = X) # 母集団を描く範囲\np &lt;- p + stat_function(fun = dnorm, args = list(mean = 62, sd = 5)) # 正規分布を描く\np &lt;- p + geom_vline(xintercept = 62, color=\"red\") + mystyle　# 母平均を赤い線で表す\n\nlibrary(patchwork) # グラフを並べるためのパッケージ\np / g_ci # グラフを縦に並べる\n\n\n\n\n本当は未知である母平均62，母標準偏差5の母集団から標本を100個取り出し，100個の標本平均と95%信頼区間を計算し，グラフにしています。 この100個の標本から計算した95％信頼区間に母平均62が含まれているかどうかを確認すると，7つの95％信頼区間に母平均が含まれていないことが分かります。\\(7/100\\)の割合で信頼区間に母平均が含まれていないので，信頼水準は\\(1-7/100=0.93\\)となります。\n信頼区間を50%にするとどうなるでしょうか？ こうなります。\n\n\n\n\n\n信頼区間が短くなり，母平均を含まない50%信頼区間が増えました。\n標本サイズを大きくすればどうでしょうか。 先ほどまでは標本サイズ50の標本でしたが、標本サイズを500にして、95%信頼区間を計算してみます。\n\n\n\n\n\n標本サイズ\\(n\\)が大きくなると、信頼区間の上限と下限を計算するさいの\\(\\sqrt{n}\\)が大きくなるため、信頼区間が短くなっていることがわかります。"
  },
  {
    "objectID": "presemi2023_05.html",
    "href": "presemi2023_05.html",
    "title": "記述統計とデータの可視化・視覚化",
    "section": "",
    "text": "第5回講義の到達目標は、\n\n適切なデータの型を選択し，データを読み込むことができる。\nカテゴリー変数を用いて表を作る事が出来る。\n\ndplyrパッケージを駆使して前処理を行い，作図するために必要なデータを作ることができる。\n\nggplot2パッケージを使って，データの特徴を伝えやすく，シンプルで，美しいグラフを作成することができる。\n\n第5回講義の到達度検証のための課題は、以下の通りです。\n\n数値，文字列，ファクターを適切に選択したデータを作る。\nカテゴリー変数を用いて，作表する。\n\ngroup_by()やsummarise()を使って，作図するためのデータを準備する。\n\nggplot()で作図する。\n\nここではRの得意とするデータの可視化(data visualization)について学びます。 いままで利用してきたtidyverseにはグラフ作成のためのパッケージとしてggplot2があります。 本章では，ggplot2の使い方を学習し，読者にもデータの特徴を伝えやすく，シンプルで，美しいグラフの作成を目指します。\nビッグデータを容易に扱えるようになった昨今において、データの可視化スキルの重要性は高まってきており、以下のような書籍が出版されています。いずれも非常に良い書籍ですので、興味のある方は読んでみてください。\n\n\n\n\n\nデータ分析のためのデータ可視化入門\n\n\n\n\n\nRでできるビジュアル統計学\n\n\n\n\n\nRによるインタラクティブなデータビジュアライゼーション\n\n\n\n\n1冊目はアメリカで絶賛された可視化本が翻訳されたものです。ソースコードとともに、データの可視化の基本や実例を学べます。 2冊目は、統計学を可視化という視点で学習する本です。 3冊目は前の2冊とは若干毛色が異なっており、ShinyというPosit社が開発したパッケージを使って、インタラクティブなグラフを作成する方法を学べます。\nggplot2を使うためにtidyverseとggthemesとpatchworkを読み込みます。まだインストールできていなければ，始めにインストールしておいてください。\n\n# install.packages(\"tidyverse\") # first time only\n# install.packages(\"ggthemes\")\n# install.packages(\"patchwork\")\n\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplotのテーマ拡張\nlibrary(patchwork) # ggplotの図を並べる\nrequire(fontregisterer) # 日本語フォントの登録\n\nまた、Macだとggplot2で作図したグラフで日本語が表示されないことがあります。 そのため、グラフのスタイルを事前に設定しておいて、文字化けを回避します。\n\nmystyle &lt;- list ( # mystyleとして設定を保存\n  theme_few(), # ggthemesのテーマ\n  theme(\n    text = element_text(\n      size=16,  #  フォントサイズ\n     family = \"HiraKakuProN-W3\" # ヒラギノフォント\n    )\n  )\n)\n\n\nデータには「カテゴリ変数」(category variable)と「量的変数」(quantitative variable)あるいは「連続変数」(continuous variable)があり，それぞれに対して適切なグラフの種類があります。\n\nカテゴリー変数(category variable)とは、観測値が属するカテゴリーを表す変数です。 たとえば、日経産業中分類の「水産」は35、鉱業は37，建設は41ですが、これらの数値は足したり引いたりすることに意味はありません。\n量的変数(quantitative variable)とは、観測値が数値で表される変数です。 たとえば、売上高や株価は金額で表されるため、足したり引いたり、平均や分散を計算することに意味があります。\nしたがって、手元にあるデータベースの各変数がカテゴリー変数か量的変数かを把握することは極めて重要です。 Rでは自動で両者を区別したりはしてくれないので、データを読み込んだ後に変数の種類を確認し、自分で指定します。\n\nここでは、教科書とは違う、企業の財務データを使いながら、データの可視化を学びます。 財務データが収録されたcsvファイルを，tidyverseのread_csv()関数を使って読み込みます。 read_csv()関数の引数として，ファイルの場所とファイル名を直接パスあるいは相対パスを指定します。\n\ndf &lt;- read_csv(\"data/RD_2022.csv\")\nglimpse(df) # データの概要\n\nRows: 57,823\nColumns: 23\n$ 会社コード                     &lt;chr&gt; \"0000001\", \"0000001\", \"0000001\", \"00000…\n$ 企業名                         &lt;chr&gt; \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋\",…\n$ 決算期                         &lt;chr&gt; \"1999/03\", \"2000/03\", \"2001/03\", \"2002/…\n$ 決算種別                       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準                       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 決算月数                       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 上場コード                     &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,…\n$ 日経業種コード                 &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341,…\n$ 現金預金                       &lt;dbl&gt; 6307, 4951, 3818, 4185, 4015, 3456, 277…\n$ 資産合計                       &lt;dbl&gt; 62109, 60885, 60599, 57069, 55373, 5856…\n$ 資本金                         &lt;dbl&gt; 5664, 5664, 5664, 5664, 5664, 5664, 566…\n$ 資本剰余金                     &lt;dbl&gt; NA, NA, NA, NA, 742, 742, 742, 743, 749…\n$ 利益剰余金                     &lt;dbl&gt; 2739, 4238, 4812, 5485, 6254, 6378, 727…\n$ 自己株式                       &lt;dbl&gt; NA, NA, -79, -154, -387, -464, -368, -2…\n$ 売上高                         &lt;dbl&gt; 171944, 171031, 166644, 158006, 162773,…\n$ 経常利益                       &lt;dbl&gt; 1600, 2299, 1947, 2333, 3314, 2895, 335…\n$ 法人税等                       &lt;dbl&gt; 620, 606, 908, 856, 1234, 1302, 1422, 1…\n$ 法人税等調整額                 &lt;dbl&gt; NA, -178, -114, 44, -272, -234, 136, -3…\n$ 親会社株主に帰属する当期純利益 &lt;dbl&gt; -251, 327, 927, 1026, 1122, 1248, 1388,…\n$ 研究開発費IFRS                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ 研究開発費                     &lt;dbl&gt; 210, 201, 190, 179, 197, 212, 201, 193,…\n$ `開発費・試験研究費`           &lt;dbl&gt; 210, 105, 119, 153, 176, 156, 122, 148,…\n$ 現金及び現金同等物の期末残高   &lt;dbl&gt; NA, 4865, 3729, 4097, 3923, 3359, 2725,…\n\n\n23個の変数があり、データの個数は57,823となっています。 以下ではこのデータを使って、データの可視化を学びます。\n\nはじめにsummary()で基本的な統計量を確認します。\n\nsummary(df)\n\n  会社コード           企業名             決算期             決算種別 \n Length:57823       Length:57823       Length:57823       Min.   :10  \n Class :character   Class :character   Class :character   1st Qu.:10  \n Mode  :character   Mode  :character   Mode  :character   Median :10  \n                                                          Mean   :10  \n                                                          3rd Qu.:10  \n                                                          Max.   :10  \n                                                                      \n    連結基準        決算月数       上場コード    日経業種コード  \n Min.   :1.000   Min.   : 1.00   Min.   :11.00   Min.   :101001  \n 1st Qu.:1.000   1st Qu.:12.00   1st Qu.:11.00   1st Qu.:121204  \n Median :1.000   Median :12.00   Median :11.00   Median :241403  \n Mean   :1.062   Mean   :11.98   Mean   :11.46   Mean   :190751  \n 3rd Qu.:1.000   3rd Qu.:12.00   3rd Qu.:12.00   3rd Qu.:257561  \n Max.   :3.000   Max.   :17.00   Max.   :13.00   Max.   :271704  \n                                                                 \n    現金預金           資産合計             資本金          資本剰余金     \n Min.   :       4   Min.   :       70   Min.   :      1   Min.   :-161917  \n 1st Qu.:    2023   1st Qu.:    14062   1st Qu.:   1198   1st Qu.:    965  \n Median :    5370   Median :    39028   Median :   3363   Median :   2995  \n Mean   :   38172   Mean   :   363536   Mean   :  16481   Mean   :  20259  \n 3rd Qu.:   16467   3rd Qu.:   125705   3rd Qu.:  10090   3rd Qu.:   9927  \n Max.   :68502665   Max.   :303846980   Max.   :3500000   Max.   :4503856  \n NA's   :193        NA's   :44          NA's   :198       NA's   :7714     \n   利益剰余金          自己株式            売上高            経常利益      \n Min.   : -972773   Min.   :-3306037   Min.   :       1   Min.   :-869562  \n 1st Qu.:    2250   1st Qu.:   -1368   1st Qu.:   13366   1st Qu.:    425  \n Median :    9163   Median :    -279   Median :   38209   Median :   1626  \n Mean   :   75680   Mean   :   -5144   Mean   :  237440   Mean   :  14070  \n 3rd Qu.:   34436   3rd Qu.:     -39   3rd Qu.:  127091   3rd Qu.:   6126  \n Max.   :26453126   Max.   :      -1   Max.   :31379507   Max.   :5670456  \n NA's   :299        NA's   :10800      NA's   :27         NA's   :21       \n    法人税等       法人税等調整額       親会社株主に帰属する当期純利益\n Min.   : -21709   Min.   :-1139009.0   Min.   :-1708029              \n 1st Qu.:    159   1st Qu.:    -134.5   1st Qu.:     163              \n Median :    586   Median :      -7.0   Median :     823              \n Mean   :   4827   Mean   :    -114.7   Mean   :    7707              \n 3rd Qu.:   2170   3rd Qu.:      91.0   3rd Qu.:    3372              \n Max.   :1190782   Max.   : 1097414.0   Max.   : 4987962              \n NA's   :391       NA's   :3736         NA's   :29                    \n 研究開発費IFRS     研究開発費      開発費・試験研究費\n Min.   :    48   Min.   :      1   Min.   :     1    \n 1st Qu.:  2440   1st Qu.:    131   1st Qu.:   169    \n Median : 24628   Median :    547   Median :   651    \n Mean   : 91248   Mean   :   8441   Mean   :  7528    \n 3rd Qu.:108096   3rd Qu.:   2330   3rd Qu.:  2710    \n Max.   :806905   Max.   :1124262   Max.   :662610    \n NA's   :57583    NA's   :21525     NA's   :38296     \n 現金及び現金同等物の期末残高\n Min.   :    -292            \n 1st Qu.:    1913            \n Median :    5328            \n Mean   :   39185            \n 3rd Qu.:   16954            \n Max.   :68419223            \n NA's   :1591                \n\n\n文字列となっている変数以外の量的変数については、最小値、第1四分位、中央値、平均値、第3四分位、最大値、欠損値の数、といった項目が計算されています。 数値データのうち、カテゴリー変数の統計量については意味が無いです。\n23個の変数の型を確認すると、大部分の財務データは数値&lt;dbl&gt;ですが、\n\n会社コード\n企業名\n決算期\n\nの3つは文字列&lt;chr&gt;となっています。 また、数値となっているけれど、実際はカテゴリー変数であるものとして、\n\n決算種別 : 10 = 本決算\n\n連結基準 : 1 = 日本基準, 2 = 米国基準, 3 = IFRS, 0 = 単独\n\n上場コード : 11 = 東証1部, 12 = 東証2部, 13 = 東証マザーズ,\n日経業種コード : 後で説明あり\n\nがあります。 文字列となっている変数以外の量的変数については、最小値、第1四分位、中央値、平均値、第3四分位、最大値、欠損値の数、といった項目が計算されています。 数値データとなっているカテゴリー変数である決算種別，連結基準，上場コード，日経業種コードの統計量も計算されていますが，もちろん意味は無いので，Rにカテゴリー変数であることを明示するためにファクター型に変換する必要があります。\nとりあえず、数値データのうち、カテゴリー変数ではないものについて、統計量を計算してみます。 主要な統計量を返す関数には以下のものがあります。\n\n\nmean() : 算術平均を計算する\n\nmedian() : 中央値を計算する\n\nsd() : (不偏)標準偏差を計算する\n\nvar() : (不偏)分散を計算する\n\nmin() : 最小値を計算する\n\nmax() : 最大値を計算する\n\nでは、売上高の平均を計算してみましょう。 データフレームdfの売上高にアクセスするには、df$売上高のように、$を使って変数名を指定します。 Excelでいうと，dfがシート名，売上高が列名に相当します。\n\nmean(df$売上高)\n\n[1] NA\n\n\nNAが帰ってきましたね。 実は、このmean()関数は、引数となるベクトル変数の中に欠損値NAがあると、NAを返します。 欠損値を意味するNAは，その観測値が存在しないことを表します。 このような場合、NAを除外して平均を計算する必要があるので、na.rm = TRUEという引数を追加します。\n\nmean(df$売上高, na.rm = TRUE)\n\n[1] 237440.1\n\n\nこれで、売上高の平均が2.3744011^{5}となりました。\n同じように、\n\nmedian(df$売上高, na.rm = TRUE) # 中央値\n\n[1] 38209\n\nsd(df$売上高, na.rm = TRUE) # 標準偏差\n\n[1] 938244.4\n\n\nとすることで、中央値と標準偏差が求められます。\n\nカテゴリー変数について見ていきましょう。 ここでは日経業種コードを例にとります。 日経業種コードは6ケタの数字ですが、最初の1ケタが大分類、次の2ケタ目が中分類、最後の3ケタ目が小分類を表します。つまり1 + 32 + 344のような構造になっています。 実証会計研究では、産業中分類をよく使うので、ここでは中分類を抽出してみましょう。 またしてもsubstr()関数を使って、2〜3ケタ目を抽出し、中分類という変数に格納します。 ついでに，決算期のデータがYYYY/MMという形式になっているので，最初の4桁を抽出して，年度という変数に格納します。\n\ndf &lt;- df %&gt;%\n  mutate(\n    中分類 = substr(日経業種コード, 2, 3), #2〜3ケタ目を抽出\n    年度 = substr(決算期, 1, 4) # 最初の4桁を抽出\n    )\n\nこの中分類の内容を確認するには、table()関数を使います。\n\ntable(df$中分類) # 中分類の表\n\n\n   01    03    05    07    09    11    13    15    17    19    21    23    25 \n 2215   934   432  3915   947   178   459  1066   906  2174  4338  5016    96 \n   27    29    31    33    35    37    41    43    45    52    53    55    57 \n 1651   253  1035  1936   203   131  2715  5926  3501   832  1674   670   640 \n   59    61    63    65    67    69    71 \n  261    96   746   625   285   214 11753 \n\n\nこのように、中分類ごとの企業数が計算されました。 このカテゴリー変数の型をclass()関数で確認します。\n\nclass(df$中分類) # 中分類の型\n\n[1] \"character\"\n\n\ncharacterつまり文字列となっています。これをファクター型に変えて、カテゴリー変数であることを明示します。as.factor()関数を使うと、ファクター型に変換できますが，産業コードだけだとどの産業なのか分かりづらいままです。 そこで、factor()関数を使って、カテゴリー変数の内容を指定します。 ついでに，上場コードや連結基準もファクター型に変換しておきます。\nまずどんな中分類があるのかを確認します。 ある変数にどんなカテゴリーがあるのかを確認するには、unique()関数を使います。\n\nchu_level &lt;- sort(unique(df$中分類)) # 中分類のカテゴリーを抽出\n\nこの中分類コードに対応する産業名称を指定するには，factor()関数の引数として，levels =とlabels =を指定します。 以下では，mutate()と組み合わせて，中分類をファクター型に変換します。\n産業名称をベクトルとして収納しておきます。\n\nchu_name &lt;- c(\n  \"食品\",\"繊維\",\"パルプ・紙\",\"化学工業\",\"医薬品\",\"石油\",\"ゴム\",\"窯業\",\"鉄鉱業\",\"非金属及び金属製品\",\"機械\",\"電気機器\",\"造船\",\"自動車・自動車部品\",\"その他輸送用機器\",\"精密機器\",\"その他製造業\",\"水産\",\"鉱業\",\"建設\",\"商社\",\"小売業\",\"その他金融業\",\"不動産\",\"鉄道・バス\",\"陸運\",\"海運\",\"空輸\",\"倉庫・運輸関連\",\"通信\",\"電力\",\"ガス\",\"サービス業\")\n\n\ndf &lt;- df %&gt;%\n  arrange(中分類) %&gt;%\n  mutate(\n    中分類 = factor( # 中分類をファクター型に変換\n      中分類,\n      levels = chu_level, # カテゴリーの種類\n      labels = chu_name), # カテゴリーの名称\n    上場コード = factor(\n      上場コード,\n      levels = c(11,12,13), # カテゴリーの種類\n      labels = c(\"1部\",\"2部\",\"マザーズ\")), # カテゴリーの名称\n    連結基準 = factor(\n      連結基準,\n      levels = c(1,2,3,0),\n      labels = c(\"日本基準\",\"米国基準\",\"IFRS\",\"単独\"))\n      )\n\nカテゴリー変数がファクター型に変換されたので，再度summary()関数を使って，概要統計量を確認してみましょう。\n\nsummary(df)\n\n  会社コード           企業名             決算期             決算種別 \n Length:57823       Length:57823       Length:57823       Min.   :10  \n Class :character   Class :character   Class :character   1st Qu.:10  \n Mode  :character   Mode  :character   Mode  :character   Median :10  \n                                                          Mean   :10  \n                                                          3rd Qu.:10  \n                                                          Max.   :10  \n                                                                      \n     連結基準        決算月数        上場コード    日経業種コード  \n 日本基準:55727   Min.   : 1.00   1部     :33171   Min.   :101001  \n 米国基準:  581   1st Qu.:12.00   2部     :22529   1st Qu.:121204  \n IFRS    : 1515   Median :12.00   マザーズ: 2123   Median :241403  \n 単独    :    0   Mean   :11.98                    Mean   :190751  \n                  3rd Qu.:12.00                    3rd Qu.:257561  \n                  Max.   :17.00                    Max.   :271704  \n                                                                   \n    現金預金           資産合計             資本金          資本剰余金     \n Min.   :       4   Min.   :       70   Min.   :      1   Min.   :-161917  \n 1st Qu.:    2023   1st Qu.:    14062   1st Qu.:   1198   1st Qu.:    965  \n Median :    5370   Median :    39028   Median :   3363   Median :   2995  \n Mean   :   38172   Mean   :   363536   Mean   :  16481   Mean   :  20259  \n 3rd Qu.:   16467   3rd Qu.:   125705   3rd Qu.:  10090   3rd Qu.:   9927  \n Max.   :68502665   Max.   :303846980   Max.   :3500000   Max.   :4503856  \n NA's   :193        NA's   :44          NA's   :198       NA's   :7714     \n   利益剰余金          自己株式            売上高            経常利益      \n Min.   : -972773   Min.   :-3306037   Min.   :       1   Min.   :-869562  \n 1st Qu.:    2250   1st Qu.:   -1368   1st Qu.:   13366   1st Qu.:    425  \n Median :    9163   Median :    -279   Median :   38209   Median :   1626  \n Mean   :   75680   Mean   :   -5144   Mean   :  237440   Mean   :  14070  \n 3rd Qu.:   34436   3rd Qu.:     -39   3rd Qu.:  127091   3rd Qu.:   6126  \n Max.   :26453126   Max.   :      -1   Max.   :31379507   Max.   :5670456  \n NA's   :299        NA's   :10800      NA's   :27         NA's   :21       \n    法人税等       法人税等調整額       親会社株主に帰属する当期純利益\n Min.   : -21709   Min.   :-1139009.0   Min.   :-1708029              \n 1st Qu.:    159   1st Qu.:    -134.5   1st Qu.:     163              \n Median :    586   Median :      -7.0   Median :     823              \n Mean   :   4827   Mean   :    -114.7   Mean   :    7707              \n 3rd Qu.:   2170   3rd Qu.:      91.0   3rd Qu.:    3372              \n Max.   :1190782   Max.   : 1097414.0   Max.   : 4987962              \n NA's   :391       NA's   :3736         NA's   :29                    \n 研究開発費IFRS     研究開発費      開発費・試験研究費\n Min.   :    48   Min.   :      1   Min.   :     1    \n 1st Qu.:  2440   1st Qu.:    131   1st Qu.:   169    \n Median : 24628   Median :    547   Median :   651    \n Mean   : 91248   Mean   :   8441   Mean   :  7528    \n 3rd Qu.:108096   3rd Qu.:   2330   3rd Qu.:  2710    \n Max.   :806905   Max.   :1124262   Max.   :662610    \n NA's   :57583    NA's   :21525     NA's   :38296     \n 現金及び現金同等物の期末残高        中分類          年度          \n Min.   :    -292             サービス業:11753   Length:57823      \n 1st Qu.:    1913             商社      : 5926   Class :character  \n Median :    5328             電気機器  : 5016   Mode  :character  \n Mean   :   39185             機械      : 4338                     \n 3rd Qu.:   16954             化学工業  : 3915                     \n Max.   :68419223             小売業    : 3501                     \n NA's   :1591                 (Other)   :23374                     \n\n\nカテゴリー変数はカテゴリーの種類と個数が表示されています。\n\n2つの変数から表を作成する方法について学びます。 典型的な表として，2変数のクロス集計表があります。 例えば，連結基準，つまり企業が採用している会計基準の種類と，上場コード，つまり企業が上場している市場の種類，の2変数について，それぞれのカテゴリーごとの企業数を計算することができます。\n\ntable(df$連結基準, df$上場コード)\n\n          \n             1部   2部 マザーズ\n  日本基準 31290 22432     2005\n  米国基準   580     0        1\n  IFRS      1301    97      117\n  単独         0     0        0\n\n\n圧倒的に，日本基準で上場している企業が多いことがわかります。 2020年度のデータだけを抽出して，同じようにクロス集計表を作成してみましょう。\n\ndf %&gt;%\n  filter(年度 == 2020) %&gt;%\n  with(table(連結基準, 上場コード))\n\n          上場コード\n連結基準  1部  2部 マザーズ\n  日本基準 1474 1177      259\n  米国基準   11    0        0\n  IFRS      194   15       22\n  単独        0    0        0\n\n\n東証1部に上場している企業に注目すると，日本基準採用企業が1474社，米国基準採用企業が11社，IFRS採用企業が194社となっていることがわかりました。\nこのように，table()関数の引数として2つのカテゴリー変数を指定すると，そこから\\(2 \\times 2\\)のグループに属する企業数を計算し，表を作成してくれます。\nここで急に登場したwith()関数ですが，with()関数は主として次の2つの引数をとります。\n\nデータ\n式\n\n例えば，先の表を作る場合を考えてみましょう。 普通に書くと\n\ntable(df$連結基準, df$上場コード)\n\nとかきましたが，何度もdf$を書くことが面倒なので，with()関数を使って\n\nwith(df, table(連結基準, 上場コード))\n\nと，第1引数にdfを指定すれば，第2引数の式の中でdf$を書く必要がなくなります。したがって，パイプ演算子を使って，\n\ndf %&gt;% with(table(連結基準, 上場コード))\n\nと処理をつなげることができます。 便利ですね。\n\n次は，量的変数をカテゴリーごとに分析したいときがあります。 たとえば，産業別や年度別に売上高の平均値を知りたい，ということが何度もあります。 任意のグループごとに処理を繰り返したいときは，dplyrパッケージのgroup_by()関数を使います。 group_by()関数は，第1引数にグループ化したい変数を指定します。\nそしてgroup_by()関数と同時に使うことで，グループごとの統計量を計算するために便利なのがdplyrパッケージのsummarize()関数です。 summarize()関数は，次のような引数をとり，各種統計量を計算してくれます。\n\n\nmean = : 平均\n\nmedian = : 中央値\n\nsd = : 標準偏差\n\nvar = : 分散\n\nn() : グループごとの観測値の個数\n\n例えば，上場場所ごとに売上高の平均値を計算するには，次のようにします。\n\ndf %&gt;%\n  group_by(上場コード) %&gt;% # 上場場ごとに\n  summarize(\n    企業数 = n(), #\n    平均売上高 = mean(売上高, na.rm = TRUE) # 平均\n    ) %&gt;%\n  ungroup() %&gt;% # グループ化解除\n  knitr::kable(booktabs = TRUE) # 表を作成\n\n\n\n上場コード\n企業数\n平均売上高\n\n\n\n1部\n33171\n393156.220\n\n\n2部\n22529\n29884.533\n\n\nマザーズ\n2123\n5459.012\n\n\n\n\n\n結果を見れば分かるとおり，group_by()で上場場所ごとにグループ化し，summarize()で企業数と平均売上高を計算しているので，上場場所，企業数，平均売上高の3変数が3つの観測値をもつ\\(3 \\times 3\\)の表が作成されています。 group_by()とsummarize()を組み合わせると，結果としてグループ数に応じた統計量を計算した結果となり，元のデータよりも小さなデータフレームとなって返ってきます。\nついでに，産業別の売上高合計，利益平均値，利益中央値，利益の標準偏差を計算してみましょう。\n\ndf %&gt;%\n  group_by(中分類) %&gt;% # 産業中分類ごとに\n  summarize(\n    企業数 = n(), # n()で要素数\n    売上合計 = sum(売上高, na.rm = TRUE), # 合計\n    利益平均値 = mean(親会社株主に帰属する当期純利益, na.rm = TRUE), # 平均\n    利益中央値 = median(親会社株主に帰属する当期純利益, na.rm = TRUE), # 中央値\n    利益標準偏差 = sd(親会社株主に帰属する当期純利益, na.rm = TRUE) # 標準偏差\n    ) %&gt;%\n  arrange(desc(売上合計)) %&gt;% # 売上合計で降順に並び替え\n  ungroup() %&gt;% # グループ化解除\n  knitr::kable(booktabs = TRUE) # 表を作成\n\n\n\n\n\n\n\n\n\n\n\n中分類\n企業数\n売上合計\n利益平均値\n利益中央値\n利益標準偏差\n\n\n\n電気機器\n5016\n1941560030\n10167.927\n1084.0\n62674.007\n\n\n商社\n5926\n1909721701\n6754.815\n738.0\n43249.527\n\n\n自動車・自動車部品\n1651\n1688864541\n39250.629\n1851.0\n210604.044\n\n\n小売業\n3501\n793035711\n4590.688\n880.0\n14968.112\n\n\n化学工業\n3915\n736860746\n7564.608\n1445.0\n23530.649\n\n\nサービス業\n11753\n694250494\n2578.502\n361.0\n17729.118\n\n\n通信\n625\n647052927\n67415.843\n3040.0\n284105.640\n\n\n機械\n4338\n616584704\n5310.454\n1007.0\n20211.162\n\n\n建設\n2715\n597371111\n4868.903\n1073.5\n22122.402\n\n\n食品\n2215\n553185961\n8370.878\n1211.0\n32427.752\n\n\n電力\n285\n435223159\n24108.284\n21988.0\n127809.199\n\n\n非金属及び金属製品\n2174\n333425028\n3537.316\n704.0\n15694.021\n\n\n鉄道・バス\n670\n309477897\n16710.421\n3660.0\n61053.123\n\n\n鉄鉱業\n906\n306858163\n8887.185\n903.0\n47067.285\n\n\n石油\n178\n247483911\n14830.657\n1510.5\n81496.356\n\n\n医薬品\n947\n199368660\n20915.376\n4157.0\n48451.048\n\n\nその他製造業\n1936\n189462230\n2630.949\n595.0\n8999.953\n\n\n不動産\n1674\n181588397\n5826.409\n1192.0\n20315.917\n\n\n窯業\n1066\n145506672\n4485.089\n909.5\n13623.277\n\n\nその他金融業\n832\n142861287\n9388.689\n1657.5\n47428.745\n\n\nゴム\n459\n133429682\n12362.357\n1381.0\n43652.986\n\n\n精密機器\n1035\n132220025\n6338.030\n1015.0\n17597.021\n\n\n陸運\n640\n118243116\n4662.080\n1285.5\n9675.867\n\n\n繊維\n934\n115700455\n2405.079\n542.0\n10837.288\n\n\n海運\n261\n104869365\n15152.031\n1012.0\n93497.186\n\n\nパルプ・紙\n432\n100989604\n3345.630\n693.5\n9869.195\n\n\nガス\n214\n89266508\n16210.327\n3620.0\n26366.794\n\n\n空輸\n96\n70396355\n13813.062\n1053.0\n105853.201\n\n\n造船\n96\n50404788\n4001.927\n968.5\n18613.163\n\n\n倉庫・運輸関連\n746\n48088368\n1876.247\n622.0\n3991.522\n\n\n水産\n203\n35003357\n2327.473\n1122.0\n4202.917\n\n\nその他輸送用機器\n253\n27993041\n4227.802\n1102.0\n12600.550\n\n\n鉱業\n131\n26740727\n15827.588\n2096.0\n46860.380\n\n\n\n\n\n次のグラフ作成のためのデータを作成するため，年度別ごとに，ROEの平均値を計算し，その結果をdf_yearという変数に代入します。 ROEは，ある年度の親会社に帰属する当期純利益を期首株主資本で割った値です。 株主資本は，資本金と資本剰余金，利益剰余金，自己株式の合計で計算しますが，欠損値になっている会社もあるので，replace_na()関数を使って欠損値にはゼロを代入します。\n\ndf &lt;- df %&gt;%\n  replace_na(list(資本剰余金 = 0, 利益剰余金 = 0, 自己株式 = 0)) %&gt;% # 欠損値をゼロに置き換え\n  group_by(企業名) %&gt;% # 会社ごとに\n  mutate( # 新変数作成\n    株主資本 = 資本金 + 資本剰余金 + 利益剰余金 + 自己株式, # 株主資本を計算\n    ) %&gt;%\n    filter(株主資本 &gt;0 ) %&gt;% # 株主資本がマイナスの企業を除外\n  mutate(\n    ROE = 親会社株主に帰属する当期純利益 / lag(株主資本) # ROEを計算\n    ) %&gt;%\n  ungroup() # グループ化解除\n\ndf_year &lt;- df %&gt;%\n  group_by(年度) %&gt;% # 年ごとに\n  summarize( # 統計量を計算\n    平均ROE = mean(ROE, na.rm = TRUE)\n    ) %&gt;%\n  ungroup() # グループ化解除\n\nこれで，年度ごと，上場場所ごとに，平均ROEを計算したデータフレームdf_yearができました。\nここで注意しなければならない点として，group_by(企業名)とした上で，lag()関数を使っている点です。 lag()関数は，引数として指定した変数の値の1つ前の値に変換します。 したがって，group_by()を使わないと次のような結果になります。\n\n\n\n\n\n\n\n\n\n\n\n企業名\n年度\n親会社株主に帰属する当期純利益\n株主資本\nROE\n\n\n\nニップン\n2020\n8941\n129587\n0.0723101\n\n\nニップン\n2021\n8636\n135597\n0.0666425\n\n\nニップン\n2022\n9327\n142166\n0.0687847\n\n\n日清製粉グループ本社\n1999\n7327\n156543\n0.0515383\n\n\n日清製粉グループ本社\n2000\n10822\n175112\n0.0691312\n\n\n日清製粉グループ本社\n2001\n11136\n177671\n0.0635936\n\n\n\n\n\nここで問題になっているのが，日清製粉グループ本社の1999年のROEが計算されている点である。 ROEは分子に親会社株主に帰属する当期純利益，分母に期首株主資本，つまりは前期末の株主資本を使います。 したがって，1999年のROEを計算するためには，1998年の株主資本を使う必要がありますが，データは1999年からしか存在しないので欠損値にならないといけないのに，計算されてしまっています。 つまり，一つ上のニップンの2022年の株主資本のデータを使っているのです。 そこで，group_by()により企業ごとにグループ化して，lag()関数を使って，一つ前の観測値を使うようにし，1999年のROEは欠損値になるようにします。\n\n\n\n\n企業名\n年度\n株主資本\nROE\n\n\n\nニップン\n2020\n129587\n0.0723101\n\n\nニップン\n2021\n135597\n0.0666425\n\n\nニップン\n2022\n142166\n0.0687847\n\n\n日清製粉グループ本社\n1999\n156543\nNA\n\n\n日清製粉グループ本社\n2000\n175112\n0.0691312\n\n\n日清製粉グループ本社\n2001\n177671\n0.0635936\n\n\n\n\n\n\nカテゴリー変数のファクター化，with()関数とtable()関数を使ったクロス集計表の作成，group_by()関数とsummarize()関数を使ったグループごとの統計量の計算について学んだので，これらの結果を使ってグラフを作ることで，読者に伝わるデータの可視化を行いたいと思います。 キレイなグラフを比較的簡単に作ることができるggplot2パッケージを使います。\n\nggplot2パッケージのggplot()関数は，次のような引数をとります。\n\n\ndata = : データフレーム\n\nmapping = aes() : グラフの構成要素を指定する関数\n\ngeom_*** : グラフの種類を指定する関数\n各種オプション\n\n最初の注意点として，ggplot()関数は，第1引数data =でtibbleかdata.frameを指定する必要があります。 データの型に気をつけましょう。\nでは，年度ごとに平均ROEを示した折れ線グラフを作図していきます。 まず土台となるデータフレームを指定します。\n\nggplot(data = df_year)\n\n\n\n\n土台ができましたが，まだ何も表示されていません。 次に，グラフの構成要素を指定するために，mapping = aes()で，軸を指定します。 今回は，横軸に年度，縦軸に平均ROEを指定します。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE))\n\n\n\n\n縦軸と横軸が表示されました。 軸のラベルが文字化けしているので，最初に作成しておいたスタイルmystyleを適用します。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE)) + mystyle\n\n\n\n\n次に，グラフを作成するために，geom_line()関数を使います。 ggplot関数では，次のようなgeom_***()関数を使って，グラフの種類を指定します。\n\n\ngeom_point() : 散布図\n\ngeom_line() : 折れ線グラフ\n\ngeom_bar() : 棒グラフ\n\ngeom_boxplot() : 箱ひげ図\n\ngeom_histogram() : ヒストグラム\n\ngeom_density() : カーネル密度推定図\n\ngeom_violin() : バイオリンプロット\n\ngeom_smooth() : 平滑化曲線\n\nここでは横軸が年度という文字列，縦軸が平均ROEという量的変数となるグラフを作るので，geom_bar()を使います。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE)) +\n  geom_bar(stat = \"identity\") + mystyle\n\n\n\n\n横軸が順序に意味のある変数であれば，geom_line()で折れ線グラフを作るほうが良いでしょう。 この場合，年度は文字列ですが，本来は順序に意味のあるカテゴリー変数ですので，factor()関数を使って，ファクター型に変換します。\n\ndf_year &lt;- df_year %&gt;%\n  mutate(年度f = factor(年度,\n  levels = c(1999:2022),\n  ordered = TRUE))\n\n横軸が順序付きのファクターの年度fとなったので，geom_line()を使って折れ線グラフを作成します。 ここで，オプションとして，group = 1を指定して，データ全体が1つのグループであることを明示します。 横軸がファクター型であるときは，group = 1をつける，というおまじないを覚えておきましょう。\n\nggplot(data = df_year, mapping = aes(x = 年度f, y = 平均ROE, group = 1)) +\n  geom_line() + geom_point() + xlab(\"年度\") + ylab(\"平均ROE\") + mystyle\n\n\n\n\n上のコードは，必要な引数を省略せずに書きましたが，省略できるものを省略しつつ， すべての要素を\\(+\\)でつなぐよりも，レイヤーごとに代入していくほうが，コードが読みやすくなります。\n\ng &lt;- ggplot(df_year) + aes(年度f, 平均ROE, group = 1) # 基本要素\ng &lt;- g + geom_line() + geom_point() # 折れ線グラフと散布図\ng &lt;- g + xlab(\"年度\") + ylab(\"平均ROE\") + mystyle # 見た目の調整\nprint(g)\n\n\n\n\n\n次に，前年度のROEのヒストグラムを作成してみましょう。\n\ng &lt;- ggplot(df) +\n  aes(ROE) + # 1変数 ROE を指定\n  geom_histogram(fill=\"skyblue\", color = \"black\") + # ヒストグラム\n  xlim(-1,1) + mystyle # x軸の範囲とスタイルを指定\nprint(g)\n\n\n\n\n\n次に，上場場所別ROEの分布を箱ひげ図とバイオリンプロットで比較してみましょう。 箱ひげ図は，geom_boxplot()を使います。\n\ng &lt;- ggplot(df) + aes(x = factor(上場コード), y = ROE) + geom_boxplot() + mystyle\nprint(g)\n\n\n\n\nROEのばらつきが大きく，極端にROEが大きかったり小さかったりする異常値のせいで，箱ひげ図がうまく描写されていません。 そこで異常値を除外するため，ROEの範囲を\\([-0.5,0.5]\\)に限定してみましょう。 先ほど箱ひげ図を作成するために作ったオブジェクトgにylim()を追加して，Y軸の範囲を指定します。\n\ng &lt;- g + ylim(-.5,.5) # y軸の範囲を指定\nprint(g)\n\n\n\n\n箱ひげ図の箱の下辺は第1四分位(Q1)で，上辺は第3四分位(Q3)です。 真ん中の太い横棒は中央値です。 箱から出ているひげはデータの四分位範囲を超えた値の範囲ですが，黒丸は外れ値を表しています。\n次に，バイオリンプロットを作成します。 バイオリンプロットもほぼ箱ひげ図と同じですが，geom_violin()を使います。\n\ng &lt;- ggplot(df) + aes(x = factor(上場コード), y = ROE)\ng &lt;- g + geom_violin() + ylim(-.5,.5) + mystyle\nprint(g)\n\n\n\n\n箱ひげ図やバイオリンプロットから，東証1部と東証2部の上場企業のROEは中央値に差があるものの，分布の形は似ていますが，マザーズの企業は，ROEの分布が大きく異なることがわかります。\n\n最後に，作成した図を保存するには，ggsave()関数を使います。 ggsave()関数は，次のような引数をとります。\n\n\nfilename = : 保存するファイル名\n\nplot = : 保存する図\n\nwidth = : 図の幅\n\nheight = : 図の高さ\n\ndpi = : 解像度\n\n日本語を含まないグラフであったり，Windowsならこれでうまくいくのですが，Macで日本語を含むggplotのグラフを保存するには一手間必要です。\n\nMacの場合，ggsave()関数を使っても，日本語が文字化けしてしまいます。 そこでquartz()関数を用いて，次のようにすれば，日本語を含むグラフを保存することができます。 quartz()は以下の引数を取ります。\n\n\nfilename = : 保存するファイル名\n\nwidth = : 図の幅\n\nheight = : 図の高さ\n\npointsize = : フォントサイズ\n\nfamily = : フォントファミリー\n\ntype = : ファイルタイプ\n\nantialias = : アンチエイリアス\n\n\nquartz(\"violin_plot.pdf\", width = 10, height = 6, pointsize = 10)\nprint(g)\ndev.off()\n\nこれで作業ディレクトリにviolin_plot.pdfが保存されました。"
  },
  {
    "objectID": "presemi2023_05.html#変数の種類と記述統計",
    "href": "presemi2023_05.html#変数の種類と記述統計",
    "title": "記述統計とデータの可視化・視覚化",
    "section": "",
    "text": "データには「カテゴリ変数」(category variable)と「量的変数」(quantitative variable)あるいは「連続変数」(continuous variable)があり，それぞれに対して適切なグラフの種類があります。\n\nカテゴリー変数(category variable)とは、観測値が属するカテゴリーを表す変数です。 たとえば、日経産業中分類の「水産」は35、鉱業は37，建設は41ですが、これらの数値は足したり引いたりすることに意味はありません。\n量的変数(quantitative variable)とは、観測値が数値で表される変数です。 たとえば、売上高や株価は金額で表されるため、足したり引いたり、平均や分散を計算することに意味があります。\nしたがって、手元にあるデータベースの各変数がカテゴリー変数か量的変数かを把握することは極めて重要です。 Rでは自動で両者を区別したりはしてくれないので、データを読み込んだ後に変数の種類を確認し、自分で指定します。\n\nここでは、教科書とは違う、企業の財務データを使いながら、データの可視化を学びます。 財務データが収録されたcsvファイルを，tidyverseのread_csv()関数を使って読み込みます。 read_csv()関数の引数として，ファイルの場所とファイル名を直接パスあるいは相対パスを指定します。\n\ndf &lt;- read_csv(\"data/RD_2022.csv\")\nglimpse(df) # データの概要\n\nRows: 57,823\nColumns: 23\n$ 会社コード                     &lt;chr&gt; \"0000001\", \"0000001\", \"0000001\", \"00000…\n$ 企業名                         &lt;chr&gt; \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋\",…\n$ 決算期                         &lt;chr&gt; \"1999/03\", \"2000/03\", \"2001/03\", \"2002/…\n$ 決算種別                       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準                       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 決算月数                       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 上場コード                     &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,…\n$ 日経業種コード                 &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341,…\n$ 現金預金                       &lt;dbl&gt; 6307, 4951, 3818, 4185, 4015, 3456, 277…\n$ 資産合計                       &lt;dbl&gt; 62109, 60885, 60599, 57069, 55373, 5856…\n$ 資本金                         &lt;dbl&gt; 5664, 5664, 5664, 5664, 5664, 5664, 566…\n$ 資本剰余金                     &lt;dbl&gt; NA, NA, NA, NA, 742, 742, 742, 743, 749…\n$ 利益剰余金                     &lt;dbl&gt; 2739, 4238, 4812, 5485, 6254, 6378, 727…\n$ 自己株式                       &lt;dbl&gt; NA, NA, -79, -154, -387, -464, -368, -2…\n$ 売上高                         &lt;dbl&gt; 171944, 171031, 166644, 158006, 162773,…\n$ 経常利益                       &lt;dbl&gt; 1600, 2299, 1947, 2333, 3314, 2895, 335…\n$ 法人税等                       &lt;dbl&gt; 620, 606, 908, 856, 1234, 1302, 1422, 1…\n$ 法人税等調整額                 &lt;dbl&gt; NA, -178, -114, 44, -272, -234, 136, -3…\n$ 親会社株主に帰属する当期純利益 &lt;dbl&gt; -251, 327, 927, 1026, 1122, 1248, 1388,…\n$ 研究開発費IFRS                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ 研究開発費                     &lt;dbl&gt; 210, 201, 190, 179, 197, 212, 201, 193,…\n$ `開発費・試験研究費`           &lt;dbl&gt; 210, 105, 119, 153, 176, 156, 122, 148,…\n$ 現金及び現金同等物の期末残高   &lt;dbl&gt; NA, 4865, 3729, 4097, 3923, 3359, 2725,…\n\n\n23個の変数があり、データの個数は57,823となっています。 以下ではこのデータを使って、データの可視化を学びます。\n\nはじめにsummary()で基本的な統計量を確認します。\n\nsummary(df)\n\n  会社コード           企業名             決算期             決算種別 \n Length:57823       Length:57823       Length:57823       Min.   :10  \n Class :character   Class :character   Class :character   1st Qu.:10  \n Mode  :character   Mode  :character   Mode  :character   Median :10  \n                                                          Mean   :10  \n                                                          3rd Qu.:10  \n                                                          Max.   :10  \n                                                                      \n    連結基準        決算月数       上場コード    日経業種コード  \n Min.   :1.000   Min.   : 1.00   Min.   :11.00   Min.   :101001  \n 1st Qu.:1.000   1st Qu.:12.00   1st Qu.:11.00   1st Qu.:121204  \n Median :1.000   Median :12.00   Median :11.00   Median :241403  \n Mean   :1.062   Mean   :11.98   Mean   :11.46   Mean   :190751  \n 3rd Qu.:1.000   3rd Qu.:12.00   3rd Qu.:12.00   3rd Qu.:257561  \n Max.   :3.000   Max.   :17.00   Max.   :13.00   Max.   :271704  \n                                                                 \n    現金預金           資産合計             資本金          資本剰余金     \n Min.   :       4   Min.   :       70   Min.   :      1   Min.   :-161917  \n 1st Qu.:    2023   1st Qu.:    14062   1st Qu.:   1198   1st Qu.:    965  \n Median :    5370   Median :    39028   Median :   3363   Median :   2995  \n Mean   :   38172   Mean   :   363536   Mean   :  16481   Mean   :  20259  \n 3rd Qu.:   16467   3rd Qu.:   125705   3rd Qu.:  10090   3rd Qu.:   9927  \n Max.   :68502665   Max.   :303846980   Max.   :3500000   Max.   :4503856  \n NA's   :193        NA's   :44          NA's   :198       NA's   :7714     \n   利益剰余金          自己株式            売上高            経常利益      \n Min.   : -972773   Min.   :-3306037   Min.   :       1   Min.   :-869562  \n 1st Qu.:    2250   1st Qu.:   -1368   1st Qu.:   13366   1st Qu.:    425  \n Median :    9163   Median :    -279   Median :   38209   Median :   1626  \n Mean   :   75680   Mean   :   -5144   Mean   :  237440   Mean   :  14070  \n 3rd Qu.:   34436   3rd Qu.:     -39   3rd Qu.:  127091   3rd Qu.:   6126  \n Max.   :26453126   Max.   :      -1   Max.   :31379507   Max.   :5670456  \n NA's   :299        NA's   :10800      NA's   :27         NA's   :21       \n    法人税等       法人税等調整額       親会社株主に帰属する当期純利益\n Min.   : -21709   Min.   :-1139009.0   Min.   :-1708029              \n 1st Qu.:    159   1st Qu.:    -134.5   1st Qu.:     163              \n Median :    586   Median :      -7.0   Median :     823              \n Mean   :   4827   Mean   :    -114.7   Mean   :    7707              \n 3rd Qu.:   2170   3rd Qu.:      91.0   3rd Qu.:    3372              \n Max.   :1190782   Max.   : 1097414.0   Max.   : 4987962              \n NA's   :391       NA's   :3736         NA's   :29                    \n 研究開発費IFRS     研究開発費      開発費・試験研究費\n Min.   :    48   Min.   :      1   Min.   :     1    \n 1st Qu.:  2440   1st Qu.:    131   1st Qu.:   169    \n Median : 24628   Median :    547   Median :   651    \n Mean   : 91248   Mean   :   8441   Mean   :  7528    \n 3rd Qu.:108096   3rd Qu.:   2330   3rd Qu.:  2710    \n Max.   :806905   Max.   :1124262   Max.   :662610    \n NA's   :57583    NA's   :21525     NA's   :38296     \n 現金及び現金同等物の期末残高\n Min.   :    -292            \n 1st Qu.:    1913            \n Median :    5328            \n Mean   :   39185            \n 3rd Qu.:   16954            \n Max.   :68419223            \n NA's   :1591                \n\n\n文字列となっている変数以外の量的変数については、最小値、第1四分位、中央値、平均値、第3四分位、最大値、欠損値の数、といった項目が計算されています。 数値データのうち、カテゴリー変数の統計量については意味が無いです。\n23個の変数の型を確認すると、大部分の財務データは数値&lt;dbl&gt;ですが、\n\n会社コード\n企業名\n決算期\n\nの3つは文字列&lt;chr&gt;となっています。 また、数値となっているけれど、実際はカテゴリー変数であるものとして、\n\n決算種別 : 10 = 本決算\n\n連結基準 : 1 = 日本基準, 2 = 米国基準, 3 = IFRS, 0 = 単独\n\n上場コード : 11 = 東証1部, 12 = 東証2部, 13 = 東証マザーズ,\n日経業種コード : 後で説明あり\n\nがあります。 文字列となっている変数以外の量的変数については、最小値、第1四分位、中央値、平均値、第3四分位、最大値、欠損値の数、といった項目が計算されています。 数値データとなっているカテゴリー変数である決算種別，連結基準，上場コード，日経業種コードの統計量も計算されていますが，もちろん意味は無いので，Rにカテゴリー変数であることを明示するためにファクター型に変換する必要があります。\nとりあえず、数値データのうち、カテゴリー変数ではないものについて、統計量を計算してみます。 主要な統計量を返す関数には以下のものがあります。\n\n\nmean() : 算術平均を計算する\n\nmedian() : 中央値を計算する\n\nsd() : (不偏)標準偏差を計算する\n\nvar() : (不偏)分散を計算する\n\nmin() : 最小値を計算する\n\nmax() : 最大値を計算する\n\nでは、売上高の平均を計算してみましょう。 データフレームdfの売上高にアクセスするには、df$売上高のように、$を使って変数名を指定します。 Excelでいうと，dfがシート名，売上高が列名に相当します。\n\nmean(df$売上高)\n\n[1] NA\n\n\nNAが帰ってきましたね。 実は、このmean()関数は、引数となるベクトル変数の中に欠損値NAがあると、NAを返します。 欠損値を意味するNAは，その観測値が存在しないことを表します。 このような場合、NAを除外して平均を計算する必要があるので、na.rm = TRUEという引数を追加します。\n\nmean(df$売上高, na.rm = TRUE)\n\n[1] 237440.1\n\n\nこれで、売上高の平均が2.3744011^{5}となりました。\n同じように、\n\nmedian(df$売上高, na.rm = TRUE) # 中央値\n\n[1] 38209\n\nsd(df$売上高, na.rm = TRUE) # 標準偏差\n\n[1] 938244.4\n\n\nとすることで、中央値と標準偏差が求められます。\n\nカテゴリー変数について見ていきましょう。 ここでは日経業種コードを例にとります。 日経業種コードは6ケタの数字ですが、最初の1ケタが大分類、次の2ケタ目が中分類、最後の3ケタ目が小分類を表します。つまり1 + 32 + 344のような構造になっています。 実証会計研究では、産業中分類をよく使うので、ここでは中分類を抽出してみましょう。 またしてもsubstr()関数を使って、2〜3ケタ目を抽出し、中分類という変数に格納します。 ついでに，決算期のデータがYYYY/MMという形式になっているので，最初の4桁を抽出して，年度という変数に格納します。\n\ndf &lt;- df %&gt;%\n  mutate(\n    中分類 = substr(日経業種コード, 2, 3), #2〜3ケタ目を抽出\n    年度 = substr(決算期, 1, 4) # 最初の4桁を抽出\n    )\n\nこの中分類の内容を確認するには、table()関数を使います。\n\ntable(df$中分類) # 中分類の表\n\n\n   01    03    05    07    09    11    13    15    17    19    21    23    25 \n 2215   934   432  3915   947   178   459  1066   906  2174  4338  5016    96 \n   27    29    31    33    35    37    41    43    45    52    53    55    57 \n 1651   253  1035  1936   203   131  2715  5926  3501   832  1674   670   640 \n   59    61    63    65    67    69    71 \n  261    96   746   625   285   214 11753 \n\n\nこのように、中分類ごとの企業数が計算されました。 このカテゴリー変数の型をclass()関数で確認します。\n\nclass(df$中分類) # 中分類の型\n\n[1] \"character\"\n\n\ncharacterつまり文字列となっています。これをファクター型に変えて、カテゴリー変数であることを明示します。as.factor()関数を使うと、ファクター型に変換できますが，産業コードだけだとどの産業なのか分かりづらいままです。 そこで、factor()関数を使って、カテゴリー変数の内容を指定します。 ついでに，上場コードや連結基準もファクター型に変換しておきます。\nまずどんな中分類があるのかを確認します。 ある変数にどんなカテゴリーがあるのかを確認するには、unique()関数を使います。\n\nchu_level &lt;- sort(unique(df$中分類)) # 中分類のカテゴリーを抽出\n\nこの中分類コードに対応する産業名称を指定するには，factor()関数の引数として，levels =とlabels =を指定します。 以下では，mutate()と組み合わせて，中分類をファクター型に変換します。\n産業名称をベクトルとして収納しておきます。\n\nchu_name &lt;- c(\n  \"食品\",\"繊維\",\"パルプ・紙\",\"化学工業\",\"医薬品\",\"石油\",\"ゴム\",\"窯業\",\"鉄鉱業\",\"非金属及び金属製品\",\"機械\",\"電気機器\",\"造船\",\"自動車・自動車部品\",\"その他輸送用機器\",\"精密機器\",\"その他製造業\",\"水産\",\"鉱業\",\"建設\",\"商社\",\"小売業\",\"その他金融業\",\"不動産\",\"鉄道・バス\",\"陸運\",\"海運\",\"空輸\",\"倉庫・運輸関連\",\"通信\",\"電力\",\"ガス\",\"サービス業\")\n\n\ndf &lt;- df %&gt;%\n  arrange(中分類) %&gt;%\n  mutate(\n    中分類 = factor( # 中分類をファクター型に変換\n      中分類,\n      levels = chu_level, # カテゴリーの種類\n      labels = chu_name), # カテゴリーの名称\n    上場コード = factor(\n      上場コード,\n      levels = c(11,12,13), # カテゴリーの種類\n      labels = c(\"1部\",\"2部\",\"マザーズ\")), # カテゴリーの名称\n    連結基準 = factor(\n      連結基準,\n      levels = c(1,2,3,0),\n      labels = c(\"日本基準\",\"米国基準\",\"IFRS\",\"単独\"))\n      )\n\nカテゴリー変数がファクター型に変換されたので，再度summary()関数を使って，概要統計量を確認してみましょう。\n\nsummary(df)\n\n  会社コード           企業名             決算期             決算種別 \n Length:57823       Length:57823       Length:57823       Min.   :10  \n Class :character   Class :character   Class :character   1st Qu.:10  \n Mode  :character   Mode  :character   Mode  :character   Median :10  \n                                                          Mean   :10  \n                                                          3rd Qu.:10  \n                                                          Max.   :10  \n                                                                      \n     連結基準        決算月数        上場コード    日経業種コード  \n 日本基準:55727   Min.   : 1.00   1部     :33171   Min.   :101001  \n 米国基準:  581   1st Qu.:12.00   2部     :22529   1st Qu.:121204  \n IFRS    : 1515   Median :12.00   マザーズ: 2123   Median :241403  \n 単独    :    0   Mean   :11.98                    Mean   :190751  \n                  3rd Qu.:12.00                    3rd Qu.:257561  \n                  Max.   :17.00                    Max.   :271704  \n                                                                   \n    現金預金           資産合計             資本金          資本剰余金     \n Min.   :       4   Min.   :       70   Min.   :      1   Min.   :-161917  \n 1st Qu.:    2023   1st Qu.:    14062   1st Qu.:   1198   1st Qu.:    965  \n Median :    5370   Median :    39028   Median :   3363   Median :   2995  \n Mean   :   38172   Mean   :   363536   Mean   :  16481   Mean   :  20259  \n 3rd Qu.:   16467   3rd Qu.:   125705   3rd Qu.:  10090   3rd Qu.:   9927  \n Max.   :68502665   Max.   :303846980   Max.   :3500000   Max.   :4503856  \n NA's   :193        NA's   :44          NA's   :198       NA's   :7714     \n   利益剰余金          自己株式            売上高            経常利益      \n Min.   : -972773   Min.   :-3306037   Min.   :       1   Min.   :-869562  \n 1st Qu.:    2250   1st Qu.:   -1368   1st Qu.:   13366   1st Qu.:    425  \n Median :    9163   Median :    -279   Median :   38209   Median :   1626  \n Mean   :   75680   Mean   :   -5144   Mean   :  237440   Mean   :  14070  \n 3rd Qu.:   34436   3rd Qu.:     -39   3rd Qu.:  127091   3rd Qu.:   6126  \n Max.   :26453126   Max.   :      -1   Max.   :31379507   Max.   :5670456  \n NA's   :299        NA's   :10800      NA's   :27         NA's   :21       \n    法人税等       法人税等調整額       親会社株主に帰属する当期純利益\n Min.   : -21709   Min.   :-1139009.0   Min.   :-1708029              \n 1st Qu.:    159   1st Qu.:    -134.5   1st Qu.:     163              \n Median :    586   Median :      -7.0   Median :     823              \n Mean   :   4827   Mean   :    -114.7   Mean   :    7707              \n 3rd Qu.:   2170   3rd Qu.:      91.0   3rd Qu.:    3372              \n Max.   :1190782   Max.   : 1097414.0   Max.   : 4987962              \n NA's   :391       NA's   :3736         NA's   :29                    \n 研究開発費IFRS     研究開発費      開発費・試験研究費\n Min.   :    48   Min.   :      1   Min.   :     1    \n 1st Qu.:  2440   1st Qu.:    131   1st Qu.:   169    \n Median : 24628   Median :    547   Median :   651    \n Mean   : 91248   Mean   :   8441   Mean   :  7528    \n 3rd Qu.:108096   3rd Qu.:   2330   3rd Qu.:  2710    \n Max.   :806905   Max.   :1124262   Max.   :662610    \n NA's   :57583    NA's   :21525     NA's   :38296     \n 現金及び現金同等物の期末残高        中分類          年度          \n Min.   :    -292             サービス業:11753   Length:57823      \n 1st Qu.:    1913             商社      : 5926   Class :character  \n Median :    5328             電気機器  : 5016   Mode  :character  \n Mean   :   39185             機械      : 4338                     \n 3rd Qu.:   16954             化学工業  : 3915                     \n Max.   :68419223             小売業    : 3501                     \n NA's   :1591                 (Other)   :23374                     \n\n\nカテゴリー変数はカテゴリーの種類と個数が表示されています。\n\n2つの変数から表を作成する方法について学びます。 典型的な表として，2変数のクロス集計表があります。 例えば，連結基準，つまり企業が採用している会計基準の種類と，上場コード，つまり企業が上場している市場の種類，の2変数について，それぞれのカテゴリーごとの企業数を計算することができます。\n\ntable(df$連結基準, df$上場コード)\n\n          \n             1部   2部 マザーズ\n  日本基準 31290 22432     2005\n  米国基準   580     0        1\n  IFRS      1301    97      117\n  単独         0     0        0\n\n\n圧倒的に，日本基準で上場している企業が多いことがわかります。 2020年度のデータだけを抽出して，同じようにクロス集計表を作成してみましょう。\n\ndf %&gt;%\n  filter(年度 == 2020) %&gt;%\n  with(table(連結基準, 上場コード))\n\n          上場コード\n連結基準  1部  2部 マザーズ\n  日本基準 1474 1177      259\n  米国基準   11    0        0\n  IFRS      194   15       22\n  単独        0    0        0\n\n\n東証1部に上場している企業に注目すると，日本基準採用企業が1474社，米国基準採用企業が11社，IFRS採用企業が194社となっていることがわかりました。\nこのように，table()関数の引数として2つのカテゴリー変数を指定すると，そこから\\(2 \\times 2\\)のグループに属する企業数を計算し，表を作成してくれます。\nここで急に登場したwith()関数ですが，with()関数は主として次の2つの引数をとります。\n\nデータ\n式\n\n例えば，先の表を作る場合を考えてみましょう。 普通に書くと\n\ntable(df$連結基準, df$上場コード)\n\nとかきましたが，何度もdf$を書くことが面倒なので，with()関数を使って\n\nwith(df, table(連結基準, 上場コード))\n\nと，第1引数にdfを指定すれば，第2引数の式の中でdf$を書く必要がなくなります。したがって，パイプ演算子を使って，\n\ndf %&gt;% with(table(連結基準, 上場コード))\n\nと処理をつなげることができます。 便利ですね。\n\n次は，量的変数をカテゴリーごとに分析したいときがあります。 たとえば，産業別や年度別に売上高の平均値を知りたい，ということが何度もあります。 任意のグループごとに処理を繰り返したいときは，dplyrパッケージのgroup_by()関数を使います。 group_by()関数は，第1引数にグループ化したい変数を指定します。\nそしてgroup_by()関数と同時に使うことで，グループごとの統計量を計算するために便利なのがdplyrパッケージのsummarize()関数です。 summarize()関数は，次のような引数をとり，各種統計量を計算してくれます。\n\n\nmean = : 平均\n\nmedian = : 中央値\n\nsd = : 標準偏差\n\nvar = : 分散\n\nn() : グループごとの観測値の個数\n\n例えば，上場場所ごとに売上高の平均値を計算するには，次のようにします。\n\ndf %&gt;%\n  group_by(上場コード) %&gt;% # 上場場ごとに\n  summarize(\n    企業数 = n(), #\n    平均売上高 = mean(売上高, na.rm = TRUE) # 平均\n    ) %&gt;%\n  ungroup() %&gt;% # グループ化解除\n  knitr::kable(booktabs = TRUE) # 表を作成\n\n\n\n上場コード\n企業数\n平均売上高\n\n\n\n1部\n33171\n393156.220\n\n\n2部\n22529\n29884.533\n\n\nマザーズ\n2123\n5459.012\n\n\n\n\n\n結果を見れば分かるとおり，group_by()で上場場所ごとにグループ化し，summarize()で企業数と平均売上高を計算しているので，上場場所，企業数，平均売上高の3変数が3つの観測値をもつ\\(3 \\times 3\\)の表が作成されています。 group_by()とsummarize()を組み合わせると，結果としてグループ数に応じた統計量を計算した結果となり，元のデータよりも小さなデータフレームとなって返ってきます。\nついでに，産業別の売上高合計，利益平均値，利益中央値，利益の標準偏差を計算してみましょう。\n\ndf %&gt;%\n  group_by(中分類) %&gt;% # 産業中分類ごとに\n  summarize(\n    企業数 = n(), # n()で要素数\n    売上合計 = sum(売上高, na.rm = TRUE), # 合計\n    利益平均値 = mean(親会社株主に帰属する当期純利益, na.rm = TRUE), # 平均\n    利益中央値 = median(親会社株主に帰属する当期純利益, na.rm = TRUE), # 中央値\n    利益標準偏差 = sd(親会社株主に帰属する当期純利益, na.rm = TRUE) # 標準偏差\n    ) %&gt;%\n  arrange(desc(売上合計)) %&gt;% # 売上合計で降順に並び替え\n  ungroup() %&gt;% # グループ化解除\n  knitr::kable(booktabs = TRUE) # 表を作成\n\n\n\n\n\n\n\n\n\n\n\n中分類\n企業数\n売上合計\n利益平均値\n利益中央値\n利益標準偏差\n\n\n\n電気機器\n5016\n1941560030\n10167.927\n1084.0\n62674.007\n\n\n商社\n5926\n1909721701\n6754.815\n738.0\n43249.527\n\n\n自動車・自動車部品\n1651\n1688864541\n39250.629\n1851.0\n210604.044\n\n\n小売業\n3501\n793035711\n4590.688\n880.0\n14968.112\n\n\n化学工業\n3915\n736860746\n7564.608\n1445.0\n23530.649\n\n\nサービス業\n11753\n694250494\n2578.502\n361.0\n17729.118\n\n\n通信\n625\n647052927\n67415.843\n3040.0\n284105.640\n\n\n機械\n4338\n616584704\n5310.454\n1007.0\n20211.162\n\n\n建設\n2715\n597371111\n4868.903\n1073.5\n22122.402\n\n\n食品\n2215\n553185961\n8370.878\n1211.0\n32427.752\n\n\n電力\n285\n435223159\n24108.284\n21988.0\n127809.199\n\n\n非金属及び金属製品\n2174\n333425028\n3537.316\n704.0\n15694.021\n\n\n鉄道・バス\n670\n309477897\n16710.421\n3660.0\n61053.123\n\n\n鉄鉱業\n906\n306858163\n8887.185\n903.0\n47067.285\n\n\n石油\n178\n247483911\n14830.657\n1510.5\n81496.356\n\n\n医薬品\n947\n199368660\n20915.376\n4157.0\n48451.048\n\n\nその他製造業\n1936\n189462230\n2630.949\n595.0\n8999.953\n\n\n不動産\n1674\n181588397\n5826.409\n1192.0\n20315.917\n\n\n窯業\n1066\n145506672\n4485.089\n909.5\n13623.277\n\n\nその他金融業\n832\n142861287\n9388.689\n1657.5\n47428.745\n\n\nゴム\n459\n133429682\n12362.357\n1381.0\n43652.986\n\n\n精密機器\n1035\n132220025\n6338.030\n1015.0\n17597.021\n\n\n陸運\n640\n118243116\n4662.080\n1285.5\n9675.867\n\n\n繊維\n934\n115700455\n2405.079\n542.0\n10837.288\n\n\n海運\n261\n104869365\n15152.031\n1012.0\n93497.186\n\n\nパルプ・紙\n432\n100989604\n3345.630\n693.5\n9869.195\n\n\nガス\n214\n89266508\n16210.327\n3620.0\n26366.794\n\n\n空輸\n96\n70396355\n13813.062\n1053.0\n105853.201\n\n\n造船\n96\n50404788\n4001.927\n968.5\n18613.163\n\n\n倉庫・運輸関連\n746\n48088368\n1876.247\n622.0\n3991.522\n\n\n水産\n203\n35003357\n2327.473\n1122.0\n4202.917\n\n\nその他輸送用機器\n253\n27993041\n4227.802\n1102.0\n12600.550\n\n\n鉱業\n131\n26740727\n15827.588\n2096.0\n46860.380\n\n\n\n\n\n次のグラフ作成のためのデータを作成するため，年度別ごとに，ROEの平均値を計算し，その結果をdf_yearという変数に代入します。 ROEは，ある年度の親会社に帰属する当期純利益を期首株主資本で割った値です。 株主資本は，資本金と資本剰余金，利益剰余金，自己株式の合計で計算しますが，欠損値になっている会社もあるので，replace_na()関数を使って欠損値にはゼロを代入します。\n\ndf &lt;- df %&gt;%\n  replace_na(list(資本剰余金 = 0, 利益剰余金 = 0, 自己株式 = 0)) %&gt;% # 欠損値をゼロに置き換え\n  group_by(企業名) %&gt;% # 会社ごとに\n  mutate( # 新変数作成\n    株主資本 = 資本金 + 資本剰余金 + 利益剰余金 + 自己株式, # 株主資本を計算\n    ) %&gt;%\n    filter(株主資本 &gt;0 ) %&gt;% # 株主資本がマイナスの企業を除外\n  mutate(\n    ROE = 親会社株主に帰属する当期純利益 / lag(株主資本) # ROEを計算\n    ) %&gt;%\n  ungroup() # グループ化解除\n\ndf_year &lt;- df %&gt;%\n  group_by(年度) %&gt;% # 年ごとに\n  summarize( # 統計量を計算\n    平均ROE = mean(ROE, na.rm = TRUE)\n    ) %&gt;%\n  ungroup() # グループ化解除\n\nこれで，年度ごと，上場場所ごとに，平均ROEを計算したデータフレームdf_yearができました。\nここで注意しなければならない点として，group_by(企業名)とした上で，lag()関数を使っている点です。 lag()関数は，引数として指定した変数の値の1つ前の値に変換します。 したがって，group_by()を使わないと次のような結果になります。\n\n\n\n\n\n\n\n\n\n\n\n企業名\n年度\n親会社株主に帰属する当期純利益\n株主資本\nROE\n\n\n\nニップン\n2020\n8941\n129587\n0.0723101\n\n\nニップン\n2021\n8636\n135597\n0.0666425\n\n\nニップン\n2022\n9327\n142166\n0.0687847\n\n\n日清製粉グループ本社\n1999\n7327\n156543\n0.0515383\n\n\n日清製粉グループ本社\n2000\n10822\n175112\n0.0691312\n\n\n日清製粉グループ本社\n2001\n11136\n177671\n0.0635936\n\n\n\n\n\nここで問題になっているのが，日清製粉グループ本社の1999年のROEが計算されている点である。 ROEは分子に親会社株主に帰属する当期純利益，分母に期首株主資本，つまりは前期末の株主資本を使います。 したがって，1999年のROEを計算するためには，1998年の株主資本を使う必要がありますが，データは1999年からしか存在しないので欠損値にならないといけないのに，計算されてしまっています。 つまり，一つ上のニップンの2022年の株主資本のデータを使っているのです。 そこで，group_by()により企業ごとにグループ化して，lag()関数を使って，一つ前の観測値を使うようにし，1999年のROEは欠損値になるようにします。\n\n\n\n\n企業名\n年度\n株主資本\nROE\n\n\n\nニップン\n2020\n129587\n0.0723101\n\n\nニップン\n2021\n135597\n0.0666425\n\n\nニップン\n2022\n142166\n0.0687847\n\n\n日清製粉グループ本社\n1999\n156543\nNA\n\n\n日清製粉グループ本社\n2000\n175112\n0.0691312\n\n\n日清製粉グループ本社\n2001\n177671\n0.0635936"
  },
  {
    "objectID": "presemi2023_05.html#変数の可視化視覚化",
    "href": "presemi2023_05.html#変数の可視化視覚化",
    "title": "記述統計とデータの可視化・視覚化",
    "section": "",
    "text": "カテゴリー変数のファクター化，with()関数とtable()関数を使ったクロス集計表の作成，group_by()関数とsummarize()関数を使ったグループごとの統計量の計算について学んだので，これらの結果を使ってグラフを作ることで，読者に伝わるデータの可視化を行いたいと思います。 キレイなグラフを比較的簡単に作ることができるggplot2パッケージを使います。\n\nggplot2パッケージのggplot()関数は，次のような引数をとります。\n\n\ndata = : データフレーム\n\nmapping = aes() : グラフの構成要素を指定する関数\n\ngeom_*** : グラフの種類を指定する関数\n各種オプション\n\n最初の注意点として，ggplot()関数は，第1引数data =でtibbleかdata.frameを指定する必要があります。 データの型に気をつけましょう。\nでは，年度ごとに平均ROEを示した折れ線グラフを作図していきます。 まず土台となるデータフレームを指定します。\n\nggplot(data = df_year)\n\n\n\n\n土台ができましたが，まだ何も表示されていません。 次に，グラフの構成要素を指定するために，mapping = aes()で，軸を指定します。 今回は，横軸に年度，縦軸に平均ROEを指定します。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE))\n\n\n\n\n縦軸と横軸が表示されました。 軸のラベルが文字化けしているので，最初に作成しておいたスタイルmystyleを適用します。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE)) + mystyle\n\n\n\n\n次に，グラフを作成するために，geom_line()関数を使います。 ggplot関数では，次のようなgeom_***()関数を使って，グラフの種類を指定します。\n\n\ngeom_point() : 散布図\n\ngeom_line() : 折れ線グラフ\n\ngeom_bar() : 棒グラフ\n\ngeom_boxplot() : 箱ひげ図\n\ngeom_histogram() : ヒストグラム\n\ngeom_density() : カーネル密度推定図\n\ngeom_violin() : バイオリンプロット\n\ngeom_smooth() : 平滑化曲線\n\nここでは横軸が年度という文字列，縦軸が平均ROEという量的変数となるグラフを作るので，geom_bar()を使います。\n\nggplot(data = df_year, mapping = aes(x = 年度, y = 平均ROE)) +\n  geom_bar(stat = \"identity\") + mystyle\n\n\n\n\n横軸が順序に意味のある変数であれば，geom_line()で折れ線グラフを作るほうが良いでしょう。 この場合，年度は文字列ですが，本来は順序に意味のあるカテゴリー変数ですので，factor()関数を使って，ファクター型に変換します。\n\ndf_year &lt;- df_year %&gt;%\n  mutate(年度f = factor(年度,\n  levels = c(1999:2022),\n  ordered = TRUE))\n\n横軸が順序付きのファクターの年度fとなったので，geom_line()を使って折れ線グラフを作成します。 ここで，オプションとして，group = 1を指定して，データ全体が1つのグループであることを明示します。 横軸がファクター型であるときは，group = 1をつける，というおまじないを覚えておきましょう。\n\nggplot(data = df_year, mapping = aes(x = 年度f, y = 平均ROE, group = 1)) +\n  geom_line() + geom_point() + xlab(\"年度\") + ylab(\"平均ROE\") + mystyle\n\n\n\n\n上のコードは，必要な引数を省略せずに書きましたが，省略できるものを省略しつつ， すべての要素を\\(+\\)でつなぐよりも，レイヤーごとに代入していくほうが，コードが読みやすくなります。\n\ng &lt;- ggplot(df_year) + aes(年度f, 平均ROE, group = 1) # 基本要素\ng &lt;- g + geom_line() + geom_point() # 折れ線グラフと散布図\ng &lt;- g + xlab(\"年度\") + ylab(\"平均ROE\") + mystyle # 見た目の調整\nprint(g)\n\n\n\n\n\n次に，前年度のROEのヒストグラムを作成してみましょう。\n\ng &lt;- ggplot(df) +\n  aes(ROE) + # 1変数 ROE を指定\n  geom_histogram(fill=\"skyblue\", color = \"black\") + # ヒストグラム\n  xlim(-1,1) + mystyle # x軸の範囲とスタイルを指定\nprint(g)\n\n\n\n\n\n次に，上場場所別ROEの分布を箱ひげ図とバイオリンプロットで比較してみましょう。 箱ひげ図は，geom_boxplot()を使います。\n\ng &lt;- ggplot(df) + aes(x = factor(上場コード), y = ROE) + geom_boxplot() + mystyle\nprint(g)\n\n\n\n\nROEのばらつきが大きく，極端にROEが大きかったり小さかったりする異常値のせいで，箱ひげ図がうまく描写されていません。 そこで異常値を除外するため，ROEの範囲を\\([-0.5,0.5]\\)に限定してみましょう。 先ほど箱ひげ図を作成するために作ったオブジェクトgにylim()を追加して，Y軸の範囲を指定します。\n\ng &lt;- g + ylim(-.5,.5) # y軸の範囲を指定\nprint(g)\n\n\n\n\n箱ひげ図の箱の下辺は第1四分位(Q1)で，上辺は第3四分位(Q3)です。 真ん中の太い横棒は中央値です。 箱から出ているひげはデータの四分位範囲を超えた値の範囲ですが，黒丸は外れ値を表しています。\n次に，バイオリンプロットを作成します。 バイオリンプロットもほぼ箱ひげ図と同じですが，geom_violin()を使います。\n\ng &lt;- ggplot(df) + aes(x = factor(上場コード), y = ROE)\ng &lt;- g + geom_violin() + ylim(-.5,.5) + mystyle\nprint(g)\n\n\n\n\n箱ひげ図やバイオリンプロットから，東証1部と東証2部の上場企業のROEは中央値に差があるものの，分布の形は似ていますが，マザーズの企業は，ROEの分布が大きく異なることがわかります。\n\n最後に，作成した図を保存するには，ggsave()関数を使います。 ggsave()関数は，次のような引数をとります。\n\n\nfilename = : 保存するファイル名\n\nplot = : 保存する図\n\nwidth = : 図の幅\n\nheight = : 図の高さ\n\ndpi = : 解像度\n\n日本語を含まないグラフであったり，Windowsならこれでうまくいくのですが，Macで日本語を含むggplotのグラフを保存するには一手間必要です。\n\nMacの場合，ggsave()関数を使っても，日本語が文字化けしてしまいます。 そこでquartz()関数を用いて，次のようにすれば，日本語を含むグラフを保存することができます。 quartz()は以下の引数を取ります。\n\n\nfilename = : 保存するファイル名\n\nwidth = : 図の幅\n\nheight = : 図の高さ\n\npointsize = : フォントサイズ\n\nfamily = : フォントファミリー\n\ntype = : ファイルタイプ\n\nantialias = : アンチエイリアス\n\n\nquartz(\"violin_plot.pdf\", width = 10, height = 6, pointsize = 10)\nprint(g)\ndev.off()\n\nこれで作業ディレクトリにviolin_plot.pdfが保存されました。"
  },
  {
    "objectID": "presemi2023_01.html",
    "href": "presemi2023_01.html",
    "title": "プレゼミとは",
    "section": "",
    "text": "2023年度から新たに開講される「プレゼミ」とは、3年次から始まる「専門演習」(以下、ゼミ)で専門性を深める前に、広い知識を獲得し、ゼミでの研究に深みを持たせるための小集団科目です。 松浦プレゼミでは，経営学分野で実証研究を行うために必要な統計学・計量経済学の基礎とそれを実装するプログラミング言語Rについて学習することで、組織論やマーケティング、ファイナンスや会計で活発に行われている「実証研究」を行う基礎知識を手に入れることを目指します。 この資料は、そのための教材として、以下の教科書をベースに作成されています。\n\nRによる計量政治学 (中級)\nRによるマーケティング・データ分析 (上級)\n経営学のための統計学・データ分析 (初級)\n\n\n\n\n\n\n\nRによる計量政治学\n\n\n\n\n\n\n\nRによるマーケティング・データ分析\n\n\n\n\n\n\n\n経営学のための統計学・データ分析\n\n\n\n\n\n松浦のプレゼミでは、25名の学生が集まって静かに教員の講義を聴く、といったようなことはしません。 むしろ、授業を受ける前に学生が自分で教科書や資料を読んで宿題をやり、そして教室で発表をして議論をする、という形式をとります。 いわゆる「反転授業」というやつです。 反転授業を効果的に行うためには、授業を受ける前の準備が重要です。 授業を受ける前に、このウェブ資料と教科書の該当箇所を読んで、練習問題に取り組む、ということをしておいてください。\n\n\nプレゼミのメインテキストは浅野・矢内 (2020)「Rによる計量政治学」オーム社です。 このウェブ資料も、このテキストをベースに作成されています。 サブテキストであるウィラワン・勝又 (2023)「Rによるマーケティング・データ分析」新世社、の一部の内容も含まれています。 重要参考図書として、久保克行 (2021)「経営学のための統計学・データ分析」東洋経済、もオススメです。 この資料は基本的に松浦が自分の勉強用に作成したノートのため、誤りや不備が含まれている可能性が高いです。ミスなどを見つけ次第、松浦まで報告してくれると助かります。 またこのノートは、浅野・矢内 (2020)やウィラワン・勝又 (2023)の内容を網羅しているわけではないので、このノートを使う場合は教科書を手元において、学習することをおすすめします。\n\n\n\nなぜ会計学を専門とする松浦のプレゼミで、メインの教科書が「Rによる計量政治学」なのかというと、このテキストが社会科学の一分野である政治学という経営学部生にとっても関連のある興味深い題材を用いて、計量経済学の基礎から応用までをRで実装するための知識を習得できるものだからです。 とりわけ第1部の第2章「研究テーマの選び方」と第3章「理論と仮説」は、卒業論文を書く際にも非常に重要となる内容ですので、全経営学部生によんでもらいたい内容です。\n第4章「Rの使い方」と第5章「Rによるデータ操作」は、本書の学習に必要な必要最小限の内容ですので、他の教科書やウェブサイトを参考にして、より詳細な内容を学習したほうが良いですが、この内容を理解し、使えるようになれば、MS Excelを使わずにRだけで分析できるようになるでしょう。\n第6章から第15章までが、統計学から計量経済学の内容となります。 おおよそ、代表的な統計量の計算や、グラフを使ったデータの理解、標本(sample)を用いた母集団(population)の推定や仮説検定、複数の統計量の関係性の理解、因果関係を分析する手法の1つである回帰分析の基礎と応用、2値選択の問題を推定するためのロジスティック関数の使い方などを学習します。\nここまでの内容の学習にプレゼミ15回のうち、第2回目から第11回目のおおよそ10回分を使います。 12回〜14回の3回は多変量解析手法として因子分析やクラスター分析、機械学習を用いた判別モデルとして決定木分析を学習します。 最後の講義となる第15回目では、今まで修得した知識を使って、データ分析を行った結果を発表してもらいます。\n2年生終了時点で、これらの内容を修得していれば、卒業論文の分析に必要な知識はほぼ習得できていると考えて良いでしょう。あとは関心のある研究テーマを選ぶために、面白そうな専門演習(ゼミ)に入って、Rと統計学・計量経済学を使った実証研究を楽しんでくれれば、プレゼミの目標が達成されます。\n\n\n\n最初に触れたように、基本的にこのプレゼミは反転授業の形式をとります。 つまり、授業は家で受けて、宿題を大学でやる、という形式です。\n具体的には、講義を受ける前に自宅で行う準備として、このウェブサイトと教科書・参考書の該当箇所を読んでおきます。そこで「ここは分かったけど、ここは分からなかった」というところをメモしておきます。 「分からなかった」という点について、具体的にどこが分からなかったのかを明確にすることが重要です。\nその上で、大学にでは、分からなかったところを全員で共有し、分からなかった論点を潰していきます。 そのうえで宿題をやります。授業中に与えられるデータを使って、具体的に分析をやってみて、その結果を講義で発表してもらいます。 宿題の内容は、講義中に指示します。\n\n\n\nプレゼミのスケジュールはおおよそ以下の通りです。\n\n第1回 プレゼミの概要とメンバー紹介\n第2回 実証会計学、研究テーマの選び方・理論と仮説\n第3回 Rの使い方とRによるデータ操作\n第5回 記述統計とデータの可視化・視覚化\n第6回 統計的推定と統計的仮説検定\n第7回 変数間の関連性\n第8回 回帰分析の基礎と統計的推定\n第9回 回帰分析の応用\n第10回 交差項の使い方\n第11回 ロジスティック関数\n第12回 質問紙の作成と測定尺度\n第13回 因子分析\n第14回 クラスター分析・決定木(時間があれば)\n第15回 成果報告会 (報告者は6名程度を想定)\n\n\n\n\nこのウェブ資料は、Posit社(以前はRstudio社)が開発したQuartoというソフトウェアを使って作成されています。Quartoとは、RMarkdownの記法で書かれたテキストファイルを、knitrというソフトウェアを介して、HTMLやPDF、MS Word、EPUBなどのファイルを作成するためのソフトウェアです。\n最大の特徴は、MS ExcelとMS Wordのようにデータを分析する場所と文章を書く場所が別々ではなく、一つの画面の中でデータ分析とレポート・論文執筆を同時に行える、というものです。\nまた、Rだけでなく、PythonやJuliaといった他のプログラミング言語も文章内に埋め込むことができるため、データ分析と文章執筆を統合させる環境として非常に優れています。\nプレゼミでも、Quartoを使って最終レポートの作成を行う予定です。 Quartoは今も開発が進んでいる新しいレポート作成ソフトウェアなので、情報が少ないことが難点ですが、公式サイトと私たちのRを見れば大抵のことは分かります。\n\n\n\nプレゼミが始まるまでに準備しておいてほしいことは、プログラミング言語Rのセットアップです。 具体的には、RとRstudioが使えるようにしておくことが必要です。\nRとRstudioを使う方法は2つあります。\n\nパターン1：自分のPCにRなどをインストールする\nパターン2：ブラウザ上でR/Rstudioを使う\n\n\n\n自分のPCにRをセットアップするメリットには、\n\nインターネットに接続していなくてもRを使える\n処理速度が速い\nデータの保存場所が自分のPCになるので、データの管理がしやすい\n\nといったものがあります。逆にデメリットとして、\n\nインストールに時間と手間がかかる\n自分のPCにインストールするので、PCの容量を圧迫する\nディレクトリの管理が必要になる\n\nといったものがあります。 ただ、今後もRを使っていくことを考えると、自分のPCにRをインストールしておくことをおすすめしますが、やはり学生が持っているコンピュータの環境が様々なので、トラブルも起こりやすいです。 ただ、以下の手順に従ってインストールすれば、大抵の場合は問題なくインストールできると思います。\n\n\nRとRstduioを自分PCにインストールする際に、以下のウェブサイトが超参考になります。 自分のPCのOS(だいたいWindowsかMacOSか)に応じて、次の矢内先生の資料を見ながらインストールしてください。\n矢内先生のウェブサイト\n\n\n\n教科書では、Rstudioの説明をしていますが、RstudioはR専用のIDE（統合開発環境）で、R以外の言語を書くことはできませんし、少々重たいです。 そこでここでは、Microsoft社のVisual Studio Codeを使ってRを書く方法を説明します。これは完全に趣味の世界なので、興味が無ければRstudioを使ってください。\nマイクロソフト社のウェブサイトから、自分のPCのOSに合わせて、Visual Studio Codeをインストールしてください。\nまずGoogle等で「Visual Studio Code」と検索して、オフィシャルサイトにアクセスします。\n\n\n\nVisual Studio Codeのオフィシャルサイト\n\n\nそして、「Visual Studio Codeをダウンロードする」をクリックすると、次のページにいきます。\n\n\n\nVisual Studio Codeのダウンロードページ\n\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 詳しい人なら、下の小さな項目から、適切なものをえらんでください。 MacBookでM2チップを使っている人は、MacのApple siliconのzipをダウンロードして、Zipファイルを展開してインストールしてください。\n\n\n\n次に、RstudioやVisual Studio Codeで、レポートや論文を書くためのパッケージであるQuartoをインストールします。 QuartoはRstudioを作ったPosit社が開発している文書作成システムなので、Rとの相性もばっちりです。\nまずGoogle等で「Quarto」と検索して、オフィシャルサイトにアクセスします。\n\n\n\nQuartoのオフィシャルサイト\n\n\nそして、「Get Started」をクリックすると、次のページにいきます。\n\n\n\nQuartoのダウンロードページ\n\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 インストールが完了すれば、RstudioやVisual Studio Codeで、レポートや論文を書くことができるようになります。\nここまでで、\n\nR (本体)\nRstudio (R用IDE)\nVisual Studio Code (R以外の言語も書けるIDE)\nQuarto (レポートや論文を書くためのパッケージ)\n\nのインストールが完了しました。\n\n\n\n次に、Visual Studio Code(以下、VS Code)でRのソースコードを書くための準備をします。 VS Codeを開くと、次のような画面が表示されます。 VS Codeは、機能を拡張するために、拡張パッケージをインストールすることができます。 VS Codeを起動して、左のメニューの中の、四角が4つ並んだアイコンをクリックしてください。\n\n\n\nVS Codeの初期画面\n\n\nVS Codeの左のメニュー上部に拡張パッケージの検索画面が表示されます。 そこに拡張パッケージの名前を入れて、必要なものをインストールしていきます。 以下の拡張パッケージは、Rの分析をするために必要あるいは推奨されるものです。\n\nJapanese Language Pack for Visual Studio Code : VS Codeの日本語化\nR : とりあえず入れておく\nQuarto : Quartoを使うために必要\n\nとりあえずこの3つを入れておけば、このプレゼミでは十分です。\n\n\n\nVS Codeの拡張パッケージ\n\n\n\n\n\nVS Codeでは、分析に使うCSVファイルや、分析のためのRファイル、レポートや論文を書くためのQuartoファイルを、一つのフォルダにまとめておくと便利です。 分かりやすい場所にフォルダを作成し、好きな名前をつけてください。\nVS Codeの上部メニューの中の「ファイル」をクリックして、「フォルダーを開く」をクリックして、先ほど作成したフォルダを選択してください。 すると、左のメニューにフォルダの中身が表示されます。まだ何も入っていなければ、何も表示されません。\nVS Codeではフォルダを指定して開いておくと、そこが作業フォルダとなり、Rは常にそのフォルダの中を参照するようになります。\n\n\n\n\n自分のPCにいろいろインストールしなくてもR/Rstudioをブラウザで利用することもできます。 Posit Cloudを使ってウェブ上でRstudioを使えるようにしてください。 Posit Cloudは、Rstudioを作ったPosit社が運営している無料のサービスです。安心してアカウントを作成してください。\nPosit Cloud\nアカウントを作成し、ログインすれば、Rstudioをブラウザ上で使うことができます。\n\n\n\n\n\nR/Rstudioをインストールする、あるいはPosit Cloudにアカウントを作成してログインする\n教科書「Rによる計量政治学」を入手しておく\n\n\n\n\n総勢25名の松浦プレゼミ1期生による自己紹介を行います。 1人1分で，自分の名前と出身都道府県，好きなもの(何でもOK)を発表してください。"
  },
  {
    "objectID": "presemi2023_01.html#教科書参考書について",
    "href": "presemi2023_01.html#教科書参考書について",
    "title": "プレゼミとは",
    "section": "",
    "text": "プレゼミのメインテキストは浅野・矢内 (2020)「Rによる計量政治学」オーム社です。 このウェブ資料も、このテキストをベースに作成されています。 サブテキストであるウィラワン・勝又 (2023)「Rによるマーケティング・データ分析」新世社、の一部の内容も含まれています。 重要参考図書として、久保克行 (2021)「経営学のための統計学・データ分析」東洋経済、もオススメです。 この資料は基本的に松浦が自分の勉強用に作成したノートのため、誤りや不備が含まれている可能性が高いです。ミスなどを見つけ次第、松浦まで報告してくれると助かります。 またこのノートは、浅野・矢内 (2020)やウィラワン・勝又 (2023)の内容を網羅しているわけではないので、このノートを使う場合は教科書を手元において、学習することをおすすめします。"
  },
  {
    "objectID": "presemi2023_01.html#教科書選定の理由",
    "href": "presemi2023_01.html#教科書選定の理由",
    "title": "プレゼミとは",
    "section": "",
    "text": "なぜ会計学を専門とする松浦のプレゼミで、メインの教科書が「Rによる計量政治学」なのかというと、このテキストが社会科学の一分野である政治学という経営学部生にとっても関連のある興味深い題材を用いて、計量経済学の基礎から応用までをRで実装するための知識を習得できるものだからです。 とりわけ第1部の第2章「研究テーマの選び方」と第3章「理論と仮説」は、卒業論文を書く際にも非常に重要となる内容ですので、全経営学部生によんでもらいたい内容です。\n第4章「Rの使い方」と第5章「Rによるデータ操作」は、本書の学習に必要な必要最小限の内容ですので、他の教科書やウェブサイトを参考にして、より詳細な内容を学習したほうが良いですが、この内容を理解し、使えるようになれば、MS Excelを使わずにRだけで分析できるようになるでしょう。\n第6章から第15章までが、統計学から計量経済学の内容となります。 おおよそ、代表的な統計量の計算や、グラフを使ったデータの理解、標本(sample)を用いた母集団(population)の推定や仮説検定、複数の統計量の関係性の理解、因果関係を分析する手法の1つである回帰分析の基礎と応用、2値選択の問題を推定するためのロジスティック関数の使い方などを学習します。\nここまでの内容の学習にプレゼミ15回のうち、第2回目から第11回目のおおよそ10回分を使います。 12回〜14回の3回は多変量解析手法として因子分析やクラスター分析、機械学習を用いた判別モデルとして決定木分析を学習します。 最後の講義となる第15回目では、今まで修得した知識を使って、データ分析を行った結果を発表してもらいます。\n2年生終了時点で、これらの内容を修得していれば、卒業論文の分析に必要な知識はほぼ習得できていると考えて良いでしょう。あとは関心のある研究テーマを選ぶために、面白そうな専門演習(ゼミ)に入って、Rと統計学・計量経済学を使った実証研究を楽しんでくれれば、プレゼミの目標が達成されます。"
  },
  {
    "objectID": "presemi2023_01.html#プレゼミの運営方法について",
    "href": "presemi2023_01.html#プレゼミの運営方法について",
    "title": "プレゼミとは",
    "section": "",
    "text": "最初に触れたように、基本的にこのプレゼミは反転授業の形式をとります。 つまり、授業は家で受けて、宿題を大学でやる、という形式です。\n具体的には、講義を受ける前に自宅で行う準備として、このウェブサイトと教科書・参考書の該当箇所を読んでおきます。そこで「ここは分かったけど、ここは分からなかった」というところをメモしておきます。 「分からなかった」という点について、具体的にどこが分からなかったのかを明確にすることが重要です。\nその上で、大学にでは、分からなかったところを全員で共有し、分からなかった論点を潰していきます。 そのうえで宿題をやります。授業中に与えられるデータを使って、具体的に分析をやってみて、その結果を講義で発表してもらいます。 宿題の内容は、講義中に指示します。"
  },
  {
    "objectID": "presemi2023_01.html#プレゼミのスケジュール",
    "href": "presemi2023_01.html#プレゼミのスケジュール",
    "title": "プレゼミとは",
    "section": "",
    "text": "プレゼミのスケジュールはおおよそ以下の通りです。\n\n第1回 プレゼミの概要とメンバー紹介\n第2回 実証会計学、研究テーマの選び方・理論と仮説\n第3回 Rの使い方とRによるデータ操作\n第5回 記述統計とデータの可視化・視覚化\n第6回 統計的推定と統計的仮説検定\n第7回 変数間の関連性\n第8回 回帰分析の基礎と統計的推定\n第9回 回帰分析の応用\n第10回 交差項の使い方\n第11回 ロジスティック関数\n第12回 質問紙の作成と測定尺度\n第13回 因子分析\n第14回 クラスター分析・決定木(時間があれば)\n第15回 成果報告会 (報告者は6名程度を想定)"
  },
  {
    "objectID": "presemi2023_01.html#プレゼミでの使用ソフトウェアについて",
    "href": "presemi2023_01.html#プレゼミでの使用ソフトウェアについて",
    "title": "プレゼミとは",
    "section": "",
    "text": "このウェブ資料は、Posit社(以前はRstudio社)が開発したQuartoというソフトウェアを使って作成されています。Quartoとは、RMarkdownの記法で書かれたテキストファイルを、knitrというソフトウェアを介して、HTMLやPDF、MS Word、EPUBなどのファイルを作成するためのソフトウェアです。\n最大の特徴は、MS ExcelとMS Wordのようにデータを分析する場所と文章を書く場所が別々ではなく、一つの画面の中でデータ分析とレポート・論文執筆を同時に行える、というものです。\nまた、Rだけでなく、PythonやJuliaといった他のプログラミング言語も文章内に埋め込むことができるため、データ分析と文章執筆を統合させる環境として非常に優れています。\nプレゼミでも、Quartoを使って最終レポートの作成を行う予定です。 Quartoは今も開発が進んでいる新しいレポート作成ソフトウェアなので、情報が少ないことが難点ですが、公式サイトと私たちのRを見れば大抵のことは分かります。"
  },
  {
    "objectID": "presemi2023_01.html#プレゼミの準備",
    "href": "presemi2023_01.html#プレゼミの準備",
    "title": "プレゼミとは",
    "section": "",
    "text": "プレゼミが始まるまでに準備しておいてほしいことは、プログラミング言語Rのセットアップです。 具体的には、RとRstudioが使えるようにしておくことが必要です。\nRとRstudioを使う方法は2つあります。\n\nパターン1：自分のPCにRなどをインストールする\nパターン2：ブラウザ上でR/Rstudioを使う\n\n\n\n自分のPCにRをセットアップするメリットには、\n\nインターネットに接続していなくてもRを使える\n処理速度が速い\nデータの保存場所が自分のPCになるので、データの管理がしやすい\n\nといったものがあります。逆にデメリットとして、\n\nインストールに時間と手間がかかる\n自分のPCにインストールするので、PCの容量を圧迫する\nディレクトリの管理が必要になる\n\nといったものがあります。 ただ、今後もRを使っていくことを考えると、自分のPCにRをインストールしておくことをおすすめしますが、やはり学生が持っているコンピュータの環境が様々なので、トラブルも起こりやすいです。 ただ、以下の手順に従ってインストールすれば、大抵の場合は問題なくインストールできると思います。\n\n\nRとRstduioを自分PCにインストールする際に、以下のウェブサイトが超参考になります。 自分のPCのOS(だいたいWindowsかMacOSか)に応じて、次の矢内先生の資料を見ながらインストールしてください。\n矢内先生のウェブサイト\n\n\n\n教科書では、Rstudioの説明をしていますが、RstudioはR専用のIDE（統合開発環境）で、R以外の言語を書くことはできませんし、少々重たいです。 そこでここでは、Microsoft社のVisual Studio Codeを使ってRを書く方法を説明します。これは完全に趣味の世界なので、興味が無ければRstudioを使ってください。\nマイクロソフト社のウェブサイトから、自分のPCのOSに合わせて、Visual Studio Codeをインストールしてください。\nまずGoogle等で「Visual Studio Code」と検索して、オフィシャルサイトにアクセスします。\n\n\n\nVisual Studio Codeのオフィシャルサイト\n\n\nそして、「Visual Studio Codeをダウンロードする」をクリックすると、次のページにいきます。\n\n\n\nVisual Studio Codeのダウンロードページ\n\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 詳しい人なら、下の小さな項目から、適切なものをえらんでください。 MacBookでM2チップを使っている人は、MacのApple siliconのzipをダウンロードして、Zipファイルを展開してインストールしてください。\n\n\n\n次に、RstudioやVisual Studio Codeで、レポートや論文を書くためのパッケージであるQuartoをインストールします。 QuartoはRstudioを作ったPosit社が開発している文書作成システムなので、Rとの相性もばっちりです。\nまずGoogle等で「Quarto」と検索して、オフィシャルサイトにアクセスします。\n\n\n\nQuartoのオフィシャルサイト\n\n\nそして、「Get Started」をクリックすると、次のページにいきます。\n\n\n\nQuartoのダウンロードページ\n\n\nここから自分に合ったOSを選んで、ダウンロードしてください。 インストールが完了すれば、RstudioやVisual Studio Codeで、レポートや論文を書くことができるようになります。\nここまでで、\n\nR (本体)\nRstudio (R用IDE)\nVisual Studio Code (R以外の言語も書けるIDE)\nQuarto (レポートや論文を書くためのパッケージ)\n\nのインストールが完了しました。\n\n\n\n次に、Visual Studio Code(以下、VS Code)でRのソースコードを書くための準備をします。 VS Codeを開くと、次のような画面が表示されます。 VS Codeは、機能を拡張するために、拡張パッケージをインストールすることができます。 VS Codeを起動して、左のメニューの中の、四角が4つ並んだアイコンをクリックしてください。\n\n\n\nVS Codeの初期画面\n\n\nVS Codeの左のメニュー上部に拡張パッケージの検索画面が表示されます。 そこに拡張パッケージの名前を入れて、必要なものをインストールしていきます。 以下の拡張パッケージは、Rの分析をするために必要あるいは推奨されるものです。\n\nJapanese Language Pack for Visual Studio Code : VS Codeの日本語化\nR : とりあえず入れておく\nQuarto : Quartoを使うために必要\n\nとりあえずこの3つを入れておけば、このプレゼミでは十分です。\n\n\n\nVS Codeの拡張パッケージ\n\n\n\n\n\nVS Codeでは、分析に使うCSVファイルや、分析のためのRファイル、レポートや論文を書くためのQuartoファイルを、一つのフォルダにまとめておくと便利です。 分かりやすい場所にフォルダを作成し、好きな名前をつけてください。\nVS Codeの上部メニューの中の「ファイル」をクリックして、「フォルダーを開く」をクリックして、先ほど作成したフォルダを選択してください。 すると、左のメニューにフォルダの中身が表示されます。まだ何も入っていなければ、何も表示されません。\nVS Codeではフォルダを指定して開いておくと、そこが作業フォルダとなり、Rは常にそのフォルダの中を参照するようになります。\n\n\n\n\n自分のPCにいろいろインストールしなくてもR/Rstudioをブラウザで利用することもできます。 Posit Cloudを使ってウェブ上でRstudioを使えるようにしてください。 Posit Cloudは、Rstudioを作ったPosit社が運営している無料のサービスです。安心してアカウントを作成してください。\nPosit Cloud\nアカウントを作成し、ログインすれば、Rstudioをブラウザ上で使うことができます。"
  },
  {
    "objectID": "presemi2023_01.html#事前課題",
    "href": "presemi2023_01.html#事前課題",
    "title": "プレゼミとは",
    "section": "",
    "text": "R/Rstudioをインストールする、あるいはPosit Cloudにアカウントを作成してログインする\n教科書「Rによる計量政治学」を入手しておく"
  },
  {
    "objectID": "presemi2023_01.html#自己紹介タイム",
    "href": "presemi2023_01.html#自己紹介タイム",
    "title": "プレゼミとは",
    "section": "",
    "text": "総勢25名の松浦プレゼミ1期生による自己紹介を行います。 1人1分で，自分の名前と出身都道府県，好きなもの(何でもOK)を発表してください。"
  },
  {
    "objectID": "presemi2023_02.html",
    "href": "presemi2023_02.html",
    "title": "研究、仮説、実証会計",
    "section": "",
    "text": "第2回講義の到達目標は、\n\n実証研究とはどんなものかを理解し、他人に説明できる。\n実証研究で扱える研究課題を理解し、研究課題を適切に設定できる。\n良い研究課題が持つべき特性を理解し、その特徴を備えた研究課題を設定できる。\n\n第1回講義の到達度検証のための課題は、以下の通りです。\n\n定量データを用いて行う実証研究の利点と欠点を説明する。\n自分が興味をもてそうな研究課題を設定する。\n上で立てた研究課題がよい研究課題かどうかを5つの観点から検討し、評価する。\n\n第2回講義の目次は、\n\nセクション 1.1 会計を計量する？\nセクション 1.1.1 実証会計学とは？\nセクション 1.1.2 他の経営学領域\nセクション 1.1.4 学術雑誌\nセクション 1.5 今回の課題\n\n\n\nここでは、教科書「Rによる計量政治学」の内容を「会計学」に置き換えて考えてみます。 「計量会計学」という言葉は一般的ではなく、会計学の世界では「実証的会計研究」とか「実証会計学」いう言葉が使われています。\n社会科学において、社会で生じる様々な現象（たとえば、経営現象や会計実務）を、数値化して分析することを計量化(quantification)と呼びます。 計量化されたデータを用いて、社会現象を説明しようとするアプローチを計量分析(quantitative analysis)と呼びます。 計量分析の手法は、統計学や計量経済学などの数理的な手法を用いて、社会現象を説明しようとするものです。\n会計とは経営活動から生み出される価値の変化を貨幣的に計測・記録し、その情報を整理し、集約することで、最終成果物として報告書(たとえば貸借対照表など)を作成し、それを利害関係者に報告することで、投資意思決定に役立つ情報を提供したり、利害関係者間の利害調整を行うことを目的とした一連のプロセスを意味します。 つまり会計そのものが、経営現象を計量化することを目的としているため、その最終成果物である財務諸表は、経営現象を計量化したデータの集合体と言えます。 この会計という経営実務を研究対象とした学問を会計学(accounting)といいます。\n\n\n会計学には様々な研究分野があります。 会計の歴史を研究対象とする会計史(accounting history)、会計の計算構造を研究対象とする計算構造研究(accounting structure)、簿記そのものを研究対象とする簿記論(bookkeeping)、そして、会計の実務を説明し予想するための理論の構築を目指す事実解明的な会計研究(positive accounting research)などがあります。\nとりわけ事実解明的な会計研究のうち、公表された情報を計量分析の手法を用いて分析する会計研究を、実証会計学(archival based empirical accounting)とか、単に実証会計と呼びます。 実証会計以外の事実解明的な研究には、実験により生成されたデータを分析する実験会計研究(experimental accounting)、データを必要とせず、数理モデルを用いて行われる分析会計研究(analytical accounting)などがあります。\n国際的に評価の高い会計学の学術誌である、The Accounting Review(TAR)、Journal of Accounting and Economics(JAE)、Journal of Accounting Research(JAR)、Review of Accounting Studies(RAST)、Contemporary Accounting Research(CAR)の五大誌に掲載されている論文の大部分が、会計情報を用いた計量分析となっています。 ただこの5誌はすべて北米の研究機関や大学が発行している雑誌ですので、実証、実験、分析的な会計研究がメインストリームの扱いとなりますが、ヨーロッパでは、 Accounting, Organisation snd Society(AOS)、European Accounting Research(EAR)、British Accounting Research(BAR)、Critical Accounting Research(CAR)といった、定性的研究も重要視し、経済学ではなく社会学をベースとした研究が主流？となっている雑誌もあります。しかし松浦は社会学について語れる知識がないので、やはり沈黙します。\n会計研究の世界では、1960年頃までは規範的研究(normative research)という「〇〇するべき」という主張をする研究が主流でした。たとえば企業が保有する株式を時価評価すべきかとか、ある特徴をもつリース資産を購入したものとして扱うべきか、といったものです。 しかし、1968年にJournal of Accounting Researchに掲載されたBall and Brown (1968) An Empirical Evaluation of Accounting Income Numbersを皮切りに、実際に会計情報は投資家の役に立っているのかをデータを使って確かめる、という、いわゆる実証研究が行われるようになり、今日まで会計研究の主要分野となっています。\n実証的会計研究を行うために必要な知識・技術として、\n\n会計基準・会計理論\nミクロ経済学（ゲーム理論、契約理論、情報の経済学）\n計量経済学\nファイナンス理論（コーポレート・ファイナンス）\nプログラミング\n\nが挙げられます。\n同じ事実解明型研究の中でも、証拠では無く論理による主張を目指す分析的会計研究で必要な知識・技術として、\n\n会計基準・会計理論\nミクロ経済学（ゲーム理論、契約理論、情報の経済学）\n最適化理論\n差分方程式\n\nが挙げられます。 そもそも分析的会計研究は、会計現象を抽象化し、数学でその現象を表現するモデルを作り、そのモデルを解くことで得られる均衡解を比較静学することで様々なインプリケーションを得るため、実際に発生していない問題も研究することできる利点があります。 その反面、要求されるモデルを作るセンスや、解けるモデルを構築するための数学レベルも高く、また研究に要する時間も長いため、実証的会計研究に比べて論文が少ないです。 しかし、理論と実証は研究の両輪をなすものであり、どちらも重要であることに違いはないので、完全に理解することはできなくても、目を通す努力は必要でしょう。\nただやはり難しい数式が出てくる会計研究は松浦には完全に理解することはできないので、ここでは実証的会計研究について考えていきます。ヴィトゲンシュタインの言葉を借りれば、語り得ないものは語らないということで、分析的会計研究は沈黙するべきです。\n\n\n\n誤解を恐れずに、会計学者の松浦が他の経営学領域について、ざっくりと説明してみます。 立命館大学経営学部経営学科には、\n\n会計・ファイナンスコース\n戦略コース\n組織コース\nマーケティングコース\n\nの4コースがあります。これをもとに、経営学領域をざっくりと分類してみます。\n\n\n\n会計学を大きく2つに分類すると、\n\n財務会計\n管理会計\n\nに分かれます。これは企業外への情報提供を目的しているのか、それとも会社内部の経営管理を目的としているのか、によって分類しています。 情報提供を主目的とする財務会計は、制度会計とも呼ばれ、会社が共通して利用する会計基準に従って情報生産をする会計システムを研究対象としています。 これに対し、経営管理を主目的とする管理会計は、会社ごとに独自の会計システムを構築し、会社の経営管理に役立てることを目的としています。 したがって、財務会計情報は公表されているものが多く、代表的な情報源として有価証券報告書がありますが、管理会計情報は非公開のものが多く、データが入手困難です。\nファイナンスを大きく2つに分類すると，\n\nコーポレート・ファイナンス\n投資論\n\nに分けられると思います(たぶん)。 コーポレート・ファイナンスは、企業が資金を調達する際の意思決定を研究対象とし，投資論は投資家が資産を選択する際の意思決定を研究対象とします。\n\n\n戦略コースは、企業や経営者が選択できる行動のメニューについて考えることを目的としています。 ただ戦略論という研究領域はあるのでしょうが，その分野の先生が主戦場とする学会や学術雑誌が分からないので，うまく説明できません。\n\n\n\n組織コースは、組織を研究対象とするコースです。大きく\n\nマクロ組織論\nミクロ組織論\n\nに分けられます。 マクロ組織論では、組織の構造や組織の環境との関係を研究対象とする一方で、ミクロ組織論では、組織内の個人の行動や組織内の人間関係を研究対象とします。とりわけミクロ組織論では、組織内の人に焦点を当てた研究を行うため、アンケート調査や実験による検証が多く、心理学に基づく定量的な研究も多く行われています。\n\n\n\nマーケティングは，顧客目線か企業目線かで2つに分けられます。\n\nマーケティング\n消費者行動論\n\n前者が企業が顧客に提供する商品やサービスについて研究する一方で，後者はその商品やサービスを消費する顧客に焦点を当てた研究を行います。 とりわけ，「消費」という現象を研究対象にする学問は多く，マーケティング以外にも，心理学，経済学，統計学といった分野で消費行動を研究しています。 心理学における消費行動論とマーケティングにおける消費行動論は非常に近い関係にあります。 また経済学とりわけ実証産業組織論における消費行動論は，消費をモデル化し，データをシミュレーション等で解析することで，消費行動のメカニズムを解明しようとするものです。 統計学における消費行動研究は「マーケティング・サイエンス」とも呼ばれており，高度な統計学やシミュレーションを用いて消費行動を分析し，消費のパターンを解明しようとするものです。\n\n\n\n\n学術研究が掲載された研究雑誌(これをジャーナルといいます)は数多くありますが、そのうち査読(referree)制度を採用しているものを査読付き学術雑誌(referreed journal)といいます。査読者は匿名で論文の審査を行い，ジャーナルに掲載しても良い論文かどうかを判断し，その結果を査読レポートとして雑誌編集長に報告します。\nこの査読付き学術雑誌に論文を掲載させるには、雑誌編集長の審査を通過し，その後割り当てられた査読委員による査読を突破する必要があります。 投稿された論文のレベルが低い場合，編集長の判断で即リジェクトされます(これをデスク・リジェクトといいます。かなり辛い結果です)。 レベルが一定以上であると編集長が判断した論文だけが査読委員に割り当てられ，2名程度の査読委員が，「そのまま掲載可」，「少し修正すれば掲載可」，「かなり修正すれば掲載可」，「掲載不可」という判断をします。 この査読システムにより、研究者の研究成果の質を保証するとともに、研究者の研究成果を評価する指標としても機能しています。 しかし，この査読の時間が結構長く，投稿してから雑誌に掲載されるまで1年〜3年程度かかることもざらです。\n国際的に評価の高い研究雑誌に掲載された論文は、掲載率数％という非常に厳しい査読を通過した高品質な経営学研究であり、最先端の社会科学の知識が詰まったものといえます。英語で書かれていますが、ChatGPTとかDeepLを駆使して、ぜひ読んでみてください。\n会計研究だと、先ほど紹介した\n\nThe Accounting Review (TAR)\nJournal of Accounting and Economics (JAE)\nJournal of Accounting Research (JAR)\nReview of Accounting Studies (RAST)\nContemporary Accounting Research (CAR)\n\nが五大誌ですが、それ以外にも読むべき雑誌として、\n\nEuropean Accounting Review (EAR)\nJournal of Accounting and Public Policy (JAPP)\nJournal of Accounting, Auditing and Finance (JAAF)\nAccounting Horizons (AH)\nJournal of Business, Finance and Accounting (JBFA)\nJournal of American Taxation Association (JATA)\nJournal of Management Accounting Research (JMAR)\nManagement Accounting Research (MAR)\n\nなどがあります。 ファイナンス研究だと、\n\nJournal of Finance (JF)\nJournal of Financial Economics (JFE)\nReview of Financial Studies (RFS)\nJournal of Corporate Finance (JCF)\nJournal of Banking and Finance (JBF)\n\nあたりでしょうか。 マーケティング研究だと、\n\nJournal of Marketing (JM)\nJournal of Marketing Research (JMR)\nJournal of Consumer Research (JCR)\nMarketing Science (MS)\n\n組織・戦略研究だと、\n\nAcademy of Management Journal (AMJ)\nAcademy of Management Review (AMR)\nAdministrative Science Quarterly (ASQ)\nOrganization Science (OS)\nManagement Science (MS)\nStrategic Management Journal (SMJ)\n\nがあります。 これらの各領域におけるトップジャーナルを見てみると、多くの実証研究が行われていることが分かります。\n日本の査読付き学術雑誌には、(松浦が知っている限りでは)、以下のようなものがあります。\n会計学\n\n会計プログレス\n現代ディスクロージャー研究\n管理会計学\n原価計算研究\n\nファイナンス\n\n現代ファイナンス\n経営財務研究\n\nマーケティング\n\n流通研究\nマーケティング・ジャーナル\n\n組織・戦略\n\n組織科学\n経営行動科学\n日本経営学会誌\n\n\n\n\n\nプレゼミの達成目標は、経営事象に関する問題を発見し、その問題がなぜ生じているのか、どうすれば解決できるのかを考えることができるようになることです。 そこで、まずは研究課題の種類について学びます。 問いの立て方には大きく分けて3つのタイプがあります。\n\n実証的問題\n規範的問題\n分析的問題\n\nこの3種類の問題について説明します。 「よい研究テーマ」の探し方を理解したらよい研究テーマが見付かるわけではないで、自分が面白い！と思えるような、興味引かれるテーマを見つけることが重要です。\n\n\nリサーチ・クエスチョン(research question)とは、研究対象となる会計に関する、抽象度の高い問いのことです。 リサーチ・クエスチョンが決まれば、その問いに答えるために、何をするべきなのかが決まるため、非常に重要な要素となります。 たとえば、\n\n会計情報の質が高いと、投資家の意思決定がよりよいものになるのか？\n大きな監査法人は、財務報告の質を高めているのか？\nCSR活動に積極的な会社は、納税も積極的か？\nステルス値上げと値上げに購買意欲に与える影響は同じか？\n女性管理職を増加させることは，企業業績に良い影響を与えるのか？\n\nこれらのリサーチ・クエスチョンを3つに分類してみましょう。\n\n\n実証的問題では、事実を調べることが目的となります。 たとえば、「のれんの非償却はM&Aを促進させるのか」という問いに対しては、のれんの非償却を行っている企業と、行っていない企業のM&Aの実施率を比較することで、その問いに答えることができます。\n実証的問題を扱う会計研究でも、定量的な研究だけでなく、インタビューによる定性的な研究もあります。参与観察研究はあまり見ません。 事実に注目する研究となるため、主観的な要素はできるだけ排して、観察されたデータや発言といった客観的なデータを用いることが多いです。 このプレゼミでは、主として経営学分野における実証的問題を扱います。\n\n\n\nいわゆる「べき論」を扱う問題で、日本の会計研究では今でも盛んに行われている研究です。 たとえば、「のれんは償却すべきか」という問いに対しては、のれんの償却を行うことで、どのようなメリットがあるのか、どのようなデメリットがあるのかを考え、そのメリットとデメリットを比較することで、その問いに答えることができます。 ただ、この場合でも、「誰にとっての」メリットを重視するべきなのか、という問題がでますが、そこは研究者の価値判断によって決まることになり、研究者の主観が大きく反映されることになります。\nしたがって教科書でも、規範的問題を実証的問題に変換する方法を考え、規範的問題を直接あつかう研究課題は取りあげません。\n\n\n\n分析的問題は、まだ起こっていない、観察されていない現象を扱います。 そもそも起こっていない現象なのでデータも取りようがありません。 そこで、分析的問題では、モデル(model)を用いて、現象の起こりうるメカニズムを考えます。\n基本的には、関心のある問題を抽象化して数式で表現し、前提条件と仮定を設定し、その問題を解くことで得られた結果を解釈することで、その問いに答えることができます。 たとえば、税務会計や監査といった情報が入手困難な領域において、ゲーム理論や契約理論、最適化理論を用いた分析が行われることが多いような気がしますが、そこまで詳しくないでし、難しいので、ここでは扱いません。\nしたがって、このプレゼミでは、各自がたてた実証的問題について考えていきます。\n\n\n\n\n政治学のMonroe (2000, pp.8–10)によると、\n\n明快さ\n検証可能性\n理論的重要性\n実用性\n独創性\n\nがよい研究テーマに必要な要素らしいです。\n詳しくは教科書を読むとして、会計学や経営学でもほぼ同じですが、卒業論文においては、理論的重要性と独創性はあればよいですが、必ずしも必要ではありません。 なぜなら、理論的重要性を理解し、論文で示すことは、研究で用いる推論の背後にある理論や仕組みを完全に理解する必要がありますし、独創性を主張するためには、膨大な先行研究を読み、自分の主張が他の人とどう違うのか、どの点が新しいのかを明らかにする必要があり、とても時間がかかるからです。\nしたがって、明快な推論で導き出された仮説を、客観的なデータを用いて、適切な手法で分析し、その結果を解釈し、経営実務にどういう影響があるのか、を主張できれば、卒業論文としては申し分ないレベルです。\nとりわけ、このプレゼミでは、検証可能性を重視します。 そのレポート・論文を読めば、他の人でも同じ分析を行うことが可能であり、誰でも追試が行えることが重要です。 データの集め方や変数の作り方、データ分析のプロセスが明確にしめされており、それを自分でもすぐに再現することが重要です。そのためにRは非常に有効なツールとなります。\n\n\n「べき論」は研究者の価値判断が大きく反映され、その研究者が主張する価値は主観的なものになるため検証ができません。 そこで規範的問題を実証的問題になるように問い方を変える方法を考えます。\n\n1つめの方法は、参照枠組みを変える方法です。 「会計は投資意思決定に役立つべきである」という問いは規範的問題で、それは「会計は株主のためのものである」という価値判断が含まれています。このままでは検証できないので、「会計は投資意思決定に役に立っているのか？」に変えることで、検証可能な問いになります。\n\n2つめの方法は、規範的問題の前提条件に注目する方法です。 「会計は投資意思決定の役立つべきである」という規範的記述の背後には、\n\n会計は投資家のためのものである\n投資家が会計(情報)を使えば儲かる。\n投資家の投資が活発になれば、経済は活性化する。\n\nという前提条件があると考えられます。 これを実証的な問題にするには、\n\n会計(情報)の主な利用者は投資家なのか？\n会計情報を使えば儲かるのか？\n投資の役に立つ会計情報を提供することで、経済は活性化するのか？\n\nのように、規範的問題の背後にある前提条件を検証可能な問いに変えることで、実証的な問題になります。\n\n\n\nパズル(puzzle)とは、ある現象を説明するために、既存の理論では説明できない現象のことです。 たとえば、配当パズル(dividend puzzle)とは、配当がなぜ存在するのか、という問題です。 配当は、株主に対する利益配分の一つであり、株主にとっては配当が高いほうがよいはずです。しかし、実際には、配当が高いほど株価が低くなるという現象が観察されます。 このような現象を説明するために、既存の理論では説明できないので、パズルと呼ばれ、研究題材としては非常に魅力的です。\n\n\n\n実証研究の論文構成は、ほぼ以下のような構成となっています。\n\nイントロダクション\n先行研究\n理論\n仮説\n対抗仮説\n作業化\n証拠\n結論\n\nこのうち、1-4は、研究の背景を説明する部分であり、5-7は、研究の主要な部分であり、8は、研究のまとめです。\n\n\n\n\n\n第2回講義の到達目標は、\n\nリサーチ・クエスチョンを設定することができる。\n作業仮説を作る。\n作業仮説を検証するためのデータを集めることができる。\n代理変数の妥当性を検討することができる。\n\nです。 第1回講義の到達度検証のための課題は、以下の通りです。\n\n構成概念を定義し、因果関係を示す理論を説明できる。\n作業仮説を作り、構成概念を検証するための代理変数を構築する。\n構成概念の代理変数として複数の候補を挙げる。\nKinny’s Bosを作成する。\n\n\n\n\nLibby’s Box\n\n\nたとえば、監査研究の一例を挙げてみると、次のような図になります。\n\n\n\n監査と財務報告の質\n\n\n\n\n実証研究のリサーチ・デザイン(research design)のプロセスは次のような手順になります。\n\nパズルを見つける（簡単には見付からないです）\nパズルを説明するための複数の前提条件を使って理論を作る。（前提条件を自分で考えるのは難しすぎるので、先行研究を参考にすることが多いです。理論はパズルを説明するための仮説の集合体です。）\n理論から作業仮説(working hypothesis, hypothesis)を引き出す。\n作業仮説を検証するためのデータを集める。\nデータを使って作業仮説を検証し、理論の妥当性を確かめる。\n\n理想的にはこうなるでしょうが、現実にはこんなにうまくいきませんが、この講義では3〜5のプロセスを重視します。というのも、1と2のステップはかなり難しいので、現実には、\n\n興味のある経営現象を見つけて調べる。\n経営現象の発生を説明するための理論を見つけるために、先行研究を漁る。\n先行研究を参考にして作業仮説を作る。\n\nという風に行われることが多い（と思います。たぶん）\n\n\n\n因果関係(causality)と相関関係(correlation)の違いを理解しておきましょう。\n因果関係は、近年の社会科学領域の研究で最も注目されているキーワードでしょう。 もともと因果関係を特定し、推定する研究は数多く行われてきましたが、近年になって発達した計量経済学や実験経済学の手法を使って、より厳密に因果関係を特定しようとする研究が増え、因果関係を適切に特定することの重要性が認識されるようになりました。\n例えば、こんな本が近年出版されています。\n\n\n\n\n\n\n因果推論入門：基礎から現代的アプローチまで\n\n\n\n\n\n\n\n統計的因果推論の理論と実装\n\n\n\n\n\n\n\n効果検証入門\n\n\n\n\n\n因果関係とは、原因(causal)と結果(outcome)の関係のことです。正確に言うと、ある要因\\(X\\)を操作するとき、別の要因\\(Y\\)が変化することです(Imbens and Rubin, 2015, p.4)。\n因果関係を考える際には、「効果をもたらした原因」(causal of effect)と「原因のもたらす効果」(effect of cause)の両方を考える必要があります。 例えば、ある企業が従業員の給料を上げたとします。 このとき、従業員の給料が上がったことが「効果をもたらした原因」であり、従業員の給料が上がったことによって、従業員のモチベーションが上がったことが「原因のもたらす効果」です。 定量的な研究では、「原因のもたらす効果」を分析することが多いです。\n因果関係があると考えるためには、3つの条件を確かめる必要があります。\n\n原因が結果より先に起こる。\n原因と結果が共変する。\n原因以外の重要な要因が変化しない。\n\nこの因果関係を記述するものを理論といいます。\n\n\n\n理論とは「原因と結果について一般的な論述」で、「〇〇であるとき、△△が起こる」というようなものです。推論といってもよいです。 原因と結果の関係を「説明変数\\(X\\)」(explanatory variable)と「応答変数\\(Y\\)」(response variable)の関係として表現します。\n\\[\nX \\Longrightarrow Y\n\\]\n推論を作る際には，どれだけ説得力があり納得できる仮定を設定するかが重要となります。仮定のない推論など役に立たないからです。 経営学は独自の理論をもたない学問とも言われ，とりわけ会計学における事実解明的研究(positive research)では，心理学や経済学で蓄積された理論を借用することが多いです（松浦は経済学に基づく推論を行っています）。\n\n\n\n良い理論・推論が持つべき性質は次のようなものです。\n\n反証可能であること\n観察可能な予測が多いこと\n具体的であること\nシンプルであること\n\n以下ではそれぞれについて簡単に説明します。\n\n\n「反証可能性」(falsifiability)という科学で最も重要な特性の1つを確保する必要があります 1 。\nつまり，論文を読んだ人ならだれでも，「この理論は間違っている」ということを示すことができるようにする必要があります。 反証可能性がない主張は占いと変わりません。\n\n\n\n結果として発生する現象が観察可能である予測を行う必要があることを示しています。 当然ですが，自分の主張を証拠を用いて説得力を高めようとしているのですから，その予測が当たっているのかどうかを確認できる必要があります。\n\n\n\n「業績が悪くなる」のようにあいまいな表現ではなく，「昨年度と比べて利益が減少する」とか「累積リターンがマイナスになる」といったように，具体的な予測を行う必要があります。「リスク」とか「パフォーマンス」とか「悪くなる」とか「加速する」といったあいまいな言葉は常に定義してから使うようにしましょう。\n\n\n\n理論はシンプルでなければなりません。 理解しやすく，使える範囲が広く，反証可能性が高い理論は，シンプルになっていきます。\n基本的には，先行研究で使われている理論を援用することが多い経営学・会計学では，先行研究で用いられた理論や推論に無駄がないかどうか，よりシンプルにいえないかどうか，を考えることが多いです。\n理論をシンプルにするには，前提となる条件を少なくする必要があります。 観察された経営現象をそのまま記述しようとすると非常に長く，複雑な文章になるでしょう。 それでは何が本質的に重要か分からないので，経営現象を抽象化・単純化することで，本質以外のものをそぎ落とし，理論をシンプルにすることがで，経営現象への理解がより深まります(オッカムの剃刀)。\n\n\n\n\n\n\n\n科学的には，「理論」と「仮説」とは同じものです。 反証されずに生き残った理論を仮説(hypothesis)と呼びます。 たとえば、ニュートンの万有引力の法則は，現在でも仮説として使われています。\nこの「仮説」をより具体的にしたものを「作業仮説」(working hypothesis)と呼びます。\n\n作業仮説とは，自分が使える特定の変数についての記述\n「もしこの仮説が正しければ・・・のはず」\n理論より作業仮説の方が具体的である\n仮説から引き出される観察可能な予測について述べる\n\n\n\n\nたとえば「監査の質が高いほど，財務報告の質が高くなる」という理論から，作業仮説を引き出してみましょう。 この文章の中で，\n\n監査の質\n高い\n財務報告の質\n高い\n\nという4つの用語を，測定可能な尺度にして，その高低を定義する必要があります。\nたとえば，監査の質を「監査報酬額」で測定して，財務報告の質を利益操作の程度で測定するとします。利益操作の程度を異常アクルーアルで代理すると\n\n監査報酬が、同業他社平均より高い企業ほど，異常アクルーアルの絶対値が小さい\n\nという作業仮説を立てることができます。\n理論から作業仮説を導出することは、構成概念から代理変数を導出すること深く関連しています。 この作業のコツをつかむには、良質な論文を読んで、自分でまとめてみて、他人に聞いてもらい、議論することが重要です。 そうして、自分の理論を作り上げていくのです。"
  },
  {
    "objectID": "presemi2023_02.html#sec-01",
    "href": "presemi2023_02.html#sec-01",
    "title": "研究、仮説、実証会計",
    "section": "",
    "text": "ここでは、教科書「Rによる計量政治学」の内容を「会計学」に置き換えて考えてみます。 「計量会計学」という言葉は一般的ではなく、会計学の世界では「実証的会計研究」とか「実証会計学」いう言葉が使われています。\n社会科学において、社会で生じる様々な現象（たとえば、経営現象や会計実務）を、数値化して分析することを計量化(quantification)と呼びます。 計量化されたデータを用いて、社会現象を説明しようとするアプローチを計量分析(quantitative analysis)と呼びます。 計量分析の手法は、統計学や計量経済学などの数理的な手法を用いて、社会現象を説明しようとするものです。\n会計とは経営活動から生み出される価値の変化を貨幣的に計測・記録し、その情報を整理し、集約することで、最終成果物として報告書(たとえば貸借対照表など)を作成し、それを利害関係者に報告することで、投資意思決定に役立つ情報を提供したり、利害関係者間の利害調整を行うことを目的とした一連のプロセスを意味します。 つまり会計そのものが、経営現象を計量化することを目的としているため、その最終成果物である財務諸表は、経営現象を計量化したデータの集合体と言えます。 この会計という経営実務を研究対象とした学問を会計学(accounting)といいます。\n\n\n会計学には様々な研究分野があります。 会計の歴史を研究対象とする会計史(accounting history)、会計の計算構造を研究対象とする計算構造研究(accounting structure)、簿記そのものを研究対象とする簿記論(bookkeeping)、そして、会計の実務を説明し予想するための理論の構築を目指す事実解明的な会計研究(positive accounting research)などがあります。\nとりわけ事実解明的な会計研究のうち、公表された情報を計量分析の手法を用いて分析する会計研究を、実証会計学(archival based empirical accounting)とか、単に実証会計と呼びます。 実証会計以外の事実解明的な研究には、実験により生成されたデータを分析する実験会計研究(experimental accounting)、データを必要とせず、数理モデルを用いて行われる分析会計研究(analytical accounting)などがあります。\n国際的に評価の高い会計学の学術誌である、The Accounting Review(TAR)、Journal of Accounting and Economics(JAE)、Journal of Accounting Research(JAR)、Review of Accounting Studies(RAST)、Contemporary Accounting Research(CAR)の五大誌に掲載されている論文の大部分が、会計情報を用いた計量分析となっています。 ただこの5誌はすべて北米の研究機関や大学が発行している雑誌ですので、実証、実験、分析的な会計研究がメインストリームの扱いとなりますが、ヨーロッパでは、 Accounting, Organisation snd Society(AOS)、European Accounting Research(EAR)、British Accounting Research(BAR)、Critical Accounting Research(CAR)といった、定性的研究も重要視し、経済学ではなく社会学をベースとした研究が主流？となっている雑誌もあります。しかし松浦は社会学について語れる知識がないので、やはり沈黙します。\n会計研究の世界では、1960年頃までは規範的研究(normative research)という「〇〇するべき」という主張をする研究が主流でした。たとえば企業が保有する株式を時価評価すべきかとか、ある特徴をもつリース資産を購入したものとして扱うべきか、といったものです。 しかし、1968年にJournal of Accounting Researchに掲載されたBall and Brown (1968) An Empirical Evaluation of Accounting Income Numbersを皮切りに、実際に会計情報は投資家の役に立っているのかをデータを使って確かめる、という、いわゆる実証研究が行われるようになり、今日まで会計研究の主要分野となっています。\n実証的会計研究を行うために必要な知識・技術として、\n\n会計基準・会計理論\nミクロ経済学（ゲーム理論、契約理論、情報の経済学）\n計量経済学\nファイナンス理論（コーポレート・ファイナンス）\nプログラミング\n\nが挙げられます。\n同じ事実解明型研究の中でも、証拠では無く論理による主張を目指す分析的会計研究で必要な知識・技術として、\n\n会計基準・会計理論\nミクロ経済学（ゲーム理論、契約理論、情報の経済学）\n最適化理論\n差分方程式\n\nが挙げられます。 そもそも分析的会計研究は、会計現象を抽象化し、数学でその現象を表現するモデルを作り、そのモデルを解くことで得られる均衡解を比較静学することで様々なインプリケーションを得るため、実際に発生していない問題も研究することできる利点があります。 その反面、要求されるモデルを作るセンスや、解けるモデルを構築するための数学レベルも高く、また研究に要する時間も長いため、実証的会計研究に比べて論文が少ないです。 しかし、理論と実証は研究の両輪をなすものであり、どちらも重要であることに違いはないので、完全に理解することはできなくても、目を通す努力は必要でしょう。\nただやはり難しい数式が出てくる会計研究は松浦には完全に理解することはできないので、ここでは実証的会計研究について考えていきます。ヴィトゲンシュタインの言葉を借りれば、語り得ないものは語らないということで、分析的会計研究は沈黙するべきです。\n\n\n\n誤解を恐れずに、会計学者の松浦が他の経営学領域について、ざっくりと説明してみます。 立命館大学経営学部経営学科には、\n\n会計・ファイナンスコース\n戦略コース\n組織コース\nマーケティングコース\n\nの4コースがあります。これをもとに、経営学領域をざっくりと分類してみます。\n\n\n\n会計学を大きく2つに分類すると、\n\n財務会計\n管理会計\n\nに分かれます。これは企業外への情報提供を目的しているのか、それとも会社内部の経営管理を目的としているのか、によって分類しています。 情報提供を主目的とする財務会計は、制度会計とも呼ばれ、会社が共通して利用する会計基準に従って情報生産をする会計システムを研究対象としています。 これに対し、経営管理を主目的とする管理会計は、会社ごとに独自の会計システムを構築し、会社の経営管理に役立てることを目的としています。 したがって、財務会計情報は公表されているものが多く、代表的な情報源として有価証券報告書がありますが、管理会計情報は非公開のものが多く、データが入手困難です。\nファイナンスを大きく2つに分類すると，\n\nコーポレート・ファイナンス\n投資論\n\nに分けられると思います(たぶん)。 コーポレート・ファイナンスは、企業が資金を調達する際の意思決定を研究対象とし，投資論は投資家が資産を選択する際の意思決定を研究対象とします。\n\n\n戦略コースは、企業や経営者が選択できる行動のメニューについて考えることを目的としています。 ただ戦略論という研究領域はあるのでしょうが，その分野の先生が主戦場とする学会や学術雑誌が分からないので，うまく説明できません。\n\n\n\n組織コースは、組織を研究対象とするコースです。大きく\n\nマクロ組織論\nミクロ組織論\n\nに分けられます。 マクロ組織論では、組織の構造や組織の環境との関係を研究対象とする一方で、ミクロ組織論では、組織内の個人の行動や組織内の人間関係を研究対象とします。とりわけミクロ組織論では、組織内の人に焦点を当てた研究を行うため、アンケート調査や実験による検証が多く、心理学に基づく定量的な研究も多く行われています。\n\n\n\nマーケティングは，顧客目線か企業目線かで2つに分けられます。\n\nマーケティング\n消費者行動論\n\n前者が企業が顧客に提供する商品やサービスについて研究する一方で，後者はその商品やサービスを消費する顧客に焦点を当てた研究を行います。 とりわけ，「消費」という現象を研究対象にする学問は多く，マーケティング以外にも，心理学，経済学，統計学といった分野で消費行動を研究しています。 心理学における消費行動論とマーケティングにおける消費行動論は非常に近い関係にあります。 また経済学とりわけ実証産業組織論における消費行動論は，消費をモデル化し，データをシミュレーション等で解析することで，消費行動のメカニズムを解明しようとするものです。 統計学における消費行動研究は「マーケティング・サイエンス」とも呼ばれており，高度な統計学やシミュレーションを用いて消費行動を分析し，消費のパターンを解明しようとするものです。\n\n\n\n\n学術研究が掲載された研究雑誌(これをジャーナルといいます)は数多くありますが、そのうち査読(referree)制度を採用しているものを査読付き学術雑誌(referreed journal)といいます。査読者は匿名で論文の審査を行い，ジャーナルに掲載しても良い論文かどうかを判断し，その結果を査読レポートとして雑誌編集長に報告します。\nこの査読付き学術雑誌に論文を掲載させるには、雑誌編集長の審査を通過し，その後割り当てられた査読委員による査読を突破する必要があります。 投稿された論文のレベルが低い場合，編集長の判断で即リジェクトされます(これをデスク・リジェクトといいます。かなり辛い結果です)。 レベルが一定以上であると編集長が判断した論文だけが査読委員に割り当てられ，2名程度の査読委員が，「そのまま掲載可」，「少し修正すれば掲載可」，「かなり修正すれば掲載可」，「掲載不可」という判断をします。 この査読システムにより、研究者の研究成果の質を保証するとともに、研究者の研究成果を評価する指標としても機能しています。 しかし，この査読の時間が結構長く，投稿してから雑誌に掲載されるまで1年〜3年程度かかることもざらです。\n国際的に評価の高い研究雑誌に掲載された論文は、掲載率数％という非常に厳しい査読を通過した高品質な経営学研究であり、最先端の社会科学の知識が詰まったものといえます。英語で書かれていますが、ChatGPTとかDeepLを駆使して、ぜひ読んでみてください。\n会計研究だと、先ほど紹介した\n\nThe Accounting Review (TAR)\nJournal of Accounting and Economics (JAE)\nJournal of Accounting Research (JAR)\nReview of Accounting Studies (RAST)\nContemporary Accounting Research (CAR)\n\nが五大誌ですが、それ以外にも読むべき雑誌として、\n\nEuropean Accounting Review (EAR)\nJournal of Accounting and Public Policy (JAPP)\nJournal of Accounting, Auditing and Finance (JAAF)\nAccounting Horizons (AH)\nJournal of Business, Finance and Accounting (JBFA)\nJournal of American Taxation Association (JATA)\nJournal of Management Accounting Research (JMAR)\nManagement Accounting Research (MAR)\n\nなどがあります。 ファイナンス研究だと、\n\nJournal of Finance (JF)\nJournal of Financial Economics (JFE)\nReview of Financial Studies (RFS)\nJournal of Corporate Finance (JCF)\nJournal of Banking and Finance (JBF)\n\nあたりでしょうか。 マーケティング研究だと、\n\nJournal of Marketing (JM)\nJournal of Marketing Research (JMR)\nJournal of Consumer Research (JCR)\nMarketing Science (MS)\n\n組織・戦略研究だと、\n\nAcademy of Management Journal (AMJ)\nAcademy of Management Review (AMR)\nAdministrative Science Quarterly (ASQ)\nOrganization Science (OS)\nManagement Science (MS)\nStrategic Management Journal (SMJ)\n\nがあります。 これらの各領域におけるトップジャーナルを見てみると、多くの実証研究が行われていることが分かります。\n日本の査読付き学術雑誌には、(松浦が知っている限りでは)、以下のようなものがあります。\n会計学\n\n会計プログレス\n現代ディスクロージャー研究\n管理会計学\n原価計算研究\n\nファイナンス\n\n現代ファイナンス\n経営財務研究\n\nマーケティング\n\n流通研究\nマーケティング・ジャーナル\n\n組織・戦略\n\n組織科学\n経営行動科学\n日本経営学会誌"
  },
  {
    "objectID": "presemi2023_02.html#研究テーマの選び方",
    "href": "presemi2023_02.html#研究テーマの選び方",
    "title": "研究、仮説、実証会計",
    "section": "",
    "text": "プレゼミの達成目標は、経営事象に関する問題を発見し、その問題がなぜ生じているのか、どうすれば解決できるのかを考えることができるようになることです。 そこで、まずは研究課題の種類について学びます。 問いの立て方には大きく分けて3つのタイプがあります。\n\n実証的問題\n規範的問題\n分析的問題\n\nこの3種類の問題について説明します。 「よい研究テーマ」の探し方を理解したらよい研究テーマが見付かるわけではないで、自分が面白い！と思えるような、興味引かれるテーマを見つけることが重要です。\n\n\nリサーチ・クエスチョン(research question)とは、研究対象となる会計に関する、抽象度の高い問いのことです。 リサーチ・クエスチョンが決まれば、その問いに答えるために、何をするべきなのかが決まるため、非常に重要な要素となります。 たとえば、\n\n会計情報の質が高いと、投資家の意思決定がよりよいものになるのか？\n大きな監査法人は、財務報告の質を高めているのか？\nCSR活動に積極的な会社は、納税も積極的か？\nステルス値上げと値上げに購買意欲に与える影響は同じか？\n女性管理職を増加させることは，企業業績に良い影響を与えるのか？\n\nこれらのリサーチ・クエスチョンを3つに分類してみましょう。\n\n\n実証的問題では、事実を調べることが目的となります。 たとえば、「のれんの非償却はM&Aを促進させるのか」という問いに対しては、のれんの非償却を行っている企業と、行っていない企業のM&Aの実施率を比較することで、その問いに答えることができます。\n実証的問題を扱う会計研究でも、定量的な研究だけでなく、インタビューによる定性的な研究もあります。参与観察研究はあまり見ません。 事実に注目する研究となるため、主観的な要素はできるだけ排して、観察されたデータや発言といった客観的なデータを用いることが多いです。 このプレゼミでは、主として経営学分野における実証的問題を扱います。\n\n\n\nいわゆる「べき論」を扱う問題で、日本の会計研究では今でも盛んに行われている研究です。 たとえば、「のれんは償却すべきか」という問いに対しては、のれんの償却を行うことで、どのようなメリットがあるのか、どのようなデメリットがあるのかを考え、そのメリットとデメリットを比較することで、その問いに答えることができます。 ただ、この場合でも、「誰にとっての」メリットを重視するべきなのか、という問題がでますが、そこは研究者の価値判断によって決まることになり、研究者の主観が大きく反映されることになります。\nしたがって教科書でも、規範的問題を実証的問題に変換する方法を考え、規範的問題を直接あつかう研究課題は取りあげません。\n\n\n\n分析的問題は、まだ起こっていない、観察されていない現象を扱います。 そもそも起こっていない現象なのでデータも取りようがありません。 そこで、分析的問題では、モデル(model)を用いて、現象の起こりうるメカニズムを考えます。\n基本的には、関心のある問題を抽象化して数式で表現し、前提条件と仮定を設定し、その問題を解くことで得られた結果を解釈することで、その問いに答えることができます。 たとえば、税務会計や監査といった情報が入手困難な領域において、ゲーム理論や契約理論、最適化理論を用いた分析が行われることが多いような気がしますが、そこまで詳しくないでし、難しいので、ここでは扱いません。\nしたがって、このプレゼミでは、各自がたてた実証的問題について考えていきます。\n\n\n\n\n政治学のMonroe (2000, pp.8–10)によると、\n\n明快さ\n検証可能性\n理論的重要性\n実用性\n独創性\n\nがよい研究テーマに必要な要素らしいです。\n詳しくは教科書を読むとして、会計学や経営学でもほぼ同じですが、卒業論文においては、理論的重要性と独創性はあればよいですが、必ずしも必要ではありません。 なぜなら、理論的重要性を理解し、論文で示すことは、研究で用いる推論の背後にある理論や仕組みを完全に理解する必要がありますし、独創性を主張するためには、膨大な先行研究を読み、自分の主張が他の人とどう違うのか、どの点が新しいのかを明らかにする必要があり、とても時間がかかるからです。\nしたがって、明快な推論で導き出された仮説を、客観的なデータを用いて、適切な手法で分析し、その結果を解釈し、経営実務にどういう影響があるのか、を主張できれば、卒業論文としては申し分ないレベルです。\nとりわけ、このプレゼミでは、検証可能性を重視します。 そのレポート・論文を読めば、他の人でも同じ分析を行うことが可能であり、誰でも追試が行えることが重要です。 データの集め方や変数の作り方、データ分析のプロセスが明確にしめされており、それを自分でもすぐに再現することが重要です。そのためにRは非常に有効なツールとなります。\n\n\n「べき論」は研究者の価値判断が大きく反映され、その研究者が主張する価値は主観的なものになるため検証ができません。 そこで規範的問題を実証的問題になるように問い方を変える方法を考えます。\n\n1つめの方法は、参照枠組みを変える方法です。 「会計は投資意思決定に役立つべきである」という問いは規範的問題で、それは「会計は株主のためのものである」という価値判断が含まれています。このままでは検証できないので、「会計は投資意思決定に役に立っているのか？」に変えることで、検証可能な問いになります。\n\n2つめの方法は、規範的問題の前提条件に注目する方法です。 「会計は投資意思決定の役立つべきである」という規範的記述の背後には、\n\n会計は投資家のためのものである\n投資家が会計(情報)を使えば儲かる。\n投資家の投資が活発になれば、経済は活性化する。\n\nという前提条件があると考えられます。 これを実証的な問題にするには、\n\n会計(情報)の主な利用者は投資家なのか？\n会計情報を使えば儲かるのか？\n投資の役に立つ会計情報を提供することで、経済は活性化するのか？\n\nのように、規範的問題の背後にある前提条件を検証可能な問いに変えることで、実証的な問題になります。\n\n\n\nパズル(puzzle)とは、ある現象を説明するために、既存の理論では説明できない現象のことです。 たとえば、配当パズル(dividend puzzle)とは、配当がなぜ存在するのか、という問題です。 配当は、株主に対する利益配分の一つであり、株主にとっては配当が高いほうがよいはずです。しかし、実際には、配当が高いほど株価が低くなるという現象が観察されます。 このような現象を説明するために、既存の理論では説明できないので、パズルと呼ばれ、研究題材としては非常に魅力的です。\n\n\n\n実証研究の論文構成は、ほぼ以下のような構成となっています。\n\nイントロダクション\n先行研究\n理論\n仮説\n対抗仮説\n作業化\n証拠\n結論\n\nこのうち、1-4は、研究の背景を説明する部分であり、5-7は、研究の主要な部分であり、8は、研究のまとめです。"
  },
  {
    "objectID": "presemi2023_02.html#理論と仮説",
    "href": "presemi2023_02.html#理論と仮説",
    "title": "研究、仮説、実証会計",
    "section": "",
    "text": "第2回講義の到達目標は、\n\nリサーチ・クエスチョンを設定することができる。\n作業仮説を作る。\n作業仮説を検証するためのデータを集めることができる。\n代理変数の妥当性を検討することができる。\n\nです。 第1回講義の到達度検証のための課題は、以下の通りです。\n\n構成概念を定義し、因果関係を示す理論を説明できる。\n作業仮説を作り、構成概念を検証するための代理変数を構築する。\n構成概念の代理変数として複数の候補を挙げる。\nKinny’s Bosを作成する。\n\n\n\n\nLibby’s Box\n\n\nたとえば、監査研究の一例を挙げてみると、次のような図になります。\n\n\n\n監査と財務報告の質\n\n\n\n\n実証研究のリサーチ・デザイン(research design)のプロセスは次のような手順になります。\n\nパズルを見つける（簡単には見付からないです）\nパズルを説明するための複数の前提条件を使って理論を作る。（前提条件を自分で考えるのは難しすぎるので、先行研究を参考にすることが多いです。理論はパズルを説明するための仮説の集合体です。）\n理論から作業仮説(working hypothesis, hypothesis)を引き出す。\n作業仮説を検証するためのデータを集める。\nデータを使って作業仮説を検証し、理論の妥当性を確かめる。\n\n理想的にはこうなるでしょうが、現実にはこんなにうまくいきませんが、この講義では3〜5のプロセスを重視します。というのも、1と2のステップはかなり難しいので、現実には、\n\n興味のある経営現象を見つけて調べる。\n経営現象の発生を説明するための理論を見つけるために、先行研究を漁る。\n先行研究を参考にして作業仮説を作る。\n\nという風に行われることが多い（と思います。たぶん）\n\n\n\n因果関係(causality)と相関関係(correlation)の違いを理解しておきましょう。\n因果関係は、近年の社会科学領域の研究で最も注目されているキーワードでしょう。 もともと因果関係を特定し、推定する研究は数多く行われてきましたが、近年になって発達した計量経済学や実験経済学の手法を使って、より厳密に因果関係を特定しようとする研究が増え、因果関係を適切に特定することの重要性が認識されるようになりました。\n例えば、こんな本が近年出版されています。\n\n\n\n\n\n\n因果推論入門：基礎から現代的アプローチまで\n\n\n\n\n\n\n\n統計的因果推論の理論と実装\n\n\n\n\n\n\n\n効果検証入門\n\n\n\n\n\n因果関係とは、原因(causal)と結果(outcome)の関係のことです。正確に言うと、ある要因\\(X\\)を操作するとき、別の要因\\(Y\\)が変化することです(Imbens and Rubin, 2015, p.4)。\n因果関係を考える際には、「効果をもたらした原因」(causal of effect)と「原因のもたらす効果」(effect of cause)の両方を考える必要があります。 例えば、ある企業が従業員の給料を上げたとします。 このとき、従業員の給料が上がったことが「効果をもたらした原因」であり、従業員の給料が上がったことによって、従業員のモチベーションが上がったことが「原因のもたらす効果」です。 定量的な研究では、「原因のもたらす効果」を分析することが多いです。\n因果関係があると考えるためには、3つの条件を確かめる必要があります。\n\n原因が結果より先に起こる。\n原因と結果が共変する。\n原因以外の重要な要因が変化しない。\n\nこの因果関係を記述するものを理論といいます。\n\n\n\n理論とは「原因と結果について一般的な論述」で、「〇〇であるとき、△△が起こる」というようなものです。推論といってもよいです。 原因と結果の関係を「説明変数\\(X\\)」(explanatory variable)と「応答変数\\(Y\\)」(response variable)の関係として表現します。\n\\[\nX \\Longrightarrow Y\n\\]\n推論を作る際には，どれだけ説得力があり納得できる仮定を設定するかが重要となります。仮定のない推論など役に立たないからです。 経営学は独自の理論をもたない学問とも言われ，とりわけ会計学における事実解明的研究(positive research)では，心理学や経済学で蓄積された理論を借用することが多いです（松浦は経済学に基づく推論を行っています）。\n\n\n\n良い理論・推論が持つべき性質は次のようなものです。\n\n反証可能であること\n観察可能な予測が多いこと\n具体的であること\nシンプルであること\n\n以下ではそれぞれについて簡単に説明します。\n\n\n「反証可能性」(falsifiability)という科学で最も重要な特性の1つを確保する必要があります 1 。\nつまり，論文を読んだ人ならだれでも，「この理論は間違っている」ということを示すことができるようにする必要があります。 反証可能性がない主張は占いと変わりません。\n\n\n\n結果として発生する現象が観察可能である予測を行う必要があることを示しています。 当然ですが，自分の主張を証拠を用いて説得力を高めようとしているのですから，その予測が当たっているのかどうかを確認できる必要があります。\n\n\n\n「業績が悪くなる」のようにあいまいな表現ではなく，「昨年度と比べて利益が減少する」とか「累積リターンがマイナスになる」といったように，具体的な予測を行う必要があります。「リスク」とか「パフォーマンス」とか「悪くなる」とか「加速する」といったあいまいな言葉は常に定義してから使うようにしましょう。\n\n\n\n理論はシンプルでなければなりません。 理解しやすく，使える範囲が広く，反証可能性が高い理論は，シンプルになっていきます。\n基本的には，先行研究で使われている理論を援用することが多い経営学・会計学では，先行研究で用いられた理論や推論に無駄がないかどうか，よりシンプルにいえないかどうか，を考えることが多いです。\n理論をシンプルにするには，前提となる条件を少なくする必要があります。 観察された経営現象をそのまま記述しようとすると非常に長く，複雑な文章になるでしょう。 それでは何が本質的に重要か分からないので，経営現象を抽象化・単純化することで，本質以外のものをそぎ落とし，理論をシンプルにすることがで，経営現象への理解がより深まります(オッカムの剃刀)。"
  },
  {
    "objectID": "presemi2023_02.html#仮説と仮説検証",
    "href": "presemi2023_02.html#仮説と仮説検証",
    "title": "研究、仮説、実証会計",
    "section": "",
    "text": "科学的には，「理論」と「仮説」とは同じものです。 反証されずに生き残った理論を仮説(hypothesis)と呼びます。 たとえば、ニュートンの万有引力の法則は，現在でも仮説として使われています。\nこの「仮説」をより具体的にしたものを「作業仮説」(working hypothesis)と呼びます。\n\n作業仮説とは，自分が使える特定の変数についての記述\n「もしこの仮説が正しければ・・・のはず」\n理論より作業仮説の方が具体的である\n仮説から引き出される観察可能な予測について述べる\n\n\n\n\nたとえば「監査の質が高いほど，財務報告の質が高くなる」という理論から，作業仮説を引き出してみましょう。 この文章の中で，\n\n監査の質\n高い\n財務報告の質\n高い\n\nという4つの用語を，測定可能な尺度にして，その高低を定義する必要があります。\nたとえば，監査の質を「監査報酬額」で測定して，財務報告の質を利益操作の程度で測定するとします。利益操作の程度を異常アクルーアルで代理すると\n\n監査報酬が、同業他社平均より高い企業ほど，異常アクルーアルの絶対値が小さい\n\nという作業仮説を立てることができます。\n理論から作業仮説を導出することは、構成概念から代理変数を導出すること深く関連しています。 この作業のコツをつかむには、良質な論文を読んで、自分でまとめてみて、他人に聞いてもらい、議論することが重要です。 そうして、自分の理論を作り上げていくのです。"
  },
  {
    "objectID": "presemi2023_02.html#footnotes",
    "href": "presemi2023_02.html#footnotes",
    "title": "研究、仮説、実証会計",
    "section": "脚注",
    "text": "脚注\n\n\n「反証不可能な理論は科学ではない」といったのは，科学哲学者カール・ポパー(Karl Popper)です。 Popper (1959) The Logic of Scientific Discovery, London: Hutchinson.（邦訳：ポパー（1971）『科学的発見の論理 上下巻』，恒星社厚生閣）↩︎"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever."
  },
  {
    "objectID": "presemi2023_08.html",
    "href": "presemi2023_08.html",
    "title": "変数間の関連性",
    "section": "",
    "text": "第8回講義の到達目標は、\n\nカテゴリー変数間の関連性を調べる方法を学ぶ。\n2変数の関係を表す統計量を出力できる。\n統計量から結果を解釈し，意味のある主張をすることができる。\n第8回講義の到達度検証のための課題は、以下の通りです。\nカテゴリー変数間の関連性を調べる方法を説明できる。\n\nこの章では、2つ以上の変数間の関係を調べる方法を学びます。 1つめは、カテゴリー変数間の関係を調べる方法として、クロス集計表とカイ二乗検定を学びます。 2つめは、量的変数間の関係を調べる方法として、相関係数と散布図を学びます。\n\n\nカテゴリー変数は、その値がどのカテゴリーに属するかということを表す変数です。 2つのカテゴリー変数の関連性を調べるためにはクロス集計表を作ることが有益です。 例えば、40名のクラスに、男が25名、女が15名います。 また、クラスの中で、メガネをかけている男が4名、メガネを掛けている女が8名いました。 このクロス集計表は次のようなものになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n41\n204\n245\n\n\n女\n81\n74\n155\n\n\n合計\n122\n278\n400\n\n\n\nこの表から、メガネをかけている人の割合は、男性の中で$41 =“0.2009804、女性の中で$81 = $0.52であることから、女子学生の方がメガネをかける傾向にあることが分かりました。\n\nこのクロス集計表から読み取れる関係が、統計的に意味があるのかどうかを調べるためには、\\(\\chi ^2\\)(カイ二乗)検定を行います。 \\(\\chi^2\\)検定は次のステップで実行します。\n\n帰無仮説として、カテゴリー変数間に関連性はないと仮定\nその仮定のもとで、観測されたクロス集計表の度数が、理論的に予測される度数と大きく異なるかどうかを検定\n予測される度数と観測された度数の差が大きいほど、帰無仮説が棄却される\n\n\\(\\chi^2\\)検定で用いられる統計量は、\\(\\chi^2\\)統計量と呼ばれ、次の式で計算されます。\n\\[\n\\chi^2 = \\sum_{i=1}^n \\sum_{j=1}^m \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}\n\\] ここで、\\(O_{ij}\\)は観測された度数(観測度数)、\\(E_{ij}\\)は理論的に予測される度数(期待度数)です。\\(n\\)と\\(m\\)はカテゴリー変数のカテゴリー数です。 つまり、2つのカテゴリー変数の関連性を調べる場合、\\(\\chi^2\\)統計量は次のように計算されます。\n\\[\n\\begin{aligned}\n\\chi^2 &= \\frac{(O_{11} - E_{11})^2}{E_{11}} + \\frac{(O_{12} - E_{12})^2}{E_{12}} \\\\\n&+ \\frac{(O_{21} - E_{21})^2}{E_{21}} + \\frac{(O_{22} - E_{22})^2}{E_{22}}\n\\end{aligned}\n\\]\nここで、期待度数\\(E\\)をどうやって求めるのか、が問題となります。 期待度数の「期待」の意味は、帰無仮説のもとで期待される度数です。\n\\[\nE_{ij} = \\frac{O_{i\\cdot} \\times O_{\\cdot j}}{O_{\\cdot \\cdot}}\n\\] ここで、\\(O_{i\\cdot}\\)は\\(i\\)行目の合計(横の合計)、\\(O_{\\cdot j}\\)は\\(j\\)列目の合計(縦の合計)、\\(O_{\\cdot \\cdot}\\)は全体の合計です。\n先のメガネの例で計算してみます。 観察度数\\(O\\)は次のようになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n41\n204\n245\n\n\n女\n81\n74\n155\n\n\n合計\n122\n278\n400\n\n\n\n男の行合計\\(O_{男\\cdot}\\)は245、女の行合計\\(O_{女\\cdot}\\)は155、メガネ有りの列合計\\(O_{\\cdot メガネ有}\\)は122、メガネなしの列合計\\(O_{\\cdot メガネ無}\\)は278、全体の合計\\(O_{\\cdot \\cdot}\\)は400となります。 ここから、期待度数は次のように計算されます。\n\\[\n\\begin{aligned}\nE_{男, メガネ} &= \\frac{245 \\times 122}{400} = 74.725 \\\\\nE_{男, メガネ無} &= \\frac{245 \\times 278}{400} = 170.275 \\\\\nE_{女, メガネ} &= \\frac{155 \\times 122}{400} = 47.275 \\\\\nE_{女, メガネ無} &= \\frac{155 \\times 278}{400} = 107.725\n\\end{aligned}\n\\]\nよって期待度数\\(E\\)は次のようになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n74.725\n170.275\n245\n\n\n女\n47.275\n107.725\n155\n\n\n合計\n122\n278\n400\n\n\n\nここから、定義通りに、\\(\\chi^2\\)統計量を計算します。\n\\[\n\\begin{aligned}\n\\chi^2 = \\frac{(41 - 74.725)^2}{74.725} + \\frac{(204 - 170.275)^2}{170.275} + \\frac{(81 - 47.275)^2}{47.275} + \\frac{(74 - 107.725)^2}{107.725} = 7.2\n\\end{aligned}\n\\]\nここで計算した\\(\\chi^2\\)統計量は、自由度1の\\(\\chi^2\\)分布に従うということが知られています。この自由度は、カテゴリー変数のカテゴリー数から1を引いたものです。 ここでは、2カテゴリー同士のクロス集計表なので、自由度は\\((2-1) \\times (2-1) = 1\\)となります。\n自由度1のカイ二乗分布の確率密度関数は次のようになります。\n\nx = c(1:2500) / 250 # 数列を作成\ny1 = dchisq(x,1) # カイ二乗分布の確率密度\n\ndf &lt;- data.frame(x, y1) # データフレームを作成\np &lt;- ggplot(df) + aes(x = x,y = y1) # 作図\np &lt;- p + geom_line(size = 1) # 折れ線グラフ\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1のχ2分布の確率密度\") +  mystyle\nprint(p)\n\n\n\n\n参考までに、自由度が変わると\\(\\chi^2\\)分布の形状は次のようなものになります。\n\nx = c(1:2500) / 250\ny1 = dchisq(x,1) # 自由度1のカイ二乗分布の確率密度\ny3 = dchisq(x,3) # 自由度3のカイ二乗分布の確率密度\ny5 = dchisq(x,5) # 自由度5のカイ二乗分布の確率密度\n\ndf &lt;- data.frame(x, y1, y3, y5) # データフレームを作成\ndf &lt;- df %&gt;%\n  pivot_longer(names_to = \"y\",values_to = \"value\",cols = -x) # データを長く整形\np &lt;- ggplot(df) + aes(x = x,y = value, group = y, color = y) # 作図\np &lt;- p + geom_line(size = 1) # 折れ線グラフ\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1,3,5のχ2分布の確率密度\") +  mystyle\nprint(p)\n\n\n\n\n自由度1の\\(\\chi^2\\)分布における有意水準5%の値を調べるにはqchisq()関数を使います。引数は、pに確率、dfに自由度を指定します。\n\nalpha &lt;- 0.05  # 有意水準（ここでは5%）\ndf &lt;- 1        # 自由度\nqchisq(1 - alpha, df)\n\n[1] 3.841459\n\n\n自由度1のカイ二乗分布における有意水準5%の値は3.84であることが分かりました。 この値を超えると、有意水準5%で帰無仮説を棄却することになります。\nでは先程計算した\\(\\chi^2\\)統計量は、有意水準5%で帰無仮説を棄却するかどうかを調べてみましょう。\n\nchi2 &lt;- 7.2\nqchisq(1 - alpha, df) &lt; chi2\n\n[1] TRUE\n\n\nより、\\(\\chi^2\\)統計量は有意水準5%で帰無仮説を棄却することが分かりました。 ちなみに、自由度1のカイ二乗分布の確率密度関数と\\(\\chi^2\\)統計量の位置を重ねてみると次のようになります。\n\ndf &lt;- data.frame(x,y1)\np &lt;- ggplot(df) + aes(x = x,y = y1)\np &lt;- p + geom_line(size = 1)\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1のχ2分布の確率密度\") +  mystyle\np &lt;- p + geom_vline(xintercept = chi2, linetype = \"dashed\", color = \"red\")\np &lt;- p + annotate(\"text\", x = chi2, y = 0.1, label = \"χ2 statistics\", color = \"red\")\nprint(p)\n\n\n\n\nこのように、\\(\\chi^2\\)統計量は、自由度1のカイ二乗分布のもとで生じる確率は、\n\n1 - pchisq(chi2, df = 1)\n\n[1] 0.007290358\n\n\nとなり、非常に小さな値であることが分かりました。 つまり、2つのカテゴリー変数の間に関係がない、という帰無仮説の下で、観測された度数が発生することはほぼありえない、ということが言えるので、帰無仮説は棄却され、2つのカテゴリー変数には関係があると結論付けられます。\n\nRではchisq.test()関数を使ってχ2検定を行うことができます。 引数は、xに度数表、correctに補正を行うかどうか、pに期待度数を指定します。\n先ほどの男女とメガネの例をここでも使ってみます。 まずmatrix()関数を使ってクロス集計表を行列として作成します。\n\nO &lt;- matrix(c(41, 81, 204, 74), nrow = 2, ncol = 2)\nrow.names(O) &lt;- c(\"男性\", \"女性\")\ncolnames(O) &lt;- c(\"メガネ\", \"メガネなし\")\n\nE &lt;- matrix(c(\n  sum(O[,1])*sum(O[1,])/sum(O), #男眼鏡\n  sum(O[,1])*sum(O[2,])/sum(O), #男眼鏡無\n  sum(O[,2])*sum(O[1,])/sum(O), #女眼鏡\n  sum(O[,2])*sum(O[2,])/sum(O)  #女眼鏡無\n), nrow = 2, ncol = 2)\n\nprint(O)\n\n     メガネ メガネなし\n男性     41        204\n女性     81         74\n\nprint(E)\n\n       [,1]    [,2]\n[1,] 74.725 170.275\n[2,] 47.275 107.725\n\n\nこの観察度数と期待度数から、定義通りに\\(\\chi^2\\)統計量を計算してみます。\n\nchi &lt;-  (O[1,1] - E[1,1])^2 / E[1,1] + #男眼鏡\n        (O[1,2] - E[1,2])^2 / E[1,2] + #男眼鏡無\n        (O[2,1] - E[2,1])^2 / E[2,1] + #女眼鏡\n        (O[2,2] - E[2,2])^2 / E[2,2]   #女眼鏡無\nprint(chi)\n\n[1] 56.51731\n\n\n\\(\\chi^2\\)統計量がとなりました。 この\\(\\chi^2\\)統計量が自由度1の\\(\\chi^2\\)分布にしたがう場合，この統計量が得られる確率は次のようになります。\n\nprop &lt;- 1 - pchisq(chi, df = 1)\nprint(prop)\n\n[1] 5.57332e-14\n\n\nこの確率は0.0000000000000055733となり，ほぼゼロであることが分かりました。 よって、2つのカテゴリー変数は無関係である，という帰無仮説は棄却され、2つのカテゴリー変数には関係があると結論付けられます。\nちなみに，上記のようなめんどくさい処理をしなくても，Rにはchisq.test()という関数が用意されています。 chisq.test()は引数として、xに度数表、correctに補正を行うかどうか、pに期待度数を指定します。 補正は行わないので，correctはFALSEとします。 pはデフォルトで等確率となっているので，今回は省略します。\n\nchisq.test(O, correct = FALSE)\n\n\n    Pearson's Chi-squared test\n\ndata:  O\nX-squared = 56.517, df = 1, p-value = 5.571e-14\n\n\nとなり，先ほどの結果と一致しました。\n各マスに入る度数が少ない場合には、フィッシャーの直接確率検定を使います。\n\nfisher.test(O)\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  O\np-value = 1.204e-13\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n 0.1127341 0.2982245\nsample estimates:\nodds ratio \n 0.1845096 \n\n\n\nカイ二乗分布は、確率変数\\(Z_1, Z_2,\\dots, Z_k\\)が互いに独立であり、それぞれが標準正規分布\\(N(0,1)\\)に従うとき、その二乗和が従う分布を自由度\\(k\\)のカイ二乗分布といいます。\n\\[\n\\chi^2 = Z_1^2 + Z_2^2 + \\dots + Z_k^2\n\\]\n導出は省きますが、自由度\\(k\\)のカイ二乗分布の密度関数は、\n\\[\n\\begin{aligned}\nf(x) =\n\\begin{cases}\n\\frac{1}{2^{k/2} \\Gamma(k/2)} x^{k/2 - 1} \\mathrm{e}^{-x/2} & (x \\geq 0)\\\\\n0 & (x &lt; 0)\n\\end{cases}\n\\end{aligned}\n\\]\nここで、\\(\\Gamma\\)はガンマ関数であり、\n\\[\n\\Gamma \\left (\\frac n2 \\right) = \\int_0^{\\infty} t^{k/2 - 1} \\mathrm{e}^{-t} \\mathrm{d}t\n\\] となります。\n導出は省きますが、カイ二乗分布の期待値は\\(k\\)となり、分散は\\(2k\\)となります。\n\nここでは、2つ以上の量的変数間の関係を調べる方法について学びます。 具体的には、相関係数と散布図について学習します。\n\n2つの量的変数(連続変数)が同時に変化する関係を相関関係(correlation)といいます。 相関関係には、\n\n\n正の相関(positive correlation)\n\n負の相関(negative correlation)\n\n無相関(no correlation)\n\nの3種類があります。\nまずは，2つの量的変数を使って散布図(scatter diagram)を描いて，目で見て相関関係があるかどうかを判断します。 そして，相関係数(correlation coefficient)を計算して，数値的に相関関係があるかどうかを判断します。 相関係数は次のように計算されます。\n\\[\nr = \\frac{\\sum_{i=1}^n (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum_{i=1}^n (x_i - \\bar{x})^2}\\sqrt{\\sum_{i=1}^n (y_i - \\bar{y})^2}}\n\\]\n分子は、\\(x\\)と\\(y\\)の共分散(covariance)で、分母は\\(x\\)の標準偏差と\\(y\\)の標準偏差の積です。 相関係数\\(r\\)は\\(-1\\)から\\(1\\)の値をとります。 \\(r\\)が\\(1\\)に近いほど正の相関が強く、\\(-1\\)に近いほど負の相関が強く、\\(0\\)に近いほど無相関になります。\n相関係数が\\(-1\\)から\\(1\\)の値をとることを証明することは簡単なのですが，それを書くには余白が足りないので，ここには示しません。 コーシー・シュワルツの不等式を使うか，\\(x\\)と\\(y\\)の偏差のベクトルの角度が\\(\\cos\\)であることを示すか，のどちらかで証明できます。\n\n相関係数が同じでも統計的に有意になるか否かは、標本サイズで決まるということを教科書で理解しておきましょう。\n\n母平均\\(0\\)、母標準偏差\\(1\\)の正規分布にしたがう変数\\(X\\)と\\(Y\\)を考えます。 母集団のサイズは10000とします。\n\nN &lt;- 10000 # 母集団のサイズ\nX &lt;- rnorm(N, 0, 1) # 平均0，標準偏差1の正規分布からN個\nY &lt;- rnorm(N, 0, 1) # 平均0，標準偏差1の正規分布からN個\nP &lt;- data.frame(X,Y) # データフレームを作成\nggplot(P) + aes(X,Y) + # グラフの下地\n  geom_point() + # 散布図\n  ggtitle(\"母集団\") + mystyle # タイトルとスタイル\n\n\n\n\nこの母集団から標本サイズ100の標本を100個とりだし、相関係数を100個計算します。\n\nn &lt;- 100 # 標本サイズ\ntrial &lt;- 100 # 試行回数\nsig &lt;- numeric(n) # 空の入れ物\ncor &lt;- numeric(n) # 空の入れ物\nfor(i in 1:trial){ # ループ\n  x_sample &lt;- sample(X, n) # 母集団からn個の標本を取り出す\n  y_sample &lt;- sample(Y, n) # 母集団からn個の標本を取り出す\n  res &lt;- cor.test(x_sample, y_sample) # 相関係数を計算\n  sig[i] &lt;- res$p.value # p値\n  cor[i] &lt;- cor(x_sample, y_sample) # 相関係数\n}\ndf_cor &lt;- data.frame(cor,sig) # p値と相関係数をデータフレームにまとめる\ndf_cor %&gt;% arrange(sig) %&gt;% head() # p値で並び替えて上位5つを表示\n\n\n\n\ncor\nsig\n\n\n\n0.3032027\n0.0021663\n\n\n-0.2678916\n0.0070457\n\n\n-0.2637771\n0.0080077\n\n\n-0.2509923\n0.0117747\n\n\n0.2344974\n0.0188575\n\n\n-0.2343658\n0.0189263\n\n\n\n\n\n\nたとえば、ある標本の散布図はこうなります。\n\nx_sample &lt;- sample(X, n) # 母集団Xからn個の標本を取り出す\ny_sample &lt;- sample(Y, n) # 母集団Yからn個の標本を取り出す\ndata.frame(x_sample, y_sample) %&gt;% # データフレームにまとめる\n    ggplot() + aes(x_sample, y_sample) + # グラフの下地\n    geom_point() + # 散布図\n    geom_smooth(method = \"lm\", se = FALSE) + # 回帰直線\n    ggtitle(\"標本\") + mystyle # タイトルとスタイル\n\n\n\n\n微妙に右肩上がりの関係がありそうですが、ほぼ無相関といえるでしょう。 では、100個の標本から計算した100個の相関係数の大きさを並べてみましょう。 変数を並び替えるには，dplyrのarrange()関数を使います。 デフォルトでは昇順に並び替えられますが，arrange(desc())とすることで降順に並び替えることができます。\n無相関となる母集団からの標本を100個とっているので、標本の相関係数も0に近い値となることが予想されますが、いくつかの標本では\\(-0.3\\)や\\(0.2\\)といった相関があるという結果が得られています。\n以下のコードで、相関係数の値が小さい順に並べています。 ggplotのaes()の中で、reorder()関数を使って、seq_along(cor)をcorの値で並び替えています。 reorder()関数は第一引数の数列を第二引数の数列の値で並び替える関数です。 seq_along(cor)は1,2,3,...,100という数列を作成し，reorder()関数で第一引数の数列を第二引数の数列の値で並び替えています。 geom_barの引数の中のfillは棒グラフの色を指定しているのですが，ここにifelse()関数を使うことで，sigの値が0.05より小さい場合は赤色，そうでない場合は黒色になるようにしています。\n\nggplot(data.frame(df_cor)) +\n    aes(x = reorder(seq_along(cor), cor), y = cor) +\n    geom_bar(stat = \"identity\", fill = ifelse(sig &lt; 0.05, \"red\", \"black\")) +\n    ylab(\"相関係数\") + xlab(\"標本ID\") + ggtitle(\"相関係数の分布\") + mystyle\n\n\n\n\nでは、それらの値が、母集団では相関係数が\\(0\\)であるという帰無仮説が正しいとした場合に、どのくらいの確率で得られるのかを調べてみましょう。\n\nggplot(data.frame(df_cor)) +\n    aes(x = reorder(seq_along(sig), sig), y=sig) + # データの指定\n    geom_bar(stat=\"identity\", fill = ifelse(sig &lt; 0.05, \"red\", \"black\")) + # 棒グラフ\n    ylab(\"p値\") + xlab(\"標本ID\") + ggtitle(\"相関係数のp値の分布\") + mystyle # 軸ラベルとタイトル\n\n\n\n\n相関係数が0である母集団から標本を抜き出して、その標本相関係数の値が0.3となる確率\\(p\\)値は0.002となりました。 もし自分がもっている広告費と売上高のデータから相関係数を計算し、その値が0.3であったなら、母集団では相関係数が\\(0\\)であるという帰無仮説の下では、ほとんど起こりえないことが起こったということになります。 この場合、帰無仮説が間違っていて、対立仮説である広告費と売上高には関係があるという仮説のほうがもっともらしい、ということになります。 逆に、帰無仮説を棄却できなかった場合、広告費と売上高の間に関係は無いと主張することはできません。 帰無仮説が棄却できなかった場合は、関係があるかどうかはわからないということになります。\n\n\n\n\n\n\n\n重要\n\n\n\n相関関係があるからといって、必ずしも因果関係があるとは限らない。\n\n\n広告費と売上高の関係について考えてみましょう。\n\n可能性1：広告費が売上高に影響を与えている、という関係を想定しています。\n\n\n\n\ngraph LR\n    A[広告費] --&gt; B[売上高]\n\n\n\n\n\n\n可能性2：売上高が広告費に影響を与えている、という関係を想定しています。\n\n\n\n\ngraph RL\n    B[売上高] --&gt; A[広告費]\n\n\n\n\n\n\n可能性3 : 可能性1と可能性2が同時に起こっている、という関係を想定しています。\n\n\n\n\ngraph LR\n    A[広告費] --&gt; B[売上高]\n    B[売上高] --&gt; A[広告費]\n\n\n\n\n\n\n広告費と売上高の両方に影響を与える第3の要因が存在する場合、広告費と売上高の間に相関関係があるように見える、という想定です。 ここでは、広告費と売上高の両方に影響を与える第3の要因として、内部資金を想定しています。内部資金が潤沢な会社は、広告宣伝費も増加させることができるし、売上高も増加させることができる、という想定です。\n\n\n\n\ngraph TB\n    A[内部資金] --&gt; B[広告費]\n    A[内部資金] --&gt; C[売上高]\n\n\n\n\n\n\n\n\n\ngraph TB\n    A[内部資金] --&gt; B[広告費]\n    A --&gt; C[売上高]\n    B -.-&gt; C"
  },
  {
    "objectID": "presemi2023_08.html#カテゴリー変数の関連",
    "href": "presemi2023_08.html#カテゴリー変数の関連",
    "title": "変数間の関連性",
    "section": "",
    "text": "カテゴリー変数は、その値がどのカテゴリーに属するかということを表す変数です。 2つのカテゴリー変数の関連性を調べるためにはクロス集計表を作ることが有益です。 例えば、40名のクラスに、男が25名、女が15名います。 また、クラスの中で、メガネをかけている男が4名、メガネを掛けている女が8名いました。 このクロス集計表は次のようなものになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n41\n204\n245\n\n\n女\n81\n74\n155\n\n\n合計\n122\n278\n400\n\n\n\nこの表から、メガネをかけている人の割合は、男性の中で$41 =“0.2009804、女性の中で$81 = $0.52であることから、女子学生の方がメガネをかける傾向にあることが分かりました。\n\nこのクロス集計表から読み取れる関係が、統計的に意味があるのかどうかを調べるためには、\\(\\chi ^2\\)(カイ二乗)検定を行います。 \\(\\chi^2\\)検定は次のステップで実行します。\n\n帰無仮説として、カテゴリー変数間に関連性はないと仮定\nその仮定のもとで、観測されたクロス集計表の度数が、理論的に予測される度数と大きく異なるかどうかを検定\n予測される度数と観測された度数の差が大きいほど、帰無仮説が棄却される\n\n\\(\\chi^2\\)検定で用いられる統計量は、\\(\\chi^2\\)統計量と呼ばれ、次の式で計算されます。\n\\[\n\\chi^2 = \\sum_{i=1}^n \\sum_{j=1}^m \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}\n\\] ここで、\\(O_{ij}\\)は観測された度数(観測度数)、\\(E_{ij}\\)は理論的に予測される度数(期待度数)です。\\(n\\)と\\(m\\)はカテゴリー変数のカテゴリー数です。 つまり、2つのカテゴリー変数の関連性を調べる場合、\\(\\chi^2\\)統計量は次のように計算されます。\n\\[\n\\begin{aligned}\n\\chi^2 &= \\frac{(O_{11} - E_{11})^2}{E_{11}} + \\frac{(O_{12} - E_{12})^2}{E_{12}} \\\\\n&+ \\frac{(O_{21} - E_{21})^2}{E_{21}} + \\frac{(O_{22} - E_{22})^2}{E_{22}}\n\\end{aligned}\n\\]\nここで、期待度数\\(E\\)をどうやって求めるのか、が問題となります。 期待度数の「期待」の意味は、帰無仮説のもとで期待される度数です。\n\\[\nE_{ij} = \\frac{O_{i\\cdot} \\times O_{\\cdot j}}{O_{\\cdot \\cdot}}\n\\] ここで、\\(O_{i\\cdot}\\)は\\(i\\)行目の合計(横の合計)、\\(O_{\\cdot j}\\)は\\(j\\)列目の合計(縦の合計)、\\(O_{\\cdot \\cdot}\\)は全体の合計です。\n先のメガネの例で計算してみます。 観察度数\\(O\\)は次のようになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n41\n204\n245\n\n\n女\n81\n74\n155\n\n\n合計\n122\n278\n400\n\n\n\n男の行合計\\(O_{男\\cdot}\\)は245、女の行合計\\(O_{女\\cdot}\\)は155、メガネ有りの列合計\\(O_{\\cdot メガネ有}\\)は122、メガネなしの列合計\\(O_{\\cdot メガネ無}\\)は278、全体の合計\\(O_{\\cdot \\cdot}\\)は400となります。 ここから、期待度数は次のように計算されます。\n\\[\n\\begin{aligned}\nE_{男, メガネ} &= \\frac{245 \\times 122}{400} = 74.725 \\\\\nE_{男, メガネ無} &= \\frac{245 \\times 278}{400} = 170.275 \\\\\nE_{女, メガネ} &= \\frac{155 \\times 122}{400} = 47.275 \\\\\nE_{女, メガネ無} &= \\frac{155 \\times 278}{400} = 107.725\n\\end{aligned}\n\\]\nよって期待度数\\(E\\)は次のようになります。\n\n\n\nメガネをかけている\nメガネをかけていない\n合計\n\n\n\n男\n74.725\n170.275\n245\n\n\n女\n47.275\n107.725\n155\n\n\n合計\n122\n278\n400\n\n\n\nここから、定義通りに、\\(\\chi^2\\)統計量を計算します。\n\\[\n\\begin{aligned}\n\\chi^2 = \\frac{(41 - 74.725)^2}{74.725} + \\frac{(204 - 170.275)^2}{170.275} + \\frac{(81 - 47.275)^2}{47.275} + \\frac{(74 - 107.725)^2}{107.725} = 7.2\n\\end{aligned}\n\\]\nここで計算した\\(\\chi^2\\)統計量は、自由度1の\\(\\chi^2\\)分布に従うということが知られています。この自由度は、カテゴリー変数のカテゴリー数から1を引いたものです。 ここでは、2カテゴリー同士のクロス集計表なので、自由度は\\((2-1) \\times (2-1) = 1\\)となります。\n自由度1のカイ二乗分布の確率密度関数は次のようになります。\n\nx = c(1:2500) / 250 # 数列を作成\ny1 = dchisq(x,1) # カイ二乗分布の確率密度\n\ndf &lt;- data.frame(x, y1) # データフレームを作成\np &lt;- ggplot(df) + aes(x = x,y = y1) # 作図\np &lt;- p + geom_line(size = 1) # 折れ線グラフ\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1のχ2分布の確率密度\") +  mystyle\nprint(p)\n\n\n\n\n参考までに、自由度が変わると\\(\\chi^2\\)分布の形状は次のようなものになります。\n\nx = c(1:2500) / 250\ny1 = dchisq(x,1) # 自由度1のカイ二乗分布の確率密度\ny3 = dchisq(x,3) # 自由度3のカイ二乗分布の確率密度\ny5 = dchisq(x,5) # 自由度5のカイ二乗分布の確率密度\n\ndf &lt;- data.frame(x, y1, y3, y5) # データフレームを作成\ndf &lt;- df %&gt;%\n  pivot_longer(names_to = \"y\",values_to = \"value\",cols = -x) # データを長く整形\np &lt;- ggplot(df) + aes(x = x,y = value, group = y, color = y) # 作図\np &lt;- p + geom_line(size = 1) # 折れ線グラフ\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1,3,5のχ2分布の確率密度\") +  mystyle\nprint(p)\n\n\n\n\n自由度1の\\(\\chi^2\\)分布における有意水準5%の値を調べるにはqchisq()関数を使います。引数は、pに確率、dfに自由度を指定します。\n\nalpha &lt;- 0.05  # 有意水準（ここでは5%）\ndf &lt;- 1        # 自由度\nqchisq(1 - alpha, df)\n\n[1] 3.841459\n\n\n自由度1のカイ二乗分布における有意水準5%の値は3.84であることが分かりました。 この値を超えると、有意水準5%で帰無仮説を棄却することになります。\nでは先程計算した\\(\\chi^2\\)統計量は、有意水準5%で帰無仮説を棄却するかどうかを調べてみましょう。\n\nchi2 &lt;- 7.2\nqchisq(1 - alpha, df) &lt; chi2\n\n[1] TRUE\n\n\nより、\\(\\chi^2\\)統計量は有意水準5%で帰無仮説を棄却することが分かりました。 ちなみに、自由度1のカイ二乗分布の確率密度関数と\\(\\chi^2\\)統計量の位置を重ねてみると次のようになります。\n\ndf &lt;- data.frame(x,y1)\np &lt;- ggplot(df) + aes(x = x,y = y1)\np &lt;- p + geom_line(size = 1)\np &lt;- p + ylim(c(0,1)) + ylab(\"密度\") + xlab(\"カイ二乗値\") +\n  scale_y_continuous(expand = c(0,0), limits = c(0,1)) +\n  scale_x_continuous(expand = c(0,0), limits = c(-0.1,10))\np &lt;- p + ggtitle(\"自由度1のχ2分布の確率密度\") +  mystyle\np &lt;- p + geom_vline(xintercept = chi2, linetype = \"dashed\", color = \"red\")\np &lt;- p + annotate(\"text\", x = chi2, y = 0.1, label = \"χ2 statistics\", color = \"red\")\nprint(p)\n\n\n\n\nこのように、\\(\\chi^2\\)統計量は、自由度1のカイ二乗分布のもとで生じる確率は、\n\n1 - pchisq(chi2, df = 1)\n\n[1] 0.007290358\n\n\nとなり、非常に小さな値であることが分かりました。 つまり、2つのカテゴリー変数の間に関係がない、という帰無仮説の下で、観測された度数が発生することはほぼありえない、ということが言えるので、帰無仮説は棄却され、2つのカテゴリー変数には関係があると結論付けられます。\n\nRではchisq.test()関数を使ってχ2検定を行うことができます。 引数は、xに度数表、correctに補正を行うかどうか、pに期待度数を指定します。\n先ほどの男女とメガネの例をここでも使ってみます。 まずmatrix()関数を使ってクロス集計表を行列として作成します。\n\nO &lt;- matrix(c(41, 81, 204, 74), nrow = 2, ncol = 2)\nrow.names(O) &lt;- c(\"男性\", \"女性\")\ncolnames(O) &lt;- c(\"メガネ\", \"メガネなし\")\n\nE &lt;- matrix(c(\n  sum(O[,1])*sum(O[1,])/sum(O), #男眼鏡\n  sum(O[,1])*sum(O[2,])/sum(O), #男眼鏡無\n  sum(O[,2])*sum(O[1,])/sum(O), #女眼鏡\n  sum(O[,2])*sum(O[2,])/sum(O)  #女眼鏡無\n), nrow = 2, ncol = 2)\n\nprint(O)\n\n     メガネ メガネなし\n男性     41        204\n女性     81         74\n\nprint(E)\n\n       [,1]    [,2]\n[1,] 74.725 170.275\n[2,] 47.275 107.725\n\n\nこの観察度数と期待度数から、定義通りに\\(\\chi^2\\)統計量を計算してみます。\n\nchi &lt;-  (O[1,1] - E[1,1])^2 / E[1,1] + #男眼鏡\n        (O[1,2] - E[1,2])^2 / E[1,2] + #男眼鏡無\n        (O[2,1] - E[2,1])^2 / E[2,1] + #女眼鏡\n        (O[2,2] - E[2,2])^2 / E[2,2]   #女眼鏡無\nprint(chi)\n\n[1] 56.51731\n\n\n\\(\\chi^2\\)統計量がとなりました。 この\\(\\chi^2\\)統計量が自由度1の\\(\\chi^2\\)分布にしたがう場合，この統計量が得られる確率は次のようになります。\n\nprop &lt;- 1 - pchisq(chi, df = 1)\nprint(prop)\n\n[1] 5.57332e-14\n\n\nこの確率は0.0000000000000055733となり，ほぼゼロであることが分かりました。 よって、2つのカテゴリー変数は無関係である，という帰無仮説は棄却され、2つのカテゴリー変数には関係があると結論付けられます。\nちなみに，上記のようなめんどくさい処理をしなくても，Rにはchisq.test()という関数が用意されています。 chisq.test()は引数として、xに度数表、correctに補正を行うかどうか、pに期待度数を指定します。 補正は行わないので，correctはFALSEとします。 pはデフォルトで等確率となっているので，今回は省略します。\n\nchisq.test(O, correct = FALSE)\n\n\n    Pearson's Chi-squared test\n\ndata:  O\nX-squared = 56.517, df = 1, p-value = 5.571e-14\n\n\nとなり，先ほどの結果と一致しました。\n各マスに入る度数が少ない場合には、フィッシャーの直接確率検定を使います。\n\nfisher.test(O)\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  O\np-value = 1.204e-13\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n 0.1127341 0.2982245\nsample estimates:\nodds ratio \n 0.1845096 \n\n\n\nカイ二乗分布は、確率変数\\(Z_1, Z_2,\\dots, Z_k\\)が互いに独立であり、それぞれが標準正規分布\\(N(0,1)\\)に従うとき、その二乗和が従う分布を自由度\\(k\\)のカイ二乗分布といいます。\n\\[\n\\chi^2 = Z_1^2 + Z_2^2 + \\dots + Z_k^2\n\\]\n導出は省きますが、自由度\\(k\\)のカイ二乗分布の密度関数は、\n\\[\n\\begin{aligned}\nf(x) =\n\\begin{cases}\n\\frac{1}{2^{k/2} \\Gamma(k/2)} x^{k/2 - 1} \\mathrm{e}^{-x/2} & (x \\geq 0)\\\\\n0 & (x &lt; 0)\n\\end{cases}\n\\end{aligned}\n\\]\nここで、\\(\\Gamma\\)はガンマ関数であり、\n\\[\n\\Gamma \\left (\\frac n2 \\right) = \\int_0^{\\infty} t^{k/2 - 1} \\mathrm{e}^{-t} \\mathrm{d}t\n\\] となります。\n導出は省きますが、カイ二乗分布の期待値は\\(k\\)となり、分散は\\(2k\\)となります。"
  },
  {
    "objectID": "presemi2023_08.html#量的変数間の関係",
    "href": "presemi2023_08.html#量的変数間の関係",
    "title": "変数間の関連性",
    "section": "",
    "text": "ここでは、2つ以上の量的変数間の関係を調べる方法について学びます。 具体的には、相関係数と散布図について学習します。\n\n2つの量的変数(連続変数)が同時に変化する関係を相関関係(correlation)といいます。 相関関係には、\n\n\n正の相関(positive correlation)\n\n負の相関(negative correlation)\n\n無相関(no correlation)\n\nの3種類があります。\nまずは，2つの量的変数を使って散布図(scatter diagram)を描いて，目で見て相関関係があるかどうかを判断します。 そして，相関係数(correlation coefficient)を計算して，数値的に相関関係があるかどうかを判断します。 相関係数は次のように計算されます。\n\\[\nr = \\frac{\\sum_{i=1}^n (x_i - \\bar{x})(y_i - \\bar{y})}{\\sqrt{\\sum_{i=1}^n (x_i - \\bar{x})^2}\\sqrt{\\sum_{i=1}^n (y_i - \\bar{y})^2}}\n\\]\n分子は、\\(x\\)と\\(y\\)の共分散(covariance)で、分母は\\(x\\)の標準偏差と\\(y\\)の標準偏差の積です。 相関係数\\(r\\)は\\(-1\\)から\\(1\\)の値をとります。 \\(r\\)が\\(1\\)に近いほど正の相関が強く、\\(-1\\)に近いほど負の相関が強く、\\(0\\)に近いほど無相関になります。\n相関係数が\\(-1\\)から\\(1\\)の値をとることを証明することは簡単なのですが，それを書くには余白が足りないので，ここには示しません。 コーシー・シュワルツの不等式を使うか，\\(x\\)と\\(y\\)の偏差のベクトルの角度が\\(\\cos\\)であることを示すか，のどちらかで証明できます。\n\n相関係数が同じでも統計的に有意になるか否かは、標本サイズで決まるということを教科書で理解しておきましょう。\n\n母平均\\(0\\)、母標準偏差\\(1\\)の正規分布にしたがう変数\\(X\\)と\\(Y\\)を考えます。 母集団のサイズは10000とします。\n\nN &lt;- 10000 # 母集団のサイズ\nX &lt;- rnorm(N, 0, 1) # 平均0，標準偏差1の正規分布からN個\nY &lt;- rnorm(N, 0, 1) # 平均0，標準偏差1の正規分布からN個\nP &lt;- data.frame(X,Y) # データフレームを作成\nggplot(P) + aes(X,Y) + # グラフの下地\n  geom_point() + # 散布図\n  ggtitle(\"母集団\") + mystyle # タイトルとスタイル\n\n\n\n\nこの母集団から標本サイズ100の標本を100個とりだし、相関係数を100個計算します。\n\nn &lt;- 100 # 標本サイズ\ntrial &lt;- 100 # 試行回数\nsig &lt;- numeric(n) # 空の入れ物\ncor &lt;- numeric(n) # 空の入れ物\nfor(i in 1:trial){ # ループ\n  x_sample &lt;- sample(X, n) # 母集団からn個の標本を取り出す\n  y_sample &lt;- sample(Y, n) # 母集団からn個の標本を取り出す\n  res &lt;- cor.test(x_sample, y_sample) # 相関係数を計算\n  sig[i] &lt;- res$p.value # p値\n  cor[i] &lt;- cor(x_sample, y_sample) # 相関係数\n}\ndf_cor &lt;- data.frame(cor,sig) # p値と相関係数をデータフレームにまとめる\ndf_cor %&gt;% arrange(sig) %&gt;% head() # p値で並び替えて上位5つを表示\n\n\n\n\ncor\nsig\n\n\n\n0.3032027\n0.0021663\n\n\n-0.2678916\n0.0070457\n\n\n-0.2637771\n0.0080077\n\n\n-0.2509923\n0.0117747\n\n\n0.2344974\n0.0188575\n\n\n-0.2343658\n0.0189263\n\n\n\n\n\n\nたとえば、ある標本の散布図はこうなります。\n\nx_sample &lt;- sample(X, n) # 母集団Xからn個の標本を取り出す\ny_sample &lt;- sample(Y, n) # 母集団Yからn個の標本を取り出す\ndata.frame(x_sample, y_sample) %&gt;% # データフレームにまとめる\n    ggplot() + aes(x_sample, y_sample) + # グラフの下地\n    geom_point() + # 散布図\n    geom_smooth(method = \"lm\", se = FALSE) + # 回帰直線\n    ggtitle(\"標本\") + mystyle # タイトルとスタイル\n\n\n\n\n微妙に右肩上がりの関係がありそうですが、ほぼ無相関といえるでしょう。 では、100個の標本から計算した100個の相関係数の大きさを並べてみましょう。 変数を並び替えるには，dplyrのarrange()関数を使います。 デフォルトでは昇順に並び替えられますが，arrange(desc())とすることで降順に並び替えることができます。\n無相関となる母集団からの標本を100個とっているので、標本の相関係数も0に近い値となることが予想されますが、いくつかの標本では\\(-0.3\\)や\\(0.2\\)といった相関があるという結果が得られています。\n以下のコードで、相関係数の値が小さい順に並べています。 ggplotのaes()の中で、reorder()関数を使って、seq_along(cor)をcorの値で並び替えています。 reorder()関数は第一引数の数列を第二引数の数列の値で並び替える関数です。 seq_along(cor)は1,2,3,...,100という数列を作成し，reorder()関数で第一引数の数列を第二引数の数列の値で並び替えています。 geom_barの引数の中のfillは棒グラフの色を指定しているのですが，ここにifelse()関数を使うことで，sigの値が0.05より小さい場合は赤色，そうでない場合は黒色になるようにしています。\n\nggplot(data.frame(df_cor)) +\n    aes(x = reorder(seq_along(cor), cor), y = cor) +\n    geom_bar(stat = \"identity\", fill = ifelse(sig &lt; 0.05, \"red\", \"black\")) +\n    ylab(\"相関係数\") + xlab(\"標本ID\") + ggtitle(\"相関係数の分布\") + mystyle\n\n\n\n\nでは、それらの値が、母集団では相関係数が\\(0\\)であるという帰無仮説が正しいとした場合に、どのくらいの確率で得られるのかを調べてみましょう。\n\nggplot(data.frame(df_cor)) +\n    aes(x = reorder(seq_along(sig), sig), y=sig) + # データの指定\n    geom_bar(stat=\"identity\", fill = ifelse(sig &lt; 0.05, \"red\", \"black\")) + # 棒グラフ\n    ylab(\"p値\") + xlab(\"標本ID\") + ggtitle(\"相関係数のp値の分布\") + mystyle # 軸ラベルとタイトル\n\n\n\n\n相関係数が0である母集団から標本を抜き出して、その標本相関係数の値が0.3となる確率\\(p\\)値は0.002となりました。 もし自分がもっている広告費と売上高のデータから相関係数を計算し、その値が0.3であったなら、母集団では相関係数が\\(0\\)であるという帰無仮説の下では、ほとんど起こりえないことが起こったということになります。 この場合、帰無仮説が間違っていて、対立仮説である広告費と売上高には関係があるという仮説のほうがもっともらしい、ということになります。 逆に、帰無仮説を棄却できなかった場合、広告費と売上高の間に関係は無いと主張することはできません。 帰無仮説が棄却できなかった場合は、関係があるかどうかはわからないということになります。\n\n\n\n\n\n\n\n重要\n\n\n\n相関関係があるからといって、必ずしも因果関係があるとは限らない。\n\n\n広告費と売上高の関係について考えてみましょう。\n\n可能性1：広告費が売上高に影響を与えている、という関係を想定しています。\n\n\n\n\ngraph LR\n    A[広告費] --&gt; B[売上高]\n\n\n\n\n\n\n可能性2：売上高が広告費に影響を与えている、という関係を想定しています。\n\n\n\n\ngraph RL\n    B[売上高] --&gt; A[広告費]\n\n\n\n\n\n\n可能性3 : 可能性1と可能性2が同時に起こっている、という関係を想定しています。\n\n\n\n\ngraph LR\n    A[広告費] --&gt; B[売上高]\n    B[売上高] --&gt; A[広告費]\n\n\n\n\n\n\n広告費と売上高の両方に影響を与える第3の要因が存在する場合、広告費と売上高の間に相関関係があるように見える、という想定です。 ここでは、広告費と売上高の両方に影響を与える第3の要因として、内部資金を想定しています。内部資金が潤沢な会社は、広告宣伝費も増加させることができるし、売上高も増加させることができる、という想定です。\n\n\n\n\ngraph TB\n    A[内部資金] --&gt; B[広告費]\n    A[内部資金] --&gt; C[売上高]\n\n\n\n\n\n\n\n\n\ngraph TB\n    A[内部資金] --&gt; B[広告費]\n    A --&gt; C[売上高]\n    B -.-&gt; C"
  },
  {
    "objectID": "presemi2023_09.html#課題",
    "href": "presemi2023_09.html#課題",
    "title": "回帰分析の基礎",
    "section": "",
    "text": "会計データの中から従属変数と独立変数を決めて，回帰モデルを作る。\n会計データを使って，回帰モデルを推定し，回帰係数とt値，p値の値を求め，表にする。\n決定係数を確認し，その回帰モデルの説明力を評価する。\n回帰モデルの推定結果を解釈し，そこから何が主張できるのかを記述する。\n\n\n\n従属変数と独立変数を決めるには，とりあえず散布図を描いてみるとよいでしょう。\n回帰モデルの推定は，基本関数lm()を使います。\n各種統計量を示す表を作るには，modelsummaryパッケージのmodelsummary()関数を使います。\n回帰モデルの推定結果の回帰係数の値とp値を見て，統計的有意性を確認し，その意味を考えてみましょう。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#研究仮説実証会計",
    "href": "prezemi_2023_02_presen.html#研究仮説実証会計",
    "title": "研究、仮説、実証会計",
    "section": "研究、仮説、実証会計",
    "text": "研究、仮説、実証会計\n第2回講義の到達目標は、\n\n実証研究とはどんなものかを理解し、他人に説明できる。\n実証研究で扱える研究課題を理解し、研究課題を適切に設定できる。\n良い研究課題が持つべき特性を理解し、その特徴を備えた研究課題を設定できる。\n\n第1回講義の到達度検証のための課題は、以下の通りです。\n\n定量データを用いて行う実証研究の利点と欠点を説明する。\n自分が興味をもてそうな研究課題を設定する。\n上で立てた研究課題がよい研究課題かどうかを5つの観点から検討し、評価する。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#第2回講義の目次は",
    "href": "prezemi_2023_02_presen.html#第2回講義の目次は",
    "title": "研究、仮説、実証会計",
    "section": "第2回講義の目次は、",
    "text": "第2回講義の目次は、\n\nセクション 3 会計を計量する？\nセクション 3.1 実証会計学とは？\nセクション 3.2 他の経営学領域\nセクション 3.4 学術雑誌\nセクション 7 今回の課題"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#sec-01",
    "href": "prezemi_2023_02_presen.html#sec-01",
    "title": "研究、仮説、実証会計",
    "section": "実証研究・実証会計",
    "text": "実証研究・実証会計\n\nここでは、教科書「Rによる計量政治学」の内容を「会計学」に置き換えて考えてみます。\n「計量会計学」という言葉は一般的ではなく、会計学の世界では「実証的会計研究」とか「実証会計学」いう言葉が使われています。\n社会科学において、社会で生じる様々な現象（たとえば、経営現象や会計実務）を、数値化して分析することを計量化(quantification)と呼びます。\n計量化されたデータを用いて、社会現象を説明しようとするアプローチを計量分析(quantitative analysis)と呼びます。\n\n計量分析の手法は、統計学や計量経済学などの数理的な手法を用いて、社会現象を説明しようとするものです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#研究テーマの選び方",
    "href": "prezemi_2023_02_presen.html#研究テーマの選び方",
    "title": "研究、仮説、実証会計",
    "section": "研究テーマの選び方",
    "text": "研究テーマの選び方\nプレゼミの達成目標は、経営事象に関する問題を発見し、その問題がなぜ生じているのか、どうすれば解決できるのかを考えることができるようになることです。 そこで、まずは研究課題の種類について学びます。 問いの立て方には大きく分けて3つのタイプがあります。\n\n実証的問題\n規範的問題\n分析的問題\n\nこの3種類の問題について説明します。 「よい研究テーマ」の探し方を理解したらよい研究テーマが見付かるわけではないで、自分が面白い！と思えるような、興味引かれるテーマを見つけることが重要です。\nリサーチ・クエスチョンの種類\nリサーチ・クエスチョン(research question)とは、研究対象となる会計に関する、抽象度の高い問いのことです。 リサーチ・クエスチョンが決まれば、その問いに答えるために、何をするべきなのかが決まるため、非常に重要な要素となります。 たとえば、\n\n会計情報の質が高いと、投資家の意思決定がよりよいものになるのか？\n大きな監査法人は、財務報告の質を高めているのか？\nCSR活動に積極的な会社は、納税も積極的か？\nステルス値上げと値上げに購買意欲に与える影響は同じか？\n女性管理職を増加させることは，企業業績に良い影響を与えるのか？\n\nこれらのリサーチ・クエスチョンを3つに分類してみましょう。\n実証的問題\n実証的問題では、事実を調べることが目的となります。 たとえば、「のれんの非償却はM&Aを促進させるのか」という問いに対しては、のれんの非償却を行っている企業と、行っていない企業のM&Aの実施率を比較することで、その問いに答えることができます。\n実証的問題を扱う会計研究でも、定量的な研究だけでなく、インタビューによる定性的な研究もあります。参与観察研究はあまり見ません。 事実に注目する研究となるため、主観的な要素はできるだけ排して、観察されたデータや発言といった客観的なデータを用いることが多いです。 このプレゼミでは、主として経営学分野における実証的問題を扱います。\n規範的問題\nいわゆる「べき論」を扱う問題で、日本の会計研究では今でも盛んに行われている研究です。 たとえば、「のれんは償却すべきか」という問いに対しては、のれんの償却を行うことで、どのようなメリットがあるのか、どのようなデメリットがあるのかを考え、そのメリットとデメリットを比較することで、その問いに答えることができます。 ただ、この場合でも、「誰にとっての」メリットを重視するべきなのか、という問題がでますが、そこは研究者の価値判断によって決まることになり、研究者の主観が大きく反映されることになります。\nしたがって教科書でも、規範的問題を実証的問題に変換する方法を考え、規範的問題を直接あつかう研究課題は取りあげません。\n分析的問題\n分析的問題は、まだ起こっていない、観察されていない現象を扱います。 そもそも起こっていない現象なのでデータも取りようがありません。 そこで、分析的問題では、モデル(model)を用いて、現象の起こりうるメカニズムを考えます。\n基本的には、関心のある問題を抽象化して数式で表現し、前提条件と仮定を設定し、その問題を解くことで得られた結果を解釈することで、その問いに答えることができます。 たとえば、税務会計や監査といった情報が入手困難な領域において、ゲーム理論や契約理論、最適化理論を用いた分析が行われることが多いような気がしますが、そこまで詳しくないでし、難しいので、ここでは扱いません。\nしたがって、このプレゼミでは、各自がたてた実証的問題について考えていきます。\n「よい研究テーマ」の見つけ方\n政治学のMonroe (2000, pp.8–10)によると、\n\n明快さ\n検証可能性\n理論的重要性\n実用性\n独創性\n\nがよい研究テーマに必要な要素らしいです。\n詳しくは教科書を読むとして、会計学や経営学でもほぼ同じですが、卒業論文においては、理論的重要性と独創性はあればよいですが、必ずしも必要ではありません。 なぜなら、理論的重要性を理解し、論文で示すことは、研究で用いる推論の背後にある理論や仕組みを完全に理解する必要がありますし、独創性を主張するためには、膨大な先行研究を読み、自分の主張が他の人とどう違うのか、どの点が新しいのかを明らかにする必要があり、とても時間がかかるからです。\nしたがって、明快な推論で導き出された仮説を、客観的なデータを用いて、適切な手法で分析し、その結果を解釈し、経営実務にどういう影響があるのか、を主張できれば、卒業論文としては申し分ないレベルです。\nとりわけ、このプレゼミでは、検証可能性を重視します。 そのレポート・論文を読めば、他の人でも同じ分析を行うことが可能であり、誰でも追試が行えることが重要です。 データの集め方や変数の作り方、データ分析のプロセスが明確にしめされており、それを自分でもすぐに再現することが重要です。そのためにRは非常に有効なツールとなります。\n規範的問題から実証的問題への変換\n「べき論」は研究者の価値判断が大きく反映され、その研究者が主張する価値は主観的なものになるため検証ができません。 そこで規範的問題を実証的問題になるように問い方を変える方法を考えます。\n\n1つめの方法は、参照枠組みを変える方法です。 「会計は投資意思決定に役立つべきである」という問いは規範的問題で、それは「会計は株主のためのものである」という価値判断が含まれています。このままでは検証できないので、「会計は投資意思決定に役に立っているのか？」に変えることで、検証可能な問いになります。\n\n2つめの方法は、規範的問題の前提条件に注目する方法です。 「会計は投資意思決定の役立つべきである」という規範的記述の背後には、\n\n会計は投資家のためのものである\n投資家が会計(情報)を使えば儲かる。\n投資家の投資が活発になれば、経済は活性化する。\n\nという前提条件があると考えられます。 これを実証的な問題にするには、\n\n会計(情報)の主な利用者は投資家なのか？\n会計情報を使えば儲かるのか？\n投資の役に立つ会計情報を提供することで、経済は活性化するのか？\n\nのように、規範的問題の背後にある前提条件を検証可能な問いに変えることで、実証的な問題になります。\nパズルを探す\nパズル(puzzle)とは、ある現象を説明するために、既存の理論では説明できない現象のことです。 たとえば、配当パズル(dividend puzzle)とは、配当がなぜ存在するのか、という問題です。 配当は、株主に対する利益配分の一つであり、株主にとっては配当が高いほうがよいはずです。しかし、実際には、配当が高いほど株価が低くなるという現象が観察されます。 このような現象を説明するために、既存の理論では説明できないので、パズルと呼ばれ、研究題材としては非常に魅力的です。\n研究論文の構成\n実証研究の論文構成は、ほぼ以下のような構成となっています。\n\nイントロダクション\n先行研究\n理論\n仮説\n対抗仮説\n作業化\n証拠\n結論\n\nこのうち、1-4は、研究の背景を説明する部分であり、5-7は、研究の主要な部分であり、8は、研究のまとめです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#理論と仮説",
    "href": "prezemi_2023_02_presen.html#理論と仮説",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "理論と仮説",
    "text": "理論と仮説\n\nリサーチ・クエスチョンを設定することができる。\n作業仮説を作る。\n作業仮説を検証するためのデータを集めることができる。\n代理変数の妥当性を検討することができる。\n\nです。\n第2回講義の到達度検証のための課題は、以下の通りです。\n\n構成概念を定義し、因果関係を示す理論を説明できる。\n作業仮説を作り、構成概念を検証するための代理変数を構築する。\n構成概念の代理変数として複数の候補を挙げる。\nKinny’s Bosを作成する。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#仮説と仮説検証",
    "href": "prezemi_2023_02_presen.html#仮説と仮説検証",
    "title": "研究、仮説、実証会計",
    "section": "仮説と仮説検証",
    "text": "仮説と仮説検証\n仮説とは\n科学的には，「理論」と「仮説」とは同じものです。 反証されずに生き残った理論を仮説(hypothesis)と呼びます。 たとえば、ニュートンの万有引力の法則は，現在でも仮説として使われています。\nこの「仮説」をより具体的にしたものを「作業仮説」(working hypothesis)と呼びます。\n\n作業仮説とは，自分が使える特定の変数についての記述\n「もしこの仮説が正しければ・・・のはず」\n理論より作業仮説の方が具体的である\n仮説から引き出される観察可能な予測について述べる\n\n作業仮説\nたとえば「監査の質が高いほど，財務報告の質が高くなる」という理論から，作業仮説を引き出してみましょう。 この文章の中で，\n\n監査の質\n高い\n財務報告の質\n高い\n\nという4つの用語を，測定可能な尺度にして，その高低を定義する必要があります。\nたとえば，監査の質を「監査報酬額」で測定して，財務報告の質を利益操作の程度で測定するとします。利益操作の程度を異常アクルーアルで代理すると\n\n監査報酬が、同業他社平均より高い企業ほど，異常アクルーアルの絶対値が小さい\n\nという作業仮説を立てることができます。\n理論から作業仮説を導出することは、構成概念から代理変数を導出すること深く関連しています。 この作業のコツをつかむには、良質な論文を読んで、自分でまとめてみて、他人に聞いてもらい、議論することが重要です。 そうして、自分の理論を作り上げていくのです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#sec-05",
    "href": "prezemi_2023_02_presen.html#sec-05",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "議論すること",
    "text": "議論すること\n\n経営学を学んできた中で、疑問に思った現象や経営理論を挙げてください。\nそれを作業仮説に落とし込んでください。\n作業仮説を顕彰するために、どんなデータをどのように分析すれば、知りたいことを知ることができるか、考えてみてください。\nどんな結果がでれば、自分の作業仮説が正しいと言えるか、考えてみてください。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#第2回講義の到達目標",
    "href": "prezemi_2023_02_presen.html#第2回講義の到達目標",
    "title": "研究、仮説、実証会計",
    "section": "第2回講義の到達目標",
    "text": "第2回講義の到達目標\n\n実証研究とはどんなものかを理解し、他人に説明できる。\n実証研究で扱える研究課題を理解し、研究課題を適切に設定できる。\n良い研究課題が持つべき特性を理解し、その特徴を備えた研究課題を設定できる。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#第2回講義の目次",
    "href": "prezemi_2023_02_presen.html#第2回講義の目次",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "第2回講義の目次",
    "text": "第2回講義の目次\n\nセクション 2 実証研究・実証会計\nセクション 3 研究テーマの選び方\nセクション 4 理論\nセクション 5 仮説"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#実証会計",
    "href": "prezemi_2023_02_presen.html#実証会計",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "実証会計",
    "text": "実証会計\n会計とは\n\n経営活動から生み出される価値の変化を貨幣的に計測・記録し、その情報を整理し、集約することで、\n最終成果物として報告書(B/SとかP/L)を作成し、\nそれを利害関係者に報告することで、\n投資意思決定に役立つ情報提供や、利害関係者間の利害調整を目的とした一連のプロセス\n\nを意味します。\n\nこの会計という経営実務を研究対象とした学問を会計学(accounting)といいます。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#sec-02",
    "href": "prezemi_2023_02_presen.html#sec-02",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計学の領域",
    "text": "会計学の領域\n\n会計の歴史を研究対象とする会計史 (accounting history)\n会計の計算構造を研究対象とする計算構造研究 (accounting structure)\n簿記そのものを研究対象とする簿記論 (bookkeeping)\n会計の実務を説明し予想するための理論の構築を目指す事実解明的な会計研究 (positive accounting research)\n\nなどがある。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#事実解明的な会計研究",
    "href": "prezemi_2023_02_presen.html#事実解明的な会計研究",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "事実解明的な会計研究",
    "text": "事実解明的な会計研究\n\n公表された情報を計量分析の手法を用いて分析する会計研究を、実証会計学 (archival based empirical accounting)とか、単に実証会計と呼びます。\n実証会計以外の事実解明的な研究には、実験により生成されたデータを分析する実験会計研究 (experimental accounting)、\n数理モデルを用いて行われる分析会計研究 (analytical accounting)\n\nなどがあります。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#研究の場である学術雑誌",
    "href": "prezemi_2023_02_presen.html#研究の場である学術雑誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "研究の場である学術雑誌",
    "text": "研究の場である学術雑誌\n会計TOP5\n\nThe Accounting Review (TAR)\nJournal of Accounting and Economics (JAE)\nJournal of Accounting Research (JAR)\nReview of Accounting Studies (RAST)\nContemporary Accounting Research (CAR)\n\n五大誌に掲載されている論文の大部分が、会計情報を用いた計量分析"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#研究の場である学術雑誌-1",
    "href": "prezemi_2023_02_presen.html#研究の場である学術雑誌-1",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "研究の場である学術雑誌",
    "text": "研究の場である学術雑誌\n北米以外で発行されている学術雑誌には、定性的研究も多い。\n\nAccounting, Organisation snd Society (AOS)\nEuropean Accounting Research (EAR)\nBritish Accounting Research (BAR)\nCritical Accounting Research (CAR)\n\nしかし松浦は社会学について語れる知識がないので沈黙する"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#実証会計研究の始まり",
    "href": "prezemi_2023_02_presen.html#実証会計研究の始まり",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "実証会計研究の始まり",
    "text": "実証会計研究の始まり\n\n会計研究の世界では、1960年頃までは規範的研究(normative research)という「〇〇するべき」という主張をする研究が主流だった。 \n1968年にJournal of Accounting Researchに掲載されたBall and Brown (1968) An Empirical Evaluation of Accounting Income Numbers\n以後、実際に会計情報は意思決定者の役に立っているのかをデータを使って確かめる研究、いわゆる実証研究が主流となった。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#実証研究に必要な知識",
    "href": "prezemi_2023_02_presen.html#実証研究に必要な知識",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "実証研究に必要な知識",
    "text": "実証研究に必要な知識\n実証的会計研究を行うために必要な知識・技術\n\n会計基準・会計理論\nミクロ経済学（ゲーム理論、契約理論、情報の経済学）\n計量経済学\nファイナンス理論（コーポレート・ファイナンス）\nプログラミング"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#sec-03",
    "href": "prezemi_2023_02_presen.html#sec-03",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "他の経営学領域",
    "text": "他の経営学領域\n誤解を恐れずに、会計学者の松浦が他の経営学領域についてざっくりと説明\n立命館大学経営学部経営学科には、\n\n会計・ファイナンスコース\n戦略コース\n組織コース\nマーケティングコース\n\nの4コースがあります。これをもとに、経営学領域をざっくりと分類"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#会計ファイナンスコース",
    "href": "prezemi_2023_02_presen.html#会計ファイナンスコース",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計・ファイナンスコース",
    "text": "会計・ファイナンスコース\nファイナンスを大きく2つに分類すると，\n\nコーポレート・ファイナンス\n投資論\n\nに分けられると思います(たぶん)。\n\nコーポレート・ファイナンスは、企業が資金を調達する際の意思決定を研究対象\n(証券)投資論は投資家が資産を選択する際の意思決定を研究対象"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#会計ファイナンスコース-1",
    "href": "prezemi_2023_02_presen.html#会計ファイナンスコース-1",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計・ファイナンスコース",
    "text": "会計・ファイナンスコース\nファイナンスを大きく2つに分類すると，\n\nコーポレート・ファイナンス\n投資論\n\nに分けられると思います(たぶん)。\n\nコーポレート・ファイナンスは、企業が資金を調達する際の意思決定を研究対象\n(証券)投資論は投資家が資産を選択する際の意思決定を研究対象"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#戦略コース",
    "href": "prezemi_2023_02_presen.html#戦略コース",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "戦略コース",
    "text": "戦略コース\n戦略コースは、企業や経営者が選択できる行動のメニューについて考えることを目的\n\n戦略論という研究領域はあるのでしょうが，その分野の先生が主戦場とする学会や学術雑誌が分からないので，うまく説明できません。\n産業組織論やゲーム理論、"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#本日の目標",
    "href": "prezemi_2023_02_presen.html#本日の目標",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "本日の目標",
    "text": "本日の目標\n\n実証研究とはどんなものかを理解し、他人に説明できる。\n実証研究で扱える研究課題を理解し、研究課題を適切に設定できる。\n良い研究課題が持つべき特性を理解し、その特徴を備えた研究課題を設定できる。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#本日の到達度懸賞課題",
    "href": "prezemi_2023_02_presen.html#本日の到達度懸賞課題",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "本日の到達度懸賞課題",
    "text": "本日の到達度懸賞課題\n第2回講義の到達度検証のための課題は、以下の通りです。\n\n定量データを用いて行う実証研究の利点と欠点を説明する。\n自分が興味をもてそうな研究課題を設定する。\n上で立てた研究課題がよい研究課題かどうかを5つの観点から検討し、評価する。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#実証研究とは",
    "href": "prezemi_2023_02_presen.html#実証研究とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "実証研究とは？",
    "text": "実証研究とは？\n教科書「Rによる計量政治学」の内容を「会計学」に置き換えてみる。\n\n「計量会計学」という言葉は一般的ではなく、会計学の世界では「実証的会計研究」とか「実証会計学」\n社会科学で、社会で生じる現象（経営現象や会計実務とか）を数値化して分析することを計量化(quantification)\n計量化されたデータを用いて社会現象を説明しようとするアプローチを計量分析(quantitative analysis)\n\n計量分析の手法は、統計学や計量経済学などの数理的な手法を用いて社会現象を説明"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#組織コース",
    "href": "prezemi_2023_02_presen.html#組織コース",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "組織コース",
    "text": "組織コース\n組織コースは、組織を研究対象とするコースです。大きく\n\nマクロ組織論\nミクロ組織論\n\nに分けられます。 マクロ組織論では、組織の構造や組織の環境との関係を研究対象とする一方で、ミクロ組織論では、組織内の個人の行動や組織内の人間関係を研究対象とします。とりわけミクロ組織論では、組織内の人に焦点を当てた研究を行うため、アンケート調査や実験による検証が多く、心理学に基づく定量的な研究も多く行われています。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#マーケティングコース",
    "href": "prezemi_2023_02_presen.html#マーケティングコース",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "マーケティング・コース",
    "text": "マーケティング・コース\nマーケティングは，顧客目線か企業目線かで2つに分けられます。\n\nマーケティング\n消費者行動論\n\n前者が企業が顧客に提供する商品やサービスについて研究する一方で，後者はその商品やサービスを消費する顧客に焦点を当てた研究を行います。 とりわけ，「消費」という現象を研究対象にする学問は多く，マーケティング以外にも，心理学，経済学，統計学といった分野で消費行動を研究しています。 心理学における消費行動論とマーケティングにおける消費行動論は非常に近い関係にあります。 また経済学とりわけ実証産業組織論における消費行動論は，消費をモデル化し，データをシミュレーション等で解析することで，消費行動のメカニズムを解明しようとするものです。 統計学における消費行動研究は「マーケティング・サイエンス」とも呼ばれており，高度な統計学やシミュレーションを用いて消費行動を分析し，消費のパターンを解明しようとするものです。\n–&gt;"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#sec-04",
    "href": "prezemi_2023_02_presen.html#sec-04",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "学術雑誌",
    "text": "学術雑誌\n学術研究が掲載された研究雑誌(ジャーナル)のうち、査読(referree)制度を採用しているものを査読付き雑誌(referreed journal)という。\n\n匿名の査読者が審査を行い，投稿論文を雑誌に掲載するかどうかを審査 \n査読を突破した高品質な論文だけが雑誌に掲載されるが、査読の時間が結構長く，投稿してから雑誌に掲載されるまで1年〜3年程度かかることもざら"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#問題をたてる",
    "href": "prezemi_2023_02_presen.html#問題をたてる",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "問題をたてる",
    "text": "問題をたてる\nプレゼミの達成目標は、経営事象に関する問題を発見し、その問題がなぜ生じているのか、どうすれば解決できるのかを考えることができるようになることです。 そこで、まずは研究課題の種類について学びます。 問いの立て方には大きく分けて3つのタイプがあります。\n\n実証的問題\n規範的問題\n分析的問題\n\nこの3種類の問題について説明します。 「よい研究テーマ」の探し方を理解したらよい研究テーマが見付かるわけではないで、自分が面白い！と思えるような、興味引かれるテーマを見つけることが重要です。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#リサーチクエスチョンの種類",
    "href": "prezemi_2023_02_presen.html#リサーチクエスチョンの種類",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "リサーチ・クエスチョンの種類",
    "text": "リサーチ・クエスチョンの種類\n\nリサーチ・クエスチョン(research question: RQ)とは、研究対象となる会計に関する、抽象度の高い問いのこと\nRQが決まれば、その問いに答えるために、何をするべきなのかが決まる。たとえば、\n\n大きな監査法人は、財務報告の質を高めているのか？ \nステルス値上げと値上げに購買意欲に与える影響は同じか？\n女性管理職を増加させるべきか？"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#実証的問題",
    "href": "prezemi_2023_02_presen.html#実証的問題",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "実証的問題",
    "text": "実証的問題\n\n実証的問題では、事実を調べることが目的\n\nたとえば、「のれんの非償却はM&Aを促進させるのか」という問いに対して、何をすれば答えが見つかる？ \n\n実証的問題を扱う会計研究でも、定量的な研究だけでなく、インタビューによる定性的な研究もあります。参与観察研究はあまり見ない\n事実に注目する研究となるため、主観的な要素はできるだけ排して、観察されたデータや発言といった客観的なデータを用いることが多い"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#規範的問題",
    "href": "prezemi_2023_02_presen.html#規範的問題",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "規範的問題",
    "text": "規範的問題\n\nいわゆる「べき論」を扱う問題で、日本の会計研究では多く行われている研究\n\nたとえば、「のれんは償却すべきか」という問いに対しては、ある前提条件の下で、のれんの償却を行うことで、社会厚生が増加する、といった主張\n\n「誰にとっての」メリットを重視するべきなのか、という問題がでますが、そこは研究者の価値判断によって決まる\nしたがってプレゼミでも、規範的問題を実証的問題に変換する方法を考え、規範的問題を直接扱わない。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#分析的問題",
    "href": "prezemi_2023_02_presen.html#分析的問題",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "分析的問題",
    "text": "分析的問題\n\n分析的問題は、まだ起こっていない、観察されていない現象を扱うことができる。 \n分析的問題では、モデル(model)を用いて、現象の起こりうるメカニズムをみる。\n基本的には、関心のある問題を抽象化して数式で表現し、前提条件と仮定を設定し、その問題を解くことで得られた結果を解釈する\n\n正直、松浦の手に負えないので、プレゼミでは扱わない。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#よい研究テーマの見つけ方",
    "href": "prezemi_2023_02_presen.html#よい研究テーマの見つけ方",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "「よい研究テーマ」の見つけ方",
    "text": "「よい研究テーマ」の見つけ方\n政治学のMonroe (2000, pp.8–10)によると、\n\n明快さ (分かりやすいテーマが良い)\n検証可能性 (誰でも同じ分析ができるようにする)\n理論的重要性 (難しい)\n実用性 (あればよいけど、気にしない)\n独創性 (本当は大事だけど今回は無視)\n\nがよい研究テーマに必要な要素らしいです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#規範的問題から実証的問題への変換",
    "href": "prezemi_2023_02_presen.html#規範的問題から実証的問題への変換",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "規範的問題から実証的問題への変換",
    "text": "規範的問題から実証的問題への変換\n\n「べき論」は研究者の価値判断が大きく反映され、その主張する価値は主観的で検証不可\n規範的問題を実証的問題になるように問い方を変える\n\n\n\n参照枠組みを変える方法\n\n\n「会計は投資意思決定に役立つべきである」という問いは「会計は株主のためのものである」という価値判断が含まれている。\n「会計は投資意思決定に役に立っているのか？」とすれば検証可能"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#規範的問題-1",
    "href": "prezemi_2023_02_presen.html#規範的問題-1",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "規範的問題",
    "text": "規範的問題\n\n規範的問題の前提条件に注目する方法\n\n「会計は投資意思決定の役立つべきである」という規範的記述の背後には、\n\n会計は投資家のためのものである\n投資家が会計(情報)を使えば儲かる。\n投資家の投資が活発になれば、経済は活性化する。\n\nという前提条件があると考えられます。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#パズルを探す",
    "href": "prezemi_2023_02_presen.html#パズルを探す",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "パズルを探す",
    "text": "パズルを探す\n\nパズル(puzzle)とは、ある現象を説明するために、既存の理論では説明できない現象のこと\n\nたとえば配当パズル(dividend puzzle)とは、配当がなぜ存在するのか、という問題 配当は、株主に対する利益配分の一つであり、株主にとっては配当が高いほうがよいはずです。 しかし、実際には、配当が高いほど株価が低くなるという現象が観察されます。\n\nパズルは既存の理論では説明できないので、研究題材としては非常に魅力的\nだが簡単には見付からない。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#研究論文の構成",
    "href": "prezemi_2023_02_presen.html#研究論文の構成",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "研究論文の構成",
    "text": "研究論文の構成\n実証研究の論文構成は、ほぼ以下のような構成となっています。\n\n\n\nイントロダクション\n先行研究\n理論\n仮説\n\n\n\n対抗仮説\n作業化\n証拠\n結論\n\n\n\nこのうち、1〜4は、研究の背景を説明する部分であり、5〜7は、研究の主要な部分であり、8は、研究のまとめです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#良い理論とは",
    "href": "prezemi_2023_02_presen.html#良い理論とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "良い理論とは？",
    "text": "良い理論とは？\n良い理論・推論が持つべき性質は次のようなものです。\n\n反証可能であること\n観察可能な予測が多いこと\n具体的であること\nシンプルであること\n\n以下ではそれぞれについて簡単に説明します。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#反証可能であること",
    "href": "prezemi_2023_02_presen.html#反証可能であること",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "反証可能であること",
    "text": "反証可能であること\n「反証可能性」(falsifiability)という科学で最も重要な特性の1つを確保する必要があります 1 。\nつまり，論文を読んだ人ならだれでも，「この理論は間違っている」ということを示すことができるようにする必要があります。 反証可能性がない主張は占いと変わりません。\n「反証不可能な理論は科学ではない」といったのは，科学哲学者カール・ポパー(Karl Popper)です。 Popper (1959) The Logic of Scientific Discovery, London: Hutchinson.（邦訳：ポパー（1971）『科学的発見の論理 上下巻』，恒星社厚生閣）"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#観察可能な予測が多いこと",
    "href": "prezemi_2023_02_presen.html#観察可能な予測が多いこと",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "観察可能な予測が多いこと",
    "text": "観察可能な予測が多いこと\n結果として発生する現象が観察可能である予測を行う必要があることを示しています。 当然ですが，自分の主張を証拠を用いて説得力を高めようとしているのですから，その予測が当たっているのかどうかを確認できる必要があります。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#具体的であること",
    "href": "prezemi_2023_02_presen.html#具体的であること",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "具体的であること",
    "text": "具体的であること\n「業績が悪くなる」のようにあいまいな表現ではなく，「昨年度と比べて利益が減少する」とか「累積リターンがマイナスになる」といったように，具体的な予測を行う必要があります。「リスク」とか「パフォーマンス」とか「悪くなる」とか「加速する」といったあいまいな言葉は常に定義してから使うようにしましょう。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#シンプルであること",
    "href": "prezemi_2023_02_presen.html#シンプルであること",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "シンプルであること",
    "text": "シンプルであること\n理論はシンプルでなければなりません。 理解しやすく，使える範囲が広く，反証可能性が高い理論は，シンプルになっていきます。\n基本的には，先行研究で使われている理論を援用することが多い経営学・会計学では，先行研究で用いられた理論や推論に無駄がないかどうか，よりシンプルにいえないかどうか，を考えることが多いです。\n理論をシンプルにするには，前提となる条件を少なくする必要があります。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#仮説とは",
    "href": "prezemi_2023_02_presen.html#仮説とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "仮説とは",
    "text": "仮説とは\n科学的には，「理論」と「仮説」とは同じものです。 反証されずに生き残った理論を仮説(hypothesis)と呼びます。 \nこの「仮説」をより具体的にしたものを「作業仮説」(working hypothesis)\n\n作業仮説とは，自分が使える特定の変数についての記述\n「もしこの仮説が正しければ・・・のはず」\n理論より作業仮説の方が具体的である\n仮説から引き出される観察可能な予測について述べる"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#作業仮説",
    "href": "prezemi_2023_02_presen.html#作業仮説",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "作業仮説",
    "text": "作業仮説\nたとえば「監査の質が高いほど，財務報告の質が高くなる」という理論から，作業仮説を引き出してみましょう。 この文章の中で，\n\n監査の質\n高い\n財務報告の質\n高い\n\nという4つの用語を，測定可能な尺度にして，その高低を定義する必要があります。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#作業仮説の例監査",
    "href": "prezemi_2023_02_presen.html#作業仮説の例監査",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "作業仮説の例：監査",
    "text": "作業仮説の例：監査\n\nたとえば，監査の質を「監査報酬額」で測定して，財務報告の質を利益操作の程度で測定\n利益操作の程度を異常アクルーアルで代理\n\n作業仮説：監査報酬が同業他社平均より高い企業ほど，異常アクルーアルの絶対値が小さい"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#会計研究の査読誌",
    "href": "prezemi_2023_02_presen.html#会計研究の査読誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計研究の査読誌",
    "text": "会計研究の査読誌\n\nThe Accounting Review (TAR)\nJournal of Accounting and Economics (JAE)\nJournal of Accounting Research (JAR)\nReview of Accounting Studies (RAST)\nContemporary Accounting Research (CAR)"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#会計研究の査読誌2",
    "href": "prezemi_2023_02_presen.html#会計研究の査読誌2",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計研究の査読誌2",
    "text": "会計研究の査読誌2\n\nEuropean Accounting Review (EAR)\nJournal of Accounting and Public Policy (JAPP) \nAccounting Horizons (AH) \nJournal of American Taxation Association (JATA)\nJournal of Management Accounting Research (JMAR)\nManagement Accounting Research (MAR)"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#ファイナンス研究の査読誌",
    "href": "prezemi_2023_02_presen.html#ファイナンス研究の査読誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "ファイナンス研究の査読誌",
    "text": "ファイナンス研究の査読誌\n\nJournal of Finance (JF)\nJournal of Financial Economics (JFE)\nReview of Financial Studies (RFS)\nJournal of Corporate Finance (JCF)\nJournal of Banking and Finance (JBF)"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#マーケティング研究の査読誌",
    "href": "prezemi_2023_02_presen.html#マーケティング研究の査読誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "マーケティング研究の査読誌",
    "text": "マーケティング研究の査読誌\n\nJournal of Marketing (JM)\nJournal of Marketing Research (JMR)\nJournal of Consumer Research (JCR)\nMarketing Science (MS)"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#組織戦略研究の査読誌",
    "href": "prezemi_2023_02_presen.html#組織戦略研究の査読誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "組織・戦略研究の査読誌",
    "text": "組織・戦略研究の査読誌\n\nAcademy of Management Journal (AMJ)\nAcademy of Management Review (AMR)\nAdministrative Science Quarterly (ASQ)\nOrganization Science (OS)\nManagement Science (MS)\nStrategic Management Journal (SMJ)"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#日本の会計ファイナンスの査読誌-の一部",
    "href": "prezemi_2023_02_presen.html#日本の会計ファイナンスの査読誌-の一部",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "日本の会計・ファイナンスの査読誌 (の一部)",
    "text": "日本の会計・ファイナンスの査読誌 (の一部)\n\n会計プログレス\n現代ディスクロージャー研究\n管理会計学\n原価計算研究\n現代ファイナンス\n経営財務研究"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#日本のマーケティングの査読誌-の一部",
    "href": "prezemi_2023_02_presen.html#日本のマーケティングの査読誌-の一部",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "日本のマーケティングの査読誌 (の一部)",
    "text": "日本のマーケティングの査読誌 (の一部)\n\n流通研究\nマーケティング・ジャーナル"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#日本の組織戦略の査読誌-の一部",
    "href": "prezemi_2023_02_presen.html#日本の組織戦略の査読誌-の一部",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "日本の組織・戦略の査読誌 (の一部)",
    "text": "日本の組織・戦略の査読誌 (の一部)\n\n組織科学\n経営行動科学\n日本経営学会誌"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#プレゼミでのよいテーマ",
    "href": "prezemi_2023_02_presen.html#プレゼミでのよいテーマ",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "プレゼミでの「よいテーマ」",
    "text": "プレゼミでの「よいテーマ」\n\n明快な推論で導き出された仮説を、\n客観的なデータを用いて、\n適切な手法で分析し、\nその結果を解釈し、\n経営実務にどういう影響・貢献があるのか、\n\nを主張できれば、卒業論文になる。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#libbys-box",
    "href": "prezemi_2023_02_presen.html#libbys-box",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "Libby’s Box",
    "text": "Libby’s Box\n\nLibby’s Box"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#監査研究のlibbys-box",
    "href": "prezemi_2023_02_presen.html#監査研究のlibbys-box",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "監査研究のLibbY’s Box",
    "text": "監査研究のLibbY’s Box\nたとえば、監査研究の一例を挙げてみると、次のような図になります。\n\n監査と財務報告の質"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#よい理論とは",
    "href": "prezemi_2023_02_presen.html#よい理論とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "「よい理論」とは？",
    "text": "「よい理論」とは？\n実証研究のリサーチ・デザイン(research design)のプロセスは次のような手順になります。\n\nパズルを見つける（簡単には見付からないです）\nパズルを説明するための複数の前提条件を使って理論を作る。（ほぼ先行研究を参考にする）\n理論から作業仮説(working hypothesis)を引き出す。\n作業仮説を検証するためのデータを収集\nデータで作業仮説を検証し、理論の妥当性をチェック\n\n理想的にはこうなるでしょうが、現実にはこんなにうまくいきません。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#現実的なよい理論とは",
    "href": "prezemi_2023_02_presen.html#現実的なよい理論とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "現実的な「よい理論」とは？",
    "text": "現実的な「よい理論」とは？\n\n興味/疑問のある経営現象を見つける。\nなぜおその経営現象が発生するのか仮説を立てる。\nその仮説を最もらしいものにする理論/ストーリーを考える。\nデータを集めて仮説を統計的に顕彰する\n\nという風に行われることが多い（と思います。たぶん）"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#因果法則の3つの条件",
    "href": "prezemi_2023_02_presen.html#因果法則の3つの条件",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "因果法則の3つの条件",
    "text": "因果法則の3つの条件\n因果関係(causality)と相関関係(correlation)の違いを理解しておきましょう。\n因果関係は、近年の社会科学領域の研究で最も注目されているキーワードでしょう。\nもともと因果関係を特定し、推定する研究は数多く行われてきましたが、近年になって発達した計量経済学や実験経済学の手法を使って、より厳密に因果関係を特定しようとする研究が増え、因果関係を適切に特定することの重要性が認識されるようになりました。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#因果推論の書籍",
    "href": "prezemi_2023_02_presen.html#因果推論の書籍",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "因果推論の書籍",
    "text": "因果推論の書籍\n例えば、こんな本が近年出版されています。\n\n\n\n\n\n\n因果推論入門：基礎から現代的アプローチまで\n\n\n\n\n\n\n\n統計的因果推論の理論と実装\n\n\n\n\n\n\n\n効果検証入門"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#因果関係",
    "href": "prezemi_2023_02_presen.html#因果関係",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "因果関係",
    "text": "因果関係\n因果関係とは、原因(causal)と結果(outcome)の関係のことです。\n\n正確に言うと、ある要因\\(X\\)を操作するとき、別の要因\\(Y\\)が変化することです(Imbens and Rubin, 2015, p.4)。\n因果関係を考える際には、「効果をもたらした原因」(causal of effect)と「原因のもたらす効果」(effect of cause)の両方を考える必要があります。\n\n例えば、ある企業が従業員の給料を上げたとします。従業員の給料が上がったことが「効果をもたらした原因」であり、給料増加で従業員のモチベーションが上がったことが「原因のもたらす効果」\n\n定量的な研究では、「原因のもたらす効果」を分析することが多いです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#因果関係の3条件",
    "href": "prezemi_2023_02_presen.html#因果関係の3条件",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "因果関係の3条件",
    "text": "因果関係の3条件\n因果関係があると考えるためには、3つの条件を確かめる必要があります。\n\n原因が結果より先に起こる。\n原因と結果が共変する。\n原因以外の重要な要因が変化しない。\n\nこの因果関係を記述するものを理論といいます。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#理論とは",
    "href": "prezemi_2023_02_presen.html#理論とは",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "理論とは",
    "text": "理論とは\n理論とは「原因と結果について一般的な論述」で、「〇〇であるとき、△△が起こる」というようなものです。  原因と結果の関係を「説明変数\\(X\\)」(explanatory variable)と「応答変数\\(Y\\)」(response variable)の関係として表現します。\n\\[\n\\begin{aligned}\nX \\Longrightarrow Y\n\\end{aligned}\n\\]\n推論を作る際には，どれだけ説得力があり納得できる仮定を設定するかが重要となります。 仮定のない推論など役に立たないからです。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#プレゼミでのよいテーマ-1",
    "href": "prezemi_2023_02_presen.html#プレゼミでのよいテーマ-1",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "プレゼミでの「よいテーマ」",
    "text": "プレゼミでの「よいテーマ」\n\nその前段階として、プレゼミでは検証可能性を重視する。\nその論文を読めば、他の人でも同じ分析を行うことが可能であり、誰でも追試が行えることが重要\nそのためには、データの集め方や変数の作り方、データ分析のプロセスが明確にしめされており、それを自分でもすぐに再現することができる、ということ"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#良い理論がもつ性質",
    "href": "prezemi_2023_02_presen.html#良い理論がもつ性質",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "良い理論がもつ性質",
    "text": "良い理論がもつ性質\n良い理論・推論が持つべき性質は次のようなものです。\n\n反証可能であること\n観察可能な予測が多いこと\n具体的であること\nシンプルであること\n\n以下ではそれぞれについて簡単に説明します。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#会計学の領域",
    "href": "prezemi_2023_02_presen.html#会計学の領域",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "会計学の領域",
    "text": "会計学の領域\n\n会計の歴史を研究対象とする会計史 (accounting history)\n会計の計算構造を研究対象とする計算構造研究 (accounting structure)\n簿記そのものを研究対象とする簿記論 (bookkeeping)\n会計の実務を説明し予想するための理論の構築を目指す事実解明的な会計研究 (positive accounting research)\n\nなどがある。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#学術雑誌",
    "href": "prezemi_2023_02_presen.html#学術雑誌",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "学術雑誌",
    "text": "学術雑誌\n学術研究が掲載された研究雑誌(ジャーナル)のうち、査読(referree)制度を採用しているものを査読付き雑誌(referreed journal)という。\n\n匿名の査読者が審査を行い，投稿論文を雑誌に掲載するかどうかを審査 \n査読を突破した高品質な論文だけが雑誌に掲載されるが、査読の時間が結構長く，投稿してから雑誌に掲載されるまで1年〜3年程度かかることもざら"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#本日の到達度検証課題",
    "href": "prezemi_2023_02_presen.html#本日の到達度検証課題",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "本日の到達度検証課題",
    "text": "本日の到達度検証課題\n第2回講義の到達度検証のための課題は、以下の通り\n\n興味をもてそうな研究課題RQを設定する。\n作業仮説を構築し、他の人に説明できる。\n定量データを用いて仮説を検証する方法を説明する。\n上で立てた研究課題がよい研究課題かどうかを検討し、評価する。"
  },
  {
    "objectID": "prezemi_2023_02_presen.html#問をたてる",
    "href": "prezemi_2023_02_presen.html#問をたてる",
    "title": "プレゼミ2023  第2回 研究、仮説、実証会計",
    "section": "問をたてる",
    "text": "問をたてる\nプレゼミの達成目標は、経営事象に関する問題を発見し、その問題がなぜ生じているのか、どうすれば解決できるのかを考えることができること\n研究課題の種類について学びます。\n\n実証的問題\n規範的問題\n分析的問題"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#本日の講義内容",
    "href": "prezemi_2023_03_presen.html#本日の講義内容",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "本日の講義内容",
    "text": "本日の講義内容\n第3回講義の到達目標は、\n\nPosit Cloudにログインして、ブラウザ上でRstudioを使うことができる。\nVisual Studio CodeでRのソースコードを書くことができる。\nVisual Studio CodeでQuartoを使って、レポートや論文を書くことができる。\nRでデータを読み込み，データを加工し，グラフを作ることができる。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#rの基本操作",
    "href": "prezemi_2023_03_presen.html#rの基本操作",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "Rの基本操作",
    "text": "Rの基本操作\nRはCUI(command user interface)と呼ばれる、コマンドを打ち込んで操作するタイプのソフトウェアなので、操作はすべてキーボード入力する。\nまずは、1+2を計算してみます。\n\n\n\n1 + 2\n\nと書いて、その行にカーソルがある状態で、Ctrl + Enterを押すと、\n\n\n\n\n\n[1] 3\n\n\nという計算結果が表示されます。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#パッケージ",
    "href": "prezemi_2023_03_presen.html#パッケージ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "パッケージ",
    "text": "パッケージ\nRはパッケージを使って機能を拡張することができます。\n\ninstall.packages()関数でパッケージをインストールする。2回目の起動からは必要なし\nlibrary()関数でパッケージを読み込む\n\n以下のコードを実行して、tidyverseをインストールしてください。\n\ninstall.packages(\"tidyverse\") # 最初の一回だけ実行\n\nそして、ほぼ毎回以下のコードを実行して、tidyverseを読み込みます。\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#まとめ",
    "href": "prezemi_2023_03_presen.html#まとめ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "まとめ",
    "text": "まとめ\nここでは、\n\nRのインストール\nRstudioのインストール\nVS Codeのインストール\nQuartoのインストール\n\nを行い、VS Code上での分析・レポート作成環境を整えました。 また、ソースコードの書き方や、パッケージのインストール方法、GitHubとの連携方法を学び、GitHub Copilotの紹介をしました。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#よく使う基本関数",
    "href": "prezemi_2023_03_presen.html#よく使う基本関数",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "よく使う基本関数",
    "text": "よく使う基本関数\n基本的な演算は以下の通りです。\n\n+加算，-減算, /除算, *乗算\n^累乗, 2の2乗は2^2\nsqrt()関数で平方根の計算\nc()関数でベクトルの作成\nmean()関数で平均を計算\nseq()関数で数列の作成"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#便利なパッケージ",
    "href": "prezemi_2023_03_presen.html#便利なパッケージ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "便利なパッケージ",
    "text": "便利なパッケージ\n\ninstall.packages(\"bloom\") # 結果の整形\ninstall.packages(\"ggthemes\") # グラフの見た目\ninstall.packages(\"modelsummary\") # 回帰結果の作表\ninstall.packages(\"kableExtra\") # 表の整形\ninstall.packages(\"gt\") # 表の整形\ninstall.packages(\"patchwork\") # グラフを並べて表示"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#プログラミングの基本",
    "href": "prezemi_2023_03_presen.html#プログラミングの基本",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "プログラミングの基本",
    "text": "プログラミングの基本\nMS Excelでもできることを、なぜRでやるのか、というと、\n\n代入 x &lt;- c(1,2,3)\n関数 mean(x)\n繰り返し for(i in 1:10) { print(i) }\n分岐 if(x &gt; 0) { print(\"+\") } else { print(\"-\") }\n\nができ、そのプロセスをソースコードとして記録できるからである。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#githubとの連携",
    "href": "prezemi_2023_03_presen.html#githubとの連携",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "Githubとの連携",
    "text": "Githubとの連携\n\nGitHubは、Gitというバージョン管理システムを使って、ソースコードのバージョン管理をクラウド上で行うことができる無料サービス\n使いこなすには少々勉強が必要ですが、使えれば非常に有用\nVS CodeはGit/GitHubとの連携も簡単なので、複数人でウェブ開発やプログラミングをする場合には必須\n\nまずは、GitHubのウェブサイトにアクセスし、アカウントを作成してください。\nGitHub"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#github本",
    "href": "prezemi_2023_03_presen.html#github本",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "GitHub本",
    "text": "GitHub本\n書籍やウェブサイトを参考\n\n\n\n\n\n\nGitHubのオススメ本\n\n\n\n\n\n\n\nはじめてでもできるGitとGitHubの教科書\n\n\n\n\n\n\n\nわかばちゃんと学ぶGit使い方入門"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#github-copilotを使う",
    "href": "prezemi_2023_03_presen.html#github-copilotを使う",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "GitHub Copilotを使う",
    "text": "GitHub Copilotを使う\n\nGitHub Copilotは、AIがコードの作成を支援してくれる超便利なツール\n学生は無料で利用できるので、プログラミングを学習しようとしている人は、導入すべし\n\nGitHub Copilot"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#たたみ",
    "href": "prezemi_2023_03_presen.html#たたみ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "たたみ",
    "text": "たたみ\n\n\n\n\n\n\nRはみんなの友達!（クリック）\n\n\n末永くよろしくね!"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#今日の目標",
    "href": "prezemi_2023_03_presen.html#今日の目標",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "今日の目標",
    "text": "今日の目標\n第3回講義の到達目標は、\n\nPosit Cloudにログインして、ブラウザ上でRstudioを使うことができる。\nVisual Studio CodeでRのソースコードを書くことができる。\ndplyrの関数を使ってデータ操作ができる。\n新しい変数を作成して、企業平均や年度平均を計算することができる。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#問題",
    "href": "prezemi_2023_03_presen.html#問題",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "問題",
    "text": "問題\n\nデータの読み込みData\n\n\nhttps://so-ichi.com/kesho_2023.csvからデータを読み込んで、dfオブジェクトに代入し、中身を確認してください。\n\n\n\ndf &lt;- read_csv(\"https://so-ichi.com/kesho_2023.csv\")\n\n\n\n\n\n\n\nsummary(df)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#問題-1",
    "href": "prezemi_2023_03_presen.html#問題-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "問題 (1)",
    "text": "問題 (1)\n\nライブラリの読み込み答え\n\n\ntidyverseパッケージを読み込んでください。\n\n\n\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#問題-2",
    "href": "prezemi_2023_03_presen.html#問題-2",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "問題 (2)",
    "text": "問題 (2)\n\nデータの読み込みData\n\n\nhttps://so-ichi.com/kesho_2023.csvからデータを読み込んで、dfオブジェクトに代入し、中身を確認してください。\n\n\n\ndf &lt;- read_csv(\"https://so-ichi.com/kesho_2023.csv\")\nglimpse(df)\n\nRows: 130\nColumns: 8\n$ code      &lt;chr&gt; \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000…\n$ name      &lt;chr&gt; \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", …\n$ term      &lt;chr&gt; \"1985/11\", \"1986/11\", \"1987/11\", \"1988/11\", \"1989/03\", \"1990…\n$ shubetsu  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, …\n$ ren       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ sales     &lt;dbl&gt; 371040, 375294, 378977, 401311, 130654, 456352, 517252, 5532…\n$ netincome &lt;dbl&gt; 14526, 13632, 9014, 9515, 4265, 11362, 15850, 16011, 13290, …\n$ month     &lt;dbl&gt; 12, 12, 12, 12, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1…"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ライブラリの読み込み",
    "href": "prezemi_2023_03_presen.html#ライブラリの読み込み",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ライブラリの読み込み",
    "text": "ライブラリの読み込み\n\n問題解答\n\n\ntidyverseパッケージを読み込んでください。\n\n\n\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データの読み込み",
    "href": "prezemi_2023_03_presen.html#データの読み込み",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データの読み込み",
    "text": "データの読み込み\n\n問題解答\n\n\nhttps://so-ichi.com/kesho_2023.csvからデータを読み込んで、dfオブジェクトに代入し、中身を確認してください。\n\n\n\n# データ読み込み\ndf &lt;- read_csv(\"https://so-ichi.com/kesho_2023.csv\")\nglimpse(df) # オブジェクトの中身を確認\n\nRows: 130\nColumns: 8\n$ code      &lt;chr&gt; \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000…\n$ name      &lt;chr&gt; \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", …\n$ term      &lt;chr&gt; \"1985/11\", \"1986/11\", \"1987/11\", \"1988/11\", \"1989/03\", \"1990…\n$ shubetsu  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, …\n$ ren       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ sales     &lt;dbl&gt; 371040, 375294, 378977, 401311, 130654, 456352, 517252, 5532…\n$ netincome &lt;dbl&gt; 14526, 13632, 9014, 9515, 4265, 11362, 15850, 16011, 13290, …\n$ month     &lt;dbl&gt; 12, 12, 12, 12, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1…"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#パッケージで機能拡張",
    "href": "prezemi_2023_03_presen.html#パッケージで機能拡張",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "パッケージで機能拡張",
    "text": "パッケージで機能拡張\nRはパッケージを使って機能を拡張することができます。\n\ninstall.packages()関数でパッケージをインストールする。2回目の起動からは必要なし\nlibrary()関数でパッケージを読み込む\n\n必要なパッケージをインストールしてみます。\n\ninstall.packages(\"tidyverse\") # 最初の一回だけ実行\ninstall.packages(\"knitr\") # 最初の一回だけ実行\ninstall.packages(\"kableExtra\") # 最初の一回だけ実行\n\nパッケージを読みこむ。\n\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#便利なパッケージ達",
    "href": "prezemi_2023_03_presen.html#便利なパッケージ達",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "便利なパッケージ達",
    "text": "便利なパッケージ達\nRはフリーウェアで、誰でもパッケージを作って公開することができるため、非常に多くのパッケージが開発されている。\n\ninstall.packages(\"bloom\") # 結果の整形\ninstall.packages(\"ggthemes\") # グラフの見た目\ninstall.packages(\"modelsummary\") # 回帰結果の作表\ninstall.packages(\"kableExtra\") # 表の整形\ninstall.packages(\"patchwork\") # グラフを並べて表示\n\nとりあえず、Rを開いたらすぐtidyverseを読み込んでおけばよい。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数の確認",
    "href": "prezemi_2023_03_presen.html#変数の確認",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数の確認",
    "text": "変数の確認\nデータを読み込んだら、まずは変数の確認をします。 tidyverseのglimpse()を使うと、変数名だけでなく、変数の型はデータの一部を確認できる。\n\n\nglimpse(df)\n\n\nRows: 130\nColumns: 8\n$ code      &lt;chr&gt; \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000…\n$ name      &lt;chr&gt; \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", …\n$ term      &lt;chr&gt; \"1985/11\", \"1986/11\", \"1987/11\", \"1988/11\", \"1989/03\", \"1990…\n$ shubetsu  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, …\n$ ren       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ sales     &lt;dbl&gt; 371040, 375294, 378977, 401311, 130654, 456352, 517252, 5532…\n$ netincome &lt;dbl&gt; 14526, 13632, 9014, 9515, 4265, 11362, 15850, 16011, 13290, …\n$ month     &lt;dbl&gt; 12, 12, 12, 12, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1…"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数名の確認",
    "href": "prezemi_2023_03_presen.html#変数名の確認",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数名の確認",
    "text": "変数名の確認\n変数の名前だけを知りたい場合は、names()を使う。\n\n\nnames(df)\n\n\n[1] \"code\"      \"name\"      \"term\"      \"shubetsu\"  \"ren\"       \"sales\"    \n[7] \"netincome\" \"month\""
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数の型",
    "href": "prezemi_2023_03_presen.html#変数の型",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数の型",
    "text": "変数の型\n変数の型を知りたい場合は、str()を使う。\n\nstr(df)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数の確認-output",
    "href": "prezemi_2023_03_presen.html#変数の確認-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数の確認",
    "text": "変数の確認\n\nRows: 130\nColumns: 8\n$ code      &lt;chr&gt; \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000641\", \"0000…\n$ name      &lt;chr&gt; \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", \"資生堂\", …\n$ term      &lt;chr&gt; \"1985/11\", \"1986/11\", \"1987/11\", \"1988/11\", \"1989/03\", \"1990…\n$ shubetsu  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, …\n$ ren       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ sales     &lt;dbl&gt; 371040, 375294, 378977, 401311, 130654, 456352, 517252, 5532…\n$ netincome &lt;dbl&gt; 14526, 13632, 9014, 9515, 4265, 11362, 15850, 16011, 13290, …\n$ month     &lt;dbl&gt; 12, 12, 12, 12, 4, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1…"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数名の確認-1",
    "href": "prezemi_2023_03_presen.html#変数名の確認-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数名の確認",
    "text": "変数名の確認\nkesho_2023.csvには次の変数がある\n\ncode : 企業コード (文字列)\nname : 企業名 (文字列)\nterm : 決算年月 (文字列)\nshubetsu : 会計基準の種類 (数値)\nren : 連結か単体 (数値)\nsales : 売上高 (数値)\nnetincome : 当期純利益 (数値)\nmonth : 決算月数 (数値)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#主要な変数の型",
    "href": "prezemi_2023_03_presen.html#主要な変数の型",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "主要な変数の型",
    "text": "主要な変数の型\n変数の型は非常に重要\n\ndata.frame : データフレーム\ncharacter : 文字列\nnumeric : 数値\ninteger : 整数\nlogical : 論理値"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#オブジェクトの主要な型",
    "href": "prezemi_2023_03_presen.html#オブジェクトの主要な型",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "オブジェクトの主要な型",
    "text": "オブジェクトの主要な型\n変数の型は非常に重要\n\ncharacter : 文字列\nnumeric : 数値\ninteger : 整数\nfactor : カテゴリー\nlogical : 論理値"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#オブジェクトの主要な型-1",
    "href": "prezemi_2023_03_presen.html#オブジェクトの主要な型-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "オブジェクトの主要な型",
    "text": "オブジェクトの主要な型\n\ndata.frame : データフレーム\ntibble : データフレームの改良版\nlist : いろんなものをまとめたもの\n\nプレゼミでは主にdata.frameを使う。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データフレーム",
    "href": "prezemi_2023_03_presen.html#データフレーム",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データフレーム",
    "text": "データフレーム\n\nデータフレーム(data.frame)は、行と列からなる表形式のデータ構造\n行は観測単位、列は変数\n列はすべて同じ型でなければならない\n行は同じ型でなくてもよい"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データの整形",
    "href": "prezemi_2023_03_presen.html#データの整形",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データの整形",
    "text": "データの整形\ntidyverseパッケージ群のdplyrパッケージが大活躍\n\nselect() : 変数を選択する\nfilter() : データを抽出する\nmutate() : 変数を追加する\ngroup_by() : データをグループ化する\nsummarise() : データを集計する\nrename() : 変数名を変更する\narrange() : データを並び替える"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#パイプ演算子",
    "href": "prezemi_2023_03_presen.html#パイプ演算子",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "パイプ演算子",
    "text": "パイプ演算子\n\nソースコードを可読性の高いものするために便利なのがパイプ演算子\nパイプ演算子は，左側のオブジェクトを右側の関数の第一引数に渡すという処理を行う。\nパイプ演算子は2種類あって、基本Rの|&gt;とmagrittrパッケージの%&gt;%がある。\n\n\n(1 + 2) %&gt;% sqrt()\n\n[1] 1.732051\n\n(1 + 2) |&gt; sqrt()\n\n[1] 1.732051"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データの保存",
    "href": "prezemi_2023_03_presen.html#データの保存",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データの保存",
    "text": "データの保存\n前処理が終わったデータは，ファイルとして保存しておくとよいでしょう。 たとえば，df_leftをdf_left.csvというファイル名で保存するには，readrパッケージのwrite_csv()関数を使います。\nwrite_csv()関数の第1引数は保存したいオブジェクト(ここではdf_left)で，あとの主要な引数は，\n\nfile\nna = \"NA\"\nappend = FALSE\n\nとなります。 fileは保存するファイル名を指定します。 naは欠損値をどうするかを指定します。デフォルトではNAとなっています。 appendは，既存のファイルに追記するかどうかを指定します。基本は上書きなので，FALSEにしておきます。\n\nwrite_csv(df_left, file = \"df_left.csv\")\n\nこれで，作業ディレクトリにdf_left.csvが保存されました。 分析を進める際は，このようにして保存したデータを読み込んで使います。\n—&gt;"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#パイプ演算子の例",
    "href": "prezemi_2023_03_presen.html#パイプ演算子の例",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "パイプ演算子の例",
    "text": "パイプ演算子の例\nrnorm()関数を使って平均0，分散1の標準正規分から100個のデータを作る。 rnorm()関数は3つの引数を取ります。\n\nデータの個数\n平均\n標準偏差"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#新しい変数を作成する-mutate",
    "href": "prezemi_2023_03_presen.html#新しい変数を作成する-mutate",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "新しい変数を作成する mutate",
    "text": "新しい変数を作成する mutate\n\n新変数の作成にはdplyrパッケージのmutate()関数\n先ほど読みこんだデータから，当期純利益を売上高で除して売上高当期純利益率を計算して，ratioという変数を作る\n\n\n\n\n\n\n\nmutate()で新変数\n\n\ndplyrパッケージのmutate()関数を使う。\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        ratio = netincome / sales # 売上高利益率\n        )"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#条件に応じて値を変える-ifelse",
    "href": "prezemi_2023_03_presen.html#条件に応じて値を変える-ifelse",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "条件に応じて値を変える ifelse",
    "text": "条件に応じて値を変える ifelse\n\nある変数の値に応じて異なる値をとる変数を作る\nmutate()関数とifelse()関数を組み合わせる。\nifelse()関数は次のような引数を取ります。\n\n\nifelse(条件, 条件が真のときの値, 条件が偽のときの値)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#条件に応じて値を変える-ifelseの例",
    "href": "prezemi_2023_03_presen.html#条件に応じて値を変える-ifelseの例",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "条件に応じて値を変える ifelseの例",
    "text": "条件に応じて値を変える ifelseの例\n売上高当期純利益率ratioが5%(つまり0.05)以上ならば「高い」， そうでなければ「低い」という変数highlowを作ってみる。\n\n\n\n\n\n\nmutate()とifelse()\n\n\n条件分岐を使って新変数作成\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        highlow = ifelse(ratio &gt;= 0.05, \"高い\", \"低い\") # 売上高利益率\n        )"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを抽出する-filter",
    "href": "prezemi_2023_03_presen.html#データを抽出する-filter",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを抽出する filter",
    "text": "データを抽出する filter\nデータを抽出するには，dplyrパッケージのfilter()関数を使います。 filter()関数は，次のような引数を取ります。\n\nfilter(データ, 条件)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを抽出する-filterの例",
    "href": "prezemi_2023_03_presen.html#データを抽出する-filterの例",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを抽出する filterの例",
    "text": "データを抽出する filterの例\n先ほど作成したhighlowが「高い」企業だけを抽出する。\n\nfilter()関数の中の条件は，==を使って，\"高い\"という文字列と一致するかどうかを確認\nhighlow変数の値が\"高い\"と一致する企業だけを抽出し，df_highという変数に代入\n\n\n\n\n\n\n\nfilter()の例\n\n\n一致は==を使う。=だとエラーが出るので注意\n\ndf_high &lt;- df %&gt;%\n    filter(highlow == \"高い\") # 文字列は\"\"で囲む"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを抽出する-filterの条件",
    "href": "prezemi_2023_03_presen.html#データを抽出する-filterの条件",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを抽出する filterの条件",
    "text": "データを抽出する filterの条件\nfilter()関数の中で指定する条件は，\n\n== : 一致する\n!= : 一致しない\n&gt;=や&lt;= : 以上や以下\n&gt;や&lt; : より大きいや小さい\n%in% : いずれかに一致する\n\nなどがあります。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを抽出する-filterの例-1",
    "href": "prezemi_2023_03_presen.html#データを抽出する-filterの例-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを抽出する filterの例",
    "text": "データを抽出する filterの例\nたとえば，資生堂と花王を抽出したり，売上高当期純利益率が5%以上かつ売上高が1000億円以上の企業を抽出するには， 次のように書きます。\n\n\n\n\n\n\n条件の組み合わせ\n\n\n資生堂で、利益率が5％以上で、売上高が1000以上の年度を抽出\n\ndf_shiseido &lt;- df %&gt;%\n    filter(\n      name %in% c(\"資生堂\") &\n      ratio &gt;= 0.05 &\n      sales &gt;= 1000000\n      ) # 3つの条件を組み合わせる\nkable(df_shiseido)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数を選択する-select",
    "href": "prezemi_2023_03_presen.html#変数を選択する-select",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数を選択する select",
    "text": "変数を選択する select\nデータから特定の変数を取り出すにはdplyrパッケージのselect()関数を使う。 df_shiseidoから，企業コード，企業名，利益率の3つの変数だけを選択してみる。\n\n\n\n\n\n\nselect()で変数選択\n\n\nnameとtermとsalesとratioの4つの変数だけ選択して上書き\n\ndf_shiseido &lt;- df_shiseido %&gt;%\n    select(name, term, sales, ratio) # 3つの変数だけ選択\nkable(df_shiseido)\n\n\n\n\nname\nterm\nsales\nratio\n\n\n\n\n資生堂\n2018/12\n1094825\n0.0560848\n\n\n資生堂\n2019/12\n1131547\n0.0650101"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数を選択する-selectの例",
    "href": "prezemi_2023_03_presen.html#変数を選択する-selectの例",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数を選択する selectの例",
    "text": "変数を選択する selectの例\nselect()関数の中で使えるものには，以下のようなものがある。\n\n- : 除外する (-ratioとかくとratio以外を選択)\n: : 連続する変数を選択 (code:renと書くとcodeからrenまでを選択)\nstarts_with() : ある文字列で始まる変数を選択\nends_with() : ある文字列で終わる変数を選択\n\n比率を表す変数はratioで始まるように統一しておく，基準化した変数には_Kを最後に付けておく，とすると選択が簡単"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを並び替える-arrange",
    "href": "prezemi_2023_03_presen.html#データを並び替える-arrange",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを並び替える arrange",
    "text": "データを並び替える arrange\nデータを並び替えるには，dplyrパッケージのarrange()関数を使います。\n\n\n\n\n\n\nRの場合\n\n\n\n\ndf %&gt;%\n  # 2つの変数だけ選択\n  select(name, ratio) %&gt;%\n  arrange(ratio) %&gt;%\n  head() %&gt;%\n  kable() %&gt;%\n  kable_styling(font_size = 20)\n\n\n\n\n\nname\nratio\n\n\n\n\nポーラ\n-0.4349581\n\n\n資生堂\n-0.0757638\n\n\n資生堂\n-0.0385906\n\n\n資生堂\n-0.0216680\n\n\n資生堂\n-0.0138412\n\n\n資生堂\n-0.0126617\n\n\n\n\n\n\n\n\n\n\n\n小さい順に並び替えられました。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#降順に並び替える",
    "href": "prezemi_2023_03_presen.html#降順に並び替える",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "降順に並び替える",
    "text": "降順に並び替える\n降順にするにはdesc()関数を使う。\n\n\n\n\n\n\nRの場合\n\n\n必要な変数を選択肢、降順に並び替えて、先頭の5行のみを表にした。\n\n\ndf %&gt;%\n  select(name, ratio) %&gt;%\n  arrange(desc(ratio)) %&gt;%\n  head(6) %&gt;% # 先頭の5行\n  kable() %&gt;%\n  kable_styling(font_size = 20)\n\n\n\n\n\nname\nratio\n\n\n\n\nポーラ\n0.1110647\n\n\n花王\n0.1019213\n\n\n花王\n0.0987028\n\n\n花王\n0.0986613\n\n\nユニ・チャーム\n0.0929384\n\n\n花王\n0.0912752\n\n\n\n\n\n\n\n\n\n\n\nこれでどの企業のどの年度の売上高当期純利益率が大きいのかが一目瞭然"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#long形式とwide形式",
    "href": "prezemi_2023_03_presen.html#long形式とwide形式",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "long形式とwide形式",
    "text": "long形式とwide形式\n人間には読みやすいけれどパソコンは読みにくい，というデータの形式がある。\n\n\n\n地点\n6時\n12時\n18時\n\n\n\n\n札幌\n12℃\n15℃\n13℃\n\n\n大阪\n20℃\n24℃\n22℃\n\n\n福岡\n23℃\n25℃\n25℃\n\n\n\nこのような形のデータをワイド形式(wide)といい，人間には見やすいが，コンピュータにとっては読みにくい形式"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#long形式とwide形式-1",
    "href": "prezemi_2023_03_presen.html#long形式とwide形式-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "long形式とwide形式",
    "text": "long形式とwide形式\nプログラミングで使うのはロング形式(long)のデータ\n\n\n\n地点\n時間\n気温(℃)\n\n\n\n\n札幌\n6時\n12\n\n\n札幌\n12時\n15\n\n\n札幌\n18時\n13\n\n\n大阪\n6時\n20\n\n\n大阪\n12時\n24\n\n\n大阪\n18時\n22\n\n\n福岡\n6時\n23\n\n\n福岡\n12時\n25\n\n\n福岡\n18時\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#整然データ",
    "href": "prezemi_2023_03_presen.html#整然データ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "整然データ",
    "text": "整然データ\n\nこのロング型のうち，一定のルールに従って作成されたデータを整然データ(tidy data)といい，扱うデータが整然データとなるように処理することを目指す。\nR神Hadley Wickham氏は，データの型を理解することを，データ分析の第一歩とし，その一貫として整然データという考え方を提唱しています。\n整然データとは，次のような原則に従って構築されたデータのことです(Wickham, 2014) 参考https://id.fnshr.info/2017/01/09/tidy-data-intro/。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#整然データの例",
    "href": "prezemi_2023_03_presen.html#整然データの例",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "整然データの例",
    "text": "整然データの例\n\nロング型の天気データを使って，ロングからワイド，ワイドからロングの操作を学びましょう。\nまずデータを作ります。\n\ndf_weather &lt;- data.frame(\n    place = c(rep(\"札幌\",3), rep(\"大阪\",3), rep(\"福岡\",3)),\n    time = rep(c(\"6時\", \"12時\", \"18時\"),3),\n    temp = c(12,15,13,20,24,22,23,25,25)\n)\nkable(df_weather) |&gt; kable_styling(font_size = 24)\n\n\nこれはロング型の整然データとなる。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider",
    "href": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ロングからワイド pivot_wider",
    "text": "ロングからワイド pivot_wider\n\nRで使うならこのままでよいのですが，あえてこれをワイド型に変えてみる。\n教科書で使用されているspread()は「根本的に設計ミスってた」と公式で発表\nそこでR神が作ったpivot_wider()が推奨\n\npivot_wider()はロング型をワイド型にする関数"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを結合する",
    "href": "prezemi_2023_03_presen.html#データを結合する",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを結合する。",
    "text": "データを結合する。\n別々のデータを結合させて使いたいことはよくあります。 例えば，次のようなデータを結合させる場合を考えてみましょう。\n表A\n\n\n\nname\nterm\nsale\n\n\n\n\nトヨタ\n2020\n1000\n\n\nトヨタ\n2021\n900\n\n\nトヨタ\n2022\n1400\n\n\nホンダ\n2020\n800\n\n\nホンダ\n2021\n700\n\n\nホンダ\n2022\n900"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表a-1",
    "href": "prezemi_2023_03_presen.html#表a-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表A",
    "text": "表A\n\ndf_A &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(1000, 900, 1400, 800, 700, 900)\n)\nkable(df_A)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表b",
    "href": "prezemi_2023_03_presen.html#表b",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表B",
    "text": "表B\n\ndf_B &lt;- data.frame(\n    name = c(\"日産\", \"日産\", \"日産\", \"マツダ\", \"マツダ\", \"マツダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(400, 500, 900, 300, 400, 200)\n)\nkable(df_B)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表b-1",
    "href": "prezemi_2023_03_presen.html#表b-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表B",
    "text": "表B\n\ndf_B &lt;- data.frame(\n    name = c(\"日産\", \"日産\", \"日産\", \"マツダ\", \"マツダ\", \"マツダ\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022),\n    sale = c(400, 500, 900, 300, 400, 200)\n)\nkable(df_B)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表c",
    "href": "prezemi_2023_03_presen.html#表c",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表C",
    "text": "表C\n\ndf_C &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\", \"スバル\", \"スバル\", \"スバル\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022),\n    netincome = c(100, 90, 150, 140, 100, 90, 30, 35, 50)\n)\nkable(df_C)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表c-1",
    "href": "prezemi_2023_03_presen.html#表c-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表C",
    "text": "表C\n\ndf_C &lt;- data.frame(\n    name = c(\"トヨタ\", \"トヨタ\", \"トヨタ\", \"ホンダ\", \"ホンダ\", \"ホンダ\", \"スバル\", \"スバル\", \"スバル\"),\n    term = c(2020, 2021, 2022, 2020, 2021, 2022, 2020, 2021, 2022),\n    netincome = c(100, 90, 150, 140, 100, 90, 30, 35, 50)\n)\nkable(df_C)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#結合の種類",
    "href": "prezemi_2023_03_presen.html#結合の種類",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "結合の種類",
    "text": "結合の種類\nこの3つのデータを結合させる場合を考える。\n\nまず表Aと表Bは同じ変数をもつデータなので縦につなげる\nこの結合を縦結合とか連結という。\n縦結合は，dplyrパッケージのbind_rows()関数を使用\n\n\ndf_AB &lt;- bind_rows(df_A, df_B)\ndf_AB %&gt;% kable()\n\n\n縦に結合できたので，トヨタ，ホンダ，日産，マツダのデータが入ったデータベースdf_ABができました。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#横結合",
    "href": "prezemi_2023_03_presen.html#横結合",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "横結合",
    "text": "横結合\n次に，このdf_ABとdf_Cを結合させます。 df_Cはnetincomeというdf_ABにはない変数があり，異なる変数をもつデータ同士の結合となります。 これらを結合させるには，横につなげる必要があります。 このような結合を結合といいます。\n結合には，\n\n内部結合(inner join)\n外部結合(outer join)\n\nがある。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#外部結合の種類",
    "href": "prezemi_2023_03_presen.html#外部結合の種類",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "外部結合の種類",
    "text": "外部結合の種類\n\n完全結合(full join)\n左結合(left join)\n右結合(right join)\n\nがあります。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#外部結合の特徴",
    "href": "prezemi_2023_03_presen.html#外部結合の特徴",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "外部結合の特徴",
    "text": "外部結合の特徴\n3つの外部結合の特徴は次の通りです。\n\n完全結合は、xとyのすべての観測値を保持します。\n左結合は、xのすべての観測値を保持します。\n右結合は、yのすべての観測値を保持します。\n\nR神の神書籍R for Data Science (2e)の図がわかりやすいので，ここで紹介します。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#r4dsの図",
    "href": "prezemi_2023_03_presen.html#r4dsの図",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "R4DSの図",
    "text": "R4DSの図\n\n\n\n外部結合の例\n\n\n内部結合と3つの外部結合をベン図で表すとこうなります。\n\n\n\n外部結合のベン図\n\n\n最もよく使われる結合は左結合です。 元データに他のデータを結合する場合，元データに含まれるデータのみ保持したい場合が多いので，追加データを調べるときはいつもこれを使います。 左結合はデフォルトの結合であるべきで、他の結合を選択する強い理由がない限り、これを使用します。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#左結合を実践",
    "href": "prezemi_2023_03_presen.html#左結合を実践",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "左結合を実践",
    "text": "左結合を実践\nでは，df_ABとdf_Cを左結合してみましょう。 結合する際にキーとしてnameとtermを使う。\n\ndf_left &lt;- df_AB %&gt;%\n    left_join(df_C, by = c(\"name\", \"term\"))\nprint(df_left)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cには日産とマツダのデータがなく，スバルのデータがあります。 そのため左結合すると，日産とマツダのnetincomeにはNAが入り，スバルは欠落します。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#右結合の実践",
    "href": "prezemi_2023_03_presen.html#右結合の実践",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "右結合の実践",
    "text": "右結合の実践\ndf_ABとdf_Cを右結合してみましょう。\n\ndf_right &lt;- df_AB %&gt;%\n    right_join(df_C, by = c(\"name\", \"term\"))\nprint(df_right)\n\n    name term sale netincome\n1 トヨタ 2020 1000       100\n2 トヨタ 2021  900        90\n3 トヨタ 2022 1400       150\n4 ホンダ 2020  800       140\n5 ホンダ 2021  700       100\n6 ホンダ 2022  900        90\n7 スバル 2020   NA        30\n8 スバル 2021   NA        35\n9 スバル 2022   NA        50\n\n\ndf_Cには日産とマツダのデータがなく，トヨタとホンダとスバルのデータがあります。 そのため右結合すると日産とマツダのデータが欠落し，df_Cに含まれていたトヨタ，ホンダ，スバルのデータが残ります。 しかしスバルのsaleにはNAが入ります。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#完全結合",
    "href": "prezemi_2023_03_presen.html#完全結合",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "完全結合",
    "text": "完全結合\n最後に，df_ABとdf_Cを完全結合してみましょう。\n\ndf_full &lt;- df_AB %&gt;%\n    full_join(df_C, by = c(\"name\", \"term\"))\nprint(df_full)\n\n     name term sale netincome\n1  トヨタ 2020 1000       100\n2  トヨタ 2021  900        90\n3  トヨタ 2022 1400       150\n4  ホンダ 2020  800       140\n5  ホンダ 2021  700       100\n6  ホンダ 2022  900        90\n7    日産 2020  400        NA\n8    日産 2021  500        NA\n9    日産 2022  900        NA\n10 マツダ 2020  300        NA\n11 マツダ 2021  400        NA\n12 マツダ 2022  200        NA\n13 スバル 2020   NA        30\n14 スバル 2021   NA        35\n15 スバル 2022   NA        50\n\n\ndf_ABにはトヨタ，ホンダ，日産，マツダのデータがありますが，df_Cにはトヨタ，ホンダ，スバルのデータがあるため， 完全結合したdf_fullにはすべての企業のデータが入ります。 しかし，日産とマツダのnetincomeにはNAが入り，スバルのsaleにもNAが入ります。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#整然データのルール",
    "href": "prezemi_2023_03_presen.html#整然データのルール",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "整然データのルール",
    "text": "整然データのルール\n\n個々の変数 (variable) が1つの列 (column) をなす。\n個々の観測 (observation) が1つの行 (row) をなす。\n個々の観測の構成単位の類型 (type of observational unit) が1つの表 (table) をなす。\n個々の値 (value) が1つのセル (cell) をなす"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#結合の種類-output",
    "href": "prezemi_2023_03_presen.html#結合の種類-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "結合の種類",
    "text": "結合の種類\n\n\n\n\nname\nterm\nsale\n\n\n\n\nトヨタ\n2020\n1000\n\n\nトヨタ\n2021\n900\n\n\nトヨタ\n2022\n1400\n\n\nホンダ\n2020\n800\n\n\nホンダ\n2021\n700\n\n\nホンダ\n2022\n900\n\n\n日産\n2020\n400\n\n\n日産\n2021\n500\n\n\n日産\n2022\n900\n\n\nマツダ\n2020\n300\n\n\nマツダ\n2021\n400\n\n\nマツダ\n2022\n200"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#knitrパッケージ",
    "href": "prezemi_2023_03_presen.html#knitrパッケージ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "knitrパッケージ",
    "text": "knitrパッケージ\n余談ですが，Rで表を表示するときは，knitrパッケージのkabble()関数を使うと，表がきれいに表示されます。\n\n# install.packages(\"knitr\") # first time only\nlibrary(knitr) # 表をきれいに表示する\nlibrary(kableExtra) # 表をさらにきれいに表示する"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表a-1-output",
    "href": "prezemi_2023_03_presen.html#表a-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表A",
    "text": "表A\n\n\n\n\nname\nterm\nsale\n\n\n\n\nトヨタ\n2020\n1000\n\n\nトヨタ\n2021\n900\n\n\nトヨタ\n2022\n1400\n\n\nホンダ\n2020\n800\n\n\nホンダ\n2021\n700\n\n\nホンダ\n2022\n900"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表b-1-output",
    "href": "prezemi_2023_03_presen.html#表b-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表B",
    "text": "表B\n\n\n\n\nname\nterm\nsale\n\n\n\n\n日産\n2020\n400\n\n\n日産\n2021\n500\n\n\n日産\n2022\n900\n\n\nマツダ\n2020\n300\n\n\nマツダ\n2021\n400\n\n\nマツダ\n2022\n200"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表c-1-output",
    "href": "prezemi_2023_03_presen.html#表c-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表C",
    "text": "表C\n\n\n\n\nname\nterm\nnetincome\n\n\n\n\nトヨタ\n2020\n100\n\n\nトヨタ\n2021\n90\n\n\nトヨタ\n2022\n150\n\n\nホンダ\n2020\n140\n\n\nホンダ\n2021\n100\n\n\nホンダ\n2022\n90\n\n\nスバル\n2020\n30\n\n\nスバル\n2021\n35\n\n\nスバル\n2022\n50"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表b-output",
    "href": "prezemi_2023_03_presen.html#表b-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表B",
    "text": "表B\n\n\n\n\nname\nterm\nsale\n\n\n\n\n日産\n2020\n400\n\n\n日産\n2021\n500\n\n\n日産\n2022\n900\n\n\nマツダ\n2020\n300\n\n\nマツダ\n2021\n400\n\n\nマツダ\n2022\n200"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#表c-output",
    "href": "prezemi_2023_03_presen.html#表c-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "表C",
    "text": "表C\n\n\n\n\nname\nterm\nnetincome\n\n\n\n\nトヨタ\n2020\n100\n\n\nトヨタ\n2021\n90\n\n\nトヨタ\n2022\n150\n\n\nホンダ\n2020\n140\n\n\nホンダ\n2021\n100\n\n\nホンダ\n2022\n90\n\n\nスバル\n2020\n30\n\n\nスバル\n2021\n35\n\n\nスバル\n2022\n50"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#mutateで変数の値を変える",
    "href": "prezemi_2023_03_presen.html#mutateで変数の値を変える",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "mutate()で変数の値を変える",
    "text": "mutate()で変数の値を変える\n\nmutate()関数を使って，長すぎる企業名を短くする。\n「ポーラ・オルビスホールディングス」を「ポーラ」と略\nname変数の値が「ポーラ・オルビスホールディング」ならば「ポーラ」という値をとる変数を作成\n\n\n\n\n\n\n\nRの場合\n\n\n\ndf &lt;- df %&gt;%\n    mutate( # 新しい変数を作成\n        name = ifelse(\n            name == \"ポーラ・オルビスホールディング\", \"ポーラ\", name) # 企業名\n        )"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#変数の型-output",
    "href": "prezemi_2023_03_presen.html#変数の型-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "変数の型",
    "text": "変数の型\n\nspc_tbl_ [130 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ code     : chr [1:130] \"0000641\" \"0000641\" \"0000641\" \"0000641\" ...\n $ name     : chr [1:130] \"資生堂\" \"資生堂\" \"資生堂\" \"資生堂\" ...\n $ term     : chr [1:130] \"1985/11\" \"1986/11\" \"1987/11\" \"1988/11\" ...\n $ shubetsu : num [1:130] 10 10 10 10 10 10 10 10 10 10 ...\n $ ren      : num [1:130] 1 1 1 1 1 1 1 1 1 1 ...\n $ sales    : num [1:130] 371040 375294 378977 401311 130654 ...\n $ netincome: num [1:130] 14526 13632 9014 9515 4265 ...\n $ month    : num [1:130] 12 12 12 12 4 12 12 12 12 12 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   code = col_character(),\n  ..   name = col_character(),\n  ..   term = col_character(),\n  ..   shubetsu = col_double(),\n  ..   ren = col_double(),\n  ..   sales = col_double(),\n  ..   netincome = col_double(),\n  ..   month = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#特定の変数の型",
    "href": "prezemi_2023_03_presen.html#特定の変数の型",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "特定の変数の型",
    "text": "特定の変数の型\n特定の変数の型を知りたい場合は、class()を使う。\n\nclass(df$sales)\n\n[1] \"numeric\""
  },
  {
    "objectID": "prezemi_2023_03_presen.html#正規分布から標本を取り出す",
    "href": "prezemi_2023_03_presen.html#正規分布から標本を取り出す",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "正規分布から標本を取り出す。",
    "text": "正規分布から標本を取り出す。\nrnorm(100, 0, 1)は、平均0，分散1の標準正規分布から100個のデータを取り出す。 パイプ演算子を使うと，\n\n100 %&gt;% rnorm(mean = 0, sd = 1) %&gt;% head()\n\n[1]  1.9905381  1.1322774 -0.8739457 -2.0173052  1.3423403 -0.1268424\n\n\nrnorm()関数の第1引数がデータの個数なので，そこに100を渡しています。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#条件を組み合わせる",
    "href": "prezemi_2023_03_presen.html#条件を組み合わせる",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "条件を組み合わせる",
    "text": "条件を組み合わせる\nまたこれらの条件を組み合わせることもできます。 その場合は，以下のように&や|を使います。\n\n& : かつ\n| : または"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データを抽出する-filterの例-1-output",
    "href": "prezemi_2023_03_presen.html#データを抽出する-filterの例-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データを抽出する filterの例",
    "text": "データを抽出する filterの例\n\n\n\n\ncode\nname\nterm\nshubetsu\nren\nsales\nnetincome\nmonth\nratio\nhighlow\nyear\n\n\n\n\n0000641\n資生堂\n2018/12\n10\n1\n1094825\n61403\n12\n0.0560848\n高い\n2018\n\n\n0000641\n資生堂\n2019/12\n10\n1\n1131547\n73562\n12\n0.0650101\n高い\n2019"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#グループ集計",
    "href": "prezemi_2023_03_presen.html#グループ集計",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "グループ集計",
    "text": "グループ集計\n\ndplyrのgroup_by()関数を使ってデータをグループ化\ndplyrのsummarise()関数を使ってグループ集計\n\n\ndf |&gt;\n  group_by(name) |&gt; # 企業ごとに以下の計算\n  summarise(\n    mean_sales = mean(sales, na.rm = T), # 平均売上\n    mean_ratio = mean(ratio, na.rm = T) # 平均利益率\n    ) |&gt;\n  kable()\n\n\n何行何列の表になるか分かりますか？"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#グループ集計-output",
    "href": "prezemi_2023_03_presen.html#グループ集計-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "グループ集計",
    "text": "グループ集計\n\n\n\n\nname\nmean_sales\nmean_ratio\n\n\n\n\nポーラ\n182645.0\n0.0209212\n\n\nユニ・チャーム\n319402.6\n0.0524618\n\n\n花王\n996446.9\n0.0523136\n\n\n資生堂\n649258.8\n0.0243242"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#グループ集計年度別",
    "href": "prezemi_2023_03_presen.html#グループ集計年度別",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "グループ集計：年度別",
    "text": "グループ集計：年度別\ngroup_by()の引数を2つにすると、2つの変数でグループ化\n\n問題解答\n\n\n2015年以降の企業別・年度別に平均売上高と平均利益率を計算する。\n\n\n\ndf |&gt;\n  filter(year &gt;= 2015) |&gt;\n  group_by(name,year) |&gt; # 企業ごとに以下の計算\n  summarise(\n    mean_sales = mean(sales, na.rm = T), # 平均売上\n    mean_ratio = mean(ratio, na.rm = T) # 平均利益率\n    ) |&gt;\n  kable() |&gt; kable_styling(font_size = 8)"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#グループ集計年度別-output",
    "href": "prezemi_2023_03_presen.html#グループ集計年度別-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "グループ集計：年度別",
    "text": "グループ集計：年度別\n\n\n\n\nname\nyear\nmean_sales\nmean_ratio\n\n\n\n\nポーラ\n2015\n214788.0\n0.0656228\n\n\nポーラ\n2016\n218482.0\n0.0747338\n\n\nポーラ\n2017\n244335.0\n0.1110647\n\n\nポーラ\n2018\n248574.0\n0.0337445\n\n\nポーラ\n2019\n219920.0\n0.0895507\n\n\nポーラ\n2020\n176311.0\n0.0262718\n\n\nポーラ\n2021\n178642.0\n0.0656844\n\n\nユニ・チャーム\n2015\n738707.0\n0.0548404\n\n\nユニ・チャーム\n2016\n604653.0\n0.0776826\n\n\nユニ・チャーム\n2017\n641647.0\n0.0822446\n\n\nユニ・チャーム\n2018\n688290.0\n0.0891383\n\n\nユニ・チャーム\n2019\n714233.0\n0.0645672\n\n\nユニ・チャーム\n2020\n727475.0\n0.0719530\n\n\nユニ・チャーム\n2021\n782723.0\n0.0929384\n\n\n花王\n2015\n1474550.0\n0.0713411\n\n\n花王\n2016\n1457610.0\n0.0868209\n\n\n花王\n2017\n1489421.0\n0.0987028\n\n\n花王\n2018\n1508007.0\n0.1019213\n\n\n花王\n2019\n1502241.0\n0.0986613\n\n\n花王\n2020\n1381997.0\n0.0912752\n\n\n花王\n2021\n1418768.0\n0.0772755\n\n\n資生堂\n2015\n770372.5\n0.0368548\n\n\n資生堂\n2016\n850306.0\n0.0377523\n\n\n資生堂\n2017\n1005062.0\n0.0226344\n\n\n資生堂\n2018\n1094825.0\n0.0560848\n\n\n資生堂\n2019\n1131547.0\n0.0650101\n\n\n資生堂\n2020\n920888.0\n-0.0126617\n\n\n資生堂\n2021\n1035165.0\n0.0409973"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#mutateで年度を取り出す",
    "href": "prezemi_2023_03_presen.html#mutateで年度を取り出す",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "mutate()で年度を取り出す。",
    "text": "mutate()で年度を取り出す。\n\nterm変数には，2020/3のように年月を表す文字列が入っている。\ntermから年度を取り出して，yearという変数を作成する。\n\n\ndf &lt;- df %&gt;%\n  mutate(\n    # 1文字目から4文字目までを取り出す\n    year = substr(term, 1, 4)\n    )"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#よく使う演算希望",
    "href": "prezemi_2023_03_presen.html#よく使う演算希望",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "よく使う演算希望",
    "text": "よく使う演算希望\n基本的な演算は以下の通りです。\n\n+加算，-減算, /除算, *乗算\n^累乗, 2の2乗は2^2\nsqrt()関数で平方根の計算\nc()関数でベクトルの作成\nmean()関数で平均を計算\nseq()関数で数列の作成"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#作業ディレクトリ",
    "href": "prezemi_2023_03_presen.html#作業ディレクトリ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "作業ディレクトリ",
    "text": "作業ディレクトリ\n\nRは、作業ディレクトリ(working direcotry)というフォルダを指定して、その中のファイルを読み込んだり、そこにファイルを書き出したりする。\nRが現在どのフォルダを作業ディレクトリとしているかは、getwd()関数で確認\n変更するときは、setwd()関数を使い、フォルダのパスを指定\n\n\ngetwd() # 作業ディレクトリ"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#rファイルの作成",
    "href": "prezemi_2023_03_presen.html#rファイルの作成",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "Rファイルの作成",
    "text": "Rファイルの作成\n\nRファイルは、Rのソースコードを書くためのファイルで拡張子は.r\nRstudioやPosit Cloudでは、FileメニューからNew Fileを選択し、R Scriptを選択すると、新しいファイルが作成される。\nVS Codeだと、Ctrl + Nで新しいファイルを作成できる。\n\n作業ディレクトリにpresemi_2023_day3.rというファイルを作成してください。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider-1",
    "href": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ロングからワイド pivot_wider",
    "text": "ロングからワイド pivot_wider\npivot_wider()の主な引数は，names_fromとvalues_fromの2つ\n\nnames_fromは，ワイド型にするときに，どの変数を列にするかを指定\nvalues_fromは，ワイド型にするときに，どの変数の値を使うかを指定"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider-1-output",
    "href": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ロングからワイド pivot_wider",
    "text": "ロングからワイド pivot_wider\n\n\n\n\nplace\n6時\n12時\n18時\n\n\n\n\n札幌\n12\n15\n13\n\n\n大阪\n20\n24\n22\n\n\n福岡\n23\n25\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer",
    "href": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ワイドからロング pivot_longer",
    "text": "ワイドからロング pivot_longer\n次に，このワイド型のデータをロング型に変換するため、R神によるpivot_longer()を使用\npivot_longer()の引数は，colsとnames_toとvalues_toです。\n\ncolsは，ロング型に変換するときに，どの変数を行にするかを指定\nnames_toは，ロング型に変換するときに，どの変数の値を使うかを指定\nvalues_toは，ロング型に変換するときに，どの変数の値を使うかを指定"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer-1",
    "href": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ワイドからロング pivot_longer",
    "text": "ワイドからロング pivot_longer\n以下のコードでは，6時，12時，18時の3つの変数を行に，timeという変数の値を列に，tempという変数の値を値にして，df_longという変数に代入\n\ndf_long &lt;- df_wide |&gt;\n    pivot_longer(\n        cols = c(\"6時\", \"12時\", \"18時\"), # 縦にする変数\n        names_to = \"time\", # 縦にした変数名\n        values_to = \"temp\") # 値\nkable(df_long) |&gt; kable_styling(font_size = 24)\n\n\n元のロング型に戻りました。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#整然データの例-output",
    "href": "prezemi_2023_03_presen.html#整然データの例-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "整然データの例",
    "text": "整然データの例\n\n\n\n\nplace\ntime\ntemp\n\n\n\n\n札幌\n6時\n12\n\n\n札幌\n12時\n15\n\n\n札幌\n18時\n13\n\n\n大阪\n6時\n20\n\n\n大阪\n12時\n24\n\n\n大阪\n18時\n22\n\n\n福岡\n6時\n23\n\n\n福岡\n12時\n25\n\n\n福岡\n18時\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider実践",
    "href": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider実践",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ロングからワイド pivot_wider実践",
    "text": "ロングからワイド pivot_wider実践\n以下では，time変数の値を列に，temp変数の値を値にして，df_wideという変数に代入\n\ndf_wide &lt;- df_weather |&gt;\n    pivot_wider(names_from = time, values_from = temp)\nkable(df_wide)\n\n\nこれでワイド型に変換できました。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider実践-output",
    "href": "prezemi_2023_03_presen.html#ロングからワイド-pivot_wider実践-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ロングからワイド pivot_wider実践",
    "text": "ロングからワイド pivot_wider実践\n\n\n\n\nplace\n6時\n12時\n18時\n\n\n\n\n札幌\n12\n15\n13\n\n\n大阪\n20\n24\n22\n\n\n福岡\n23\n25\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#pivot_wider実践",
    "href": "prezemi_2023_03_presen.html#pivot_wider実践",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "pivot_wider実践",
    "text": "pivot_wider実践\n以下では，time変数の値を列に，temp変数の値を値にして，df_wideという変数に代入\n\ndf_wide &lt;- df_weather |&gt;\n    pivot_wider(\n      names_from = time,\n      values_from = temp\n      )\nkable(df_wide)\n\n\nこれでワイド型に変換"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#pivot_wider実践-output",
    "href": "prezemi_2023_03_presen.html#pivot_wider実践-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "pivot_wider実践",
    "text": "pivot_wider実践\n\n\n\n\nplace\n6時\n12時\n18時\n\n\n\n\n札幌\n12\n15\n13\n\n\n大阪\n20\n24\n22\n\n\n福岡\n23\n25\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer-1-output",
    "href": "prezemi_2023_03_presen.html#ワイドからロング-pivot_longer-1-output",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "ワイドからロング pivot_longer",
    "text": "ワイドからロング pivot_longer\n\n\n\n\nplace\ntime\ntemp\n\n\n\n\n札幌\n6時\n12\n\n\n札幌\n12時\n15\n\n\n札幌\n18時\n13\n\n\n大阪\n6時\n20\n\n\n大阪\n12時\n24\n\n\n大阪\n18時\n22\n\n\n福岡\n6時\n23\n\n\n福岡\n12時\n25\n\n\n福岡\n18時\n25"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#作業ディレクトリ重要",
    "href": "prezemi_2023_03_presen.html#作業ディレクトリ重要",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "作業ディレクトリ(重要)",
    "text": "作業ディレクトリ(重要)\n\nRは、作業ディレクトリ(working direcotry)というフォルダを指定して、その中のファイルを読み込んだり、そこにファイルを書き出したりする。\nRが現在どのフォルダを作業ディレクトリとしているかは、getwd()関数で確認\n変更するときは、setwd()関数を使い、フォルダの(絶対)パスを指定\n\n\ngetwd() # 作業ディレクトリ"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データの型の確認",
    "href": "prezemi_2023_03_presen.html#データの型の確認",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データの型の確認",
    "text": "データの型の確認\n\n問題解答\n\n\ndfの変数であるtermの型を確認してください。\n\n\n\n# class()で確認\nclass(df$term) # オブジェクトの中身を確認\n\n[1] \"character\""
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データの読み込み-1",
    "href": "prezemi_2023_03_presen.html#データの読み込み-1",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データの読み込み",
    "text": "データの読み込み\n\n問題解答\n\n\ndfの変数であるtermの型を確認してください。\n\n\n\n# class()で確認\nclass(df$term) # オブジェクトの中身を確認\n\n[1] \"character\""
  },
  {
    "objectID": "prezemi_2023_03_presen.html#dplyrパッケージ",
    "href": "prezemi_2023_03_presen.html#dplyrパッケージ",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "dplyrパッケージ",
    "text": "dplyrパッケージ\ntidyverseパッケージ群のdplyrパッケージが大活躍\n\nselect() : 変数を選択する\nfilter() : データを抽出する\nmutate() : 変数を追加する\ngroup_by() : データをグループ化する\nsummarise() : データを集計する\narrange() : データを並び替える"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データフレームの変数を指定する",
    "href": "prezemi_2023_03_presen.html#データフレームの変数を指定する",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データフレームの変数を指定する",
    "text": "データフレームの変数を指定する\n\nデータ・フレームの変数を指定するには「$」を使う。\ndfの中のnetincomeを指定するなら，\n\n\ndf$netincome\n\n  [1]  14526  13632   9014   9515   4265  11362  15850  16011  13290  14668\n [11]  11382  17507  19152  16868  10332  15293 -45091 -22767  24495  27541\n [21]  -8856  14435  25293  35459  19373  33671  12790  14515 -14685  26149\n [31]  33668  23210  32101  22749  61403  73562 -11660  42439   2812   3430\n [41]    316    665   2337   1719   1860    567   2035   8401   7415   7016\n [51]   8666   9206  10787  12563   9904   8851  12879  16239  16381  15287\n [61]  15058  16683  17127  24463  33560  26981  43121  38216  32731  40511\n [71]  46971  52772  61353  46116  52344  72745   9380  10537  12908  13444\n [81]  17537  17810  20007  20040  20413  22182  23686  24530  27594  24494\n [91]  34714  52147  59426  60274  62462  65358  72180  71140  70527  66561\n[101]  64462  40506  46737  52434  52765  64764  79590 105196 126551 147010\n[111] 153698 148213 126142 109636  23813  -1401   6559   4059   7086   8039\n[121]   6681   7318  10382  14095  16328  27137   8388  19694   4632  11734\n\n\nとする。"
  },
  {
    "objectID": "prezemi_2023_03_presen.html#データフレームの変数の特定の値を指定する",
    "href": "prezemi_2023_03_presen.html#データフレームの変数の特定の値を指定する",
    "title": "プレゼミ2023  第3回 Rの使い方・データ操作・可視化",
    "section": "データフレームの変数の特定の値を指定する",
    "text": "データフレームの変数の特定の値を指定する\n\nデータ・フレームの変数の特定の値を指定するには「[]」を使う。\ndfの中のnetincomeの1行目を指定するなら，\n\n\ndf$netincome[1]\n\n[1] 14526\n\n\nあるいは行と列を指定する。\n\ndf[1, \"netincome\"]\n\n# A tibble: 1 × 1\n  netincome\n      &lt;dbl&gt;\n1     14526"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#今日の目標",
    "href": "prezemi_2023_04_presen.html#今日の目標",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "今日の目標",
    "text": "今日の目標\n第4回講義の到達目標は、\n\ndplyrパッケージを使って年度別・企業別の平均データを計算できる。\nデータを操作してグラフ作成のためのdata.frameを作る。\nggplot2パッケージでグラフを作成する。\ngeom_***関数で任意のグラフを作成する。"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#変数のタイプ",
    "href": "prezemi_2023_04_presen.html#変数のタイプ",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "変数のタイプ",
    "text": "変数のタイプ\n\n量的変数：数値で表される変数\n\n比例尺度：0が原点であり、間隔と比率に意味がある\n間隔尺度：目盛が等間隔になっているものでその間隔に意味がある\n\n質的変数\n\n名義尺度：他と区別し分類するための名称\n順序尺度：順序や大小には意味があるが間隔には意味がない（背後には連続的関係）"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#質的変数名義尺度",
    "href": "prezemi_2023_04_presen.html#質的変数名義尺度",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "質的変数：名義尺度",
    "text": "質的変数：名義尺度\nプログラミング言語では，データの型をいい感じに指定してくれることもあるが，分析の目的に応じて，自分で型を変換する必要もある。\n\n会社コード・企業名は名義尺度なので，ファクター型\n決算期は時間なので本来は間隔尺度だけれどファクター型\n連結基準は会計基準を表す数値なのでファクター型\n日経業種コードは産業分類を表しているのでファクター型\n決算月数，売上高，資産合計は比例尺度"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#よく使う演算希望",
    "href": "prezemi_2023_04_presen.html#よく使う演算希望",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "よく使う演算希望",
    "text": "よく使う演算希望\n基本的な演算は以下の通りです。\n\n+加算，-減算, /除算, *乗算\n^累乗, 2の2乗は2^2\nsqrt()関数で平方根の計算\nc()関数でベクトルの作成\nmean()関数で平均を計算\nseq()関数で数列の作成"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#本日のデータ",
    "href": "prezemi_2023_04_presen.html#本日のデータ",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "本日のデータ",
    "text": "本日のデータ\n本日のデータは以下から入手します。\n\n# データをウェブサイトから読み込む\ndf &lt;- read_csv(\"https://so-ichi.com/RandD_2022.csv\")\n# 中身チェック\nglimpse(df)\n\nRows: 57,823\nColumns: 8\n$ 会社コード     &lt;chr&gt; \"0000001\", \"0000001\", \"0000001\", \"0000001\", \"0000001\", …\n$ 企業名         &lt;chr&gt; \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋\",…\n$ 決算期         &lt;chr&gt; \"1999/03\", \"2000/03\", \"2001/03\", \"2002/03\", \"2003/03\", …\n$ 連結基準       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 日経業種コード &lt;dbl&gt; 235341, 235341, 235341, 235341, 235341, 235341, 235341,…\n$ 売上高         &lt;dbl&gt; 171944, 171031, 166644, 158006, 162773, 151534, 152638,…\n$ 資産合計       &lt;dbl&gt; 62109, 60885, 60599, 57069, 55373, 58562, 58506, 65049,…"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#変数",
    "href": "prezemi_2023_04_presen.html#変数",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "変数",
    "text": "変数\n\n会社コード &lt;文字列&gt; “0000001”\n企業名 &lt;文字列&gt; “極洋”\n決算期 &lt;文字列&gt; “1999/03”\n連結基準 &lt;数値&gt; 1\n決算月数 &lt;数値&gt; 12\n日経業種コード &lt;数値&gt; 235341\n売上高 &lt;数値&gt; 171944\n資産合計 &lt;数値&gt; 62109"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#ファクター型",
    "href": "prezemi_2023_04_presen.html#ファクター型",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "ファクター型",
    "text": "ファクター型\n文字列や数値でもカテゴリーを表す変数なら名義尺度として表すためファクター型にする。 as.factor()関数を使うと，ファクター型に変換できる。\n\n# ファクター型に変換\ndf &lt;- df %&gt;%\n  mutate(\n    会社コード = as.factor(会社コード),\n    企業名    = as.factor(企業名),\n    連結基準   = as.factor(連結基準)\n  )"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#年度データ",
    "href": "prezemi_2023_04_presen.html#年度データ",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "年度データ",
    "text": "年度データ\n決算期はYYYY/MMの形式の文字列なので，最初の4文字を取り出して，ファクター型に変換し，年度データ年度にする。\n\n# 年度データに変換\ndf &lt;- df %&gt;%\n  mutate(\n    年度 = as.factor(substr(決算期, 1, 4))\n  )"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#日経業種コード",
    "href": "prezemi_2023_04_presen.html#日経業種コード",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "日経業種コード",
    "text": "日経業種コード\n日経業種コードは6ケタの数値で，XYYZZZという構造になっている。\n\n最初の1ケタXは大分類：製造業 or 非製造業\n次の2ケタYYは中分類：業種分類で最も良く使う\n最後の3ケタZZZは小分類：\n\n\n# 日経業種コードをファクター型に変換\ndf &lt;- df %&gt;%\n  mutate(\n    中分類 = as.factor(substr(日経業種コード, 2, 3))\n  )"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#データの確認",
    "href": "prezemi_2023_04_presen.html#データの確認",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "データの確認",
    "text": "データの確認\n\n\n\ntable(df$中分類)\n\nと書いて、その行にカーソルがある状態で、Ctrl + Enterを押すと、\n\n\n\n\n\n\n\n\nVar1\nFreq\n\n\n\n\n01\n2215\n\n\n03\n934\n\n\n05\n432\n\n\n07\n3915\n\n\n09\n947\n\n\n11\n178\n\n\n13\n459\n\n\n15\n1066\n\n\n17\n906\n\n\n19\n2174\n\n\n21\n4338\n\n\n23\n5016\n\n\n25\n96\n\n\n27\n1651\n\n\n29\n253\n\n\n31\n1035\n\n\n33\n1936\n\n\n35\n203\n\n\n37\n131\n\n\n41\n2715\n\n\n43\n5926\n\n\n45\n3501\n\n\n52\n832\n\n\n53\n1674\n\n\n55\n670\n\n\n57\n640\n\n\n59\n261\n\n\n61\n96\n\n\n63\n746\n\n\n65\n625\n\n\n67\n285\n\n\n69\n214\n\n\n71\n11753\n\n\n\n\n\n\n\nという計算結果が表示されます。"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#産業別年度別の平均売上高",
    "href": "prezemi_2023_04_presen.html#産業別年度別の平均売上高",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "産業別・年度別の平均売上高",
    "text": "産業別・年度別の平均売上高\n平均売上高を計算するには，\n\nmean(df$売上高)\n\n[1] NA\n\n\nNAが買ってきました。欠損値を含むデータでは，mean()関数は計算できないので，na.rm = TRUEを指定する。\n\nmean(df$売上高, na.rm = TRUE)\n\n[1] 237440.1\n\n\n2.3744011^{5}百万円の平均売上となりました。 これは何の平均でしょう？"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-1",
    "href": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-1",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "産業別・年度別の平均売上高",
    "text": "産業別・年度別の平均売上高\nデータ全体の平均売上高を計算してもしょうがないので，年度別の平均売上高を計算します。 dplyrパッケージのgroup_by()関数を使います。\n\ndf %&gt;%\n  group_by(年度) %&gt;%\n  summarise( # 平均を計算\n    平均売上高 = mean(売上高, na.rm = TRUE)\n  ) %&gt;%\n  kable() %&gt;% # キレイな表\n  kable_styling(font_size = 20) # 表のフォント"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-1-output",
    "href": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-1-output",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "産業別・年度別の平均売上高",
    "text": "産業別・年度別の平均売上高\n\n\n\n\n年度\n平均売上高\n\n\n\n\n1999\n255766.1\n\n\n2000\n224302.7\n\n\n2001\n227620.8\n\n\n2002\n213032.5\n\n\n2003\n198553.5\n\n\n2004\n203542.8\n\n\n2005\n207810.1\n\n\n2006\n220106.6\n\n\n2007\n236113.2\n\n\n2008\n248639.5\n\n\n2009\n228526.9\n\n\n2010\n205485.7\n\n\n2011\n218087.2\n\n\n2012\n217523.3\n\n\n2013\n230111.3\n\n\n2014\n266500.4\n\n\n2015\n262710.7\n\n\n2016\n259274.2\n\n\n2017\n245861.7\n\n\n2018\n256235.8\n\n\n2019\n253216.1\n\n\n2020\n249300.4\n\n\n2021\n225741.6\n\n\n2022\n307183.2"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-2",
    "href": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-2",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "産業別・年度別の平均売上高",
    "text": "産業別・年度別の平均売上高\ngroup_by()に2つのカテゴリー変数を指定して，年度別・産業別の平均売上高を計算し，df_aveに保存する。\n\ndf_ave &lt;- df %&gt;%\n  group_by(年度,中分類) %&gt;%\n  summarise( # 平均を計算\n    平均売上高 = mean(売上高, na.rm = TRUE)\n  )\ndf_ave %&gt;%\n  kable() %&gt;% # キレイな表\n  kable_styling(font_size = 20) # 表のフォント"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-2-output",
    "href": "prezemi_2023_04_presen.html#産業別年度別の平均売上高-2-output",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "産業別・年度別の平均売上高",
    "text": "産業別・年度別の平均売上高\n\n\n\n\n年度\n中分類\n平均売上高\n\n\n\n\n1999\n01\n235111.20\n\n\n1999\n03\n114043.53\n\n\n1999\n05\n227788.69\n\n\n1999\n07\n150683.06\n\n\n1999\n09\n170619.60\n\n\n1999\n11\n19111.00\n\n\n1999\n13\n212352.61\n\n\n1999\n15\n130538.31\n\n\n1999\n17\n209405.31\n\n\n1999\n19\n129837.48\n\n\n1999\n21\n113125.51\n\n\n1999\n23\n384687.33\n\n\n1999\n25\n438882.00\n\n\n1999\n27\n735637.40\n\n\n1999\n29\n79112.67\n\n\n1999\n31\n110091.72\n\n\n1999\n33\n103860.75\n\n\n1999\n35\n322192.80\n\n\n1999\n37\n60618.33\n\n\n1999\n41\n244085.34\n\n\n1999\n43\n517397.45\n\n\n1999\n45\n145219.76\n\n\n1999\n52\n172870.00\n\n\n1999\n53\n144056.76\n\n\n1999\n55\n431970.96\n\n\n1999\n57\n127813.55\n\n\n1999\n59\n284701.44\n\n\n1999\n61\n681496.25\n\n\n1999\n63\n50885.62\n\n\n1999\n65\n934582.87\n\n\n1999\n67\n1557813.20\n\n\n1999\n69\n270996.89\n\n\n1999\n71\n51140.06\n\n\n2000\n01\n230287.96\n\n\n2000\n03\n103029.11\n\n\n2000\n05\n230823.19\n\n\n2000\n07\n138332.61\n\n\n2000\n09\n156106.92\n\n\n2000\n11\n29411.00\n\n\n2000\n13\n183103.25\n\n\n2000\n15\n129233.62\n\n\n2000\n17\n183121.65\n\n\n2000\n19\n115920.60\n\n\n2000\n21\n106258.76\n\n\n2000\n23\n364992.65\n\n\n2000\n25\n420262.75\n\n\n2000\n27\n684710.05\n\n\n2000\n29\n67796.58\n\n\n2000\n31\n101930.81\n\n\n2000\n33\n100306.97\n\n\n2000\n35\n274569.33\n\n\n2000\n37\n57976.00\n\n\n2000\n41\n229373.46\n\n\n2000\n43\n390112.36\n\n\n2000\n45\n135352.80\n\n\n2000\n52\n196563.88\n\n\n2000\n53\n125576.00\n\n\n2000\n55\n446957.11\n\n\n2000\n57\n129412.82\n\n\n2000\n59\n242285.64\n\n\n2000\n61\n722057.50\n\n\n2000\n63\n48783.83\n\n\n2000\n65\n806423.58\n\n\n2000\n67\n1565170.70\n\n\n2000\n69\n280207.89\n\n\n2000\n71\n46815.41\n\n\n2001\n01\n225827.55\n\n\n2001\n03\n108698.56\n\n\n2001\n05\n240506.56\n\n\n2001\n07\n139485.34\n\n\n2001\n09\n153182.46\n\n\n2001\n11\n29663.33\n\n\n2001\n13\n191209.15\n\n\n2001\n15\n132100.15\n\n\n2001\n17\n193071.29\n\n\n2001\n19\n124019.41\n\n\n2001\n21\n111361.90\n\n\n2001\n23\n401275.74\n\n\n2001\n25\n391303.75\n\n\n2001\n27\n707078.57\n\n\n2001\n29\n73683.09\n\n\n2001\n31\n112365.00\n\n\n2001\n33\n100513.23\n\n\n2001\n35\n263999.33\n\n\n2001\n37\n60644.00\n\n\n2001\n41\n234650.23\n\n\n2001\n43\n386878.88\n\n\n2001\n45\n128275.07\n\n\n2001\n52\n195877.80\n\n\n2001\n53\n100731.49\n\n\n2001\n55\n454687.19\n\n\n2001\n57\n134901.57\n\n\n2001\n59\n253801.64\n\n\n2001\n61\n764927.00\n\n\n2001\n63\n51505.76\n\n\n2001\n65\n948756.26\n\n\n2001\n67\n1518948.27\n\n\n2001\n69\n306703.22\n\n\n2001\n71\n46791.96\n\n\n2002\n01\n225564.40\n\n\n2002\n03\n106413.46\n\n\n2002\n05\n243881.31\n\n\n2002\n07\n139955.94\n\n\n2002\n09\n154902.44\n\n\n2002\n11\n22780.75\n\n\n2002\n13\n206557.47\n\n\n2002\n15\n125586.56\n\n\n2002\n17\n170786.60\n\n\n2002\n19\n120435.82\n\n\n2002\n21\n105235.32\n\n\n2002\n23\n362645.96\n\n\n2002\n25\n421737.75\n\n\n2002\n27\n746401.23\n\n\n2002\n29\n73244.00\n\n\n2002\n31\n95152.27\n\n\n2002\n33\n92180.12\n\n\n2002\n35\n257392.67\n\n\n2002\n37\n66441.25\n\n\n2002\n41\n222954.22\n\n\n2002\n43\n314704.52\n\n\n2002\n45\n136793.80\n\n\n2002\n52\n201416.64\n\n\n2002\n53\n99831.54\n\n\n2002\n55\n456247.78\n\n\n2002\n57\n136835.61\n\n\n2002\n59\n257327.45\n\n\n2002\n61\n720127.00\n\n\n2002\n63\n50309.38\n\n\n2002\n65\n1002305.21\n\n\n2002\n67\n1514281.00\n\n\n2002\n69\n310866.67\n\n\n2002\n71\n47223.92\n\n\n2003\n01\n221066.54\n\n\n2003\n03\n99866.23\n\n\n2003\n05\n244690.50\n\n\n2003\n07\n144463.39\n\n\n2003\n09\n152863.07\n\n\n2003\n11\n41371.40\n\n\n2003\n13\n211020.79\n\n\n2003\n15\n152398.02\n\n\n2003\n17\n234467.73\n\n\n2003\n19\n116717.19\n\n\n2003\n21\n101982.32\n\n\n2003\n23\n365529.72\n\n\n2003\n25\n449222.00\n\n\n2003\n27\n787520.59\n\n\n2003\n29\n75082.45\n\n\n2003\n31\n91893.38\n\n\n2003\n33\n89782.64\n\n\n2003\n35\n224465.14\n\n\n2003\n37\n60505.75\n\n\n2003\n41\n207466.11\n\n\n2003\n43\n182855.42\n\n\n2003\n45\n143994.50\n\n\n2003\n52\n170973.69\n\n\n2003\n53\n88001.69\n\n\n2003\n55\n475975.70\n\n\n2003\n57\n125852.58\n\n\n2003\n59\n273416.09\n\n\n2003\n61\n742887.75\n\n\n2003\n63\n51730.97\n\n\n2003\n65\n966322.89\n\n\n2003\n67\n1459045.00\n\n\n2003\n69\n312311.22\n\n\n2003\n71\n46198.13\n\n\n2004\n01\n228505.46\n\n\n2004\n03\n102265.71\n\n\n2004\n05\n254102.07\n\n\n2004\n07\n147812.85\n\n\n2004\n09\n138191.61\n\n\n2004\n11\n430282.43\n\n\n2004\n13\n219952.89\n\n\n2004\n15\n119633.05\n\n\n2004\n17\n246602.08\n\n\n2004\n19\n117052.37\n\n\n2004\n21\n103709.34\n\n\n2004\n23\n371894.09\n\n\n2004\n25\n430288.00\n\n\n2004\n27\n792281.82\n\n\n2004\n29\n79805.64\n\n\n2004\n31\n105828.85\n\n\n2004\n33\n89136.05\n\n\n2004\n35\n215618.71\n\n\n2004\n37\n62865.00\n\n\n2004\n41\n202436.59\n\n\n2004\n43\n218730.83\n\n\n2004\n45\n151267.44\n\n\n2004\n52\n179285.50\n\n\n2004\n53\n86043.33\n\n\n2004\n55\n469985.48\n\n\n2004\n57\n135583.36\n\n\n2004\n59\n304353.18\n\n\n2004\n61\n680314.00\n\n\n2004\n63\n52741.62\n\n\n2004\n65\n888690.29\n\n\n2004\n67\n1424144.64\n\n\n2004\n69\n316614.44\n\n\n2004\n71\n47858.88\n\n\n2005\n01\n222657.54\n\n\n2005\n03\n109266.58\n\n\n2005\n05\n232847.24\n\n\n2005\n07\n157078.55\n\n\n2005\n09\n137450.44\n\n\n2005\n11\n504569.14\n\n\n2005\n13\n240571.16\n\n\n2005\n15\n120985.51\n\n\n2005\n17\n284674.55\n\n\n2005\n19\n123218.05\n\n\n2005\n21\n114519.84\n\n\n2005\n23\n377974.74\n\n\n2005\n25\n463240.50\n\n\n2005\n27\n838708.32\n\n\n2005\n29\n82881.36\n\n\n2005\n31\n116428.29\n\n\n2005\n33\n93512.92\n\n\n2005\n35\n115198.14\n\n\n2005\n37\n64489.75\n\n\n2005\n41\n209164.57\n\n\n2005\n43\n235339.19\n\n\n2005\n45\n156188.86\n\n\n2005\n52\n172506.62\n\n\n2005\n53\n85495.80\n\n\n2005\n55\n456744.30\n\n\n2005\n57\n144597.96\n\n\n2005\n59\n350248.91\n\n\n2005\n61\n721314.00\n\n\n2005\n63\n55292.33\n\n\n2005\n65\n864251.73\n\n\n2005\n67\n1467334.55\n\n\n2005\n69\n326648.11\n\n\n2005\n71\n46492.65\n\n\n2006\n01\n220404.21\n\n\n2006\n03\n114884.63\n\n\n2006\n05\n235098.53\n\n\n2006\n07\n186844.83\n\n\n2006\n09\n178450.68\n\n\n2006\n11\n542420.88\n\n\n2006\n13\n264642.95\n\n\n2006\n15\n123993.26\n\n\n2006\n17\n318802.21\n\n\n2006\n19\n135401.65\n\n\n2006\n21\n122682.53\n\n\n2006\n23\n392514.07\n\n\n2006\n25\n497415.00\n\n\n2006\n27\n928941.01\n\n\n2006\n29\n83799.18\n\n\n2006\n31\n124947.64\n\n\n2006\n33\n99009.49\n\n\n2006\n35\n119489.43\n\n\n2006\n37\n77071.25\n\n\n2006\n41\n212498.13\n\n\n2006\n43\n258922.50\n\n\n2006\n45\n188022.89\n\n\n2006\n52\n174670.53\n\n\n2006\n53\n88459.30\n\n\n2006\n55\n466909.15\n\n\n2006\n57\n153999.12\n\n\n2006\n59\n409942.18\n\n\n2006\n61\n755831.25\n\n\n2006\n63\n57424.39\n\n\n2006\n65\n877757.23\n\n\n2006\n67\n1495562.09\n\n\n2006\n69\n351626.67\n\n\n2006\n71\n46337.11\n\n\n2007\n01\n226442.90\n\n\n2007\n03\n127887.21\n\n\n2007\n05\n243493.59\n\n\n2007\n07\n200710.27\n\n\n2007\n09\n174043.97\n\n\n2007\n11\n643533.71\n\n\n2007\n13\n293882.11\n\n\n2007\n15\n147116.84\n\n\n2007\n17\n348105.24\n\n\n2007\n19\n160199.51\n\n\n2007\n21\n139048.88\n\n\n2007\n23\n415903.37\n\n\n2007\n25\n545135.00\n\n\n2007\n27\n1039732.43\n\n\n2007\n29\n101361.30\n\n\n2007\n31\n131121.95\n\n\n2007\n33\n102630.23\n\n\n2007\n35\n122461.57\n\n\n2007\n37\n267014.20\n\n\n2007\n41\n218883.16\n\n\n2007\n43\n282104.55\n\n\n2007\n45\n200886.90\n\n\n2007\n52\n179241.23\n\n\n2007\n53\n99570.38\n\n\n2007\n55\n487965.39\n\n\n2007\n57\n160651.48\n\n\n2007\n59\n464998.45\n\n\n2007\n61\n916734.00\n\n\n2007\n63\n61111.84\n\n\n2007\n65\n968435.55\n\n\n2007\n67\n1514762.36\n\n\n2007\n69\n385260.44\n\n\n2007\n71\n48766.98\n\n\n2008\n01\n255319.10\n\n\n2008\n03\n132341.31\n\n\n2008\n05\n245015.83\n\n\n2008\n07\n209279.19\n\n\n2008\n09\n170783.79\n\n\n2008\n11\n729847.43\n\n\n2008\n13\n294236.68\n\n\n2008\n15\n147950.24\n\n\n2008\n17\n389014.18\n\n\n2008\n19\n176532.54\n\n\n2008\n21\n152100.93\n\n\n2008\n23\n430358.74\n\n\n2008\n25\n576846.00\n\n\n2008\n27\n1142710.38\n\n\n2008\n29\n110696.50\n\n\n2008\n31\n140454.62\n\n\n2008\n33\n102792.82\n\n\n2008\n35\n118988.14\n\n\n2008\n37\n328706.60\n\n\n2008\n41\n219516.13\n\n\n2008\n43\n309783.84\n\n\n2008\n45\n223624.71\n\n\n2008\n52\n192767.78\n\n\n2008\n53\n98084.71\n\n\n2008\n55\n489989.57\n\n\n2008\n57\n167079.24\n\n\n2008\n59\n564438.64\n\n\n2008\n61\n935553.50\n\n\n2008\n63\n62651.52\n\n\n2008\n65\n933945.17\n\n\n2008\n67\n1582548.73\n\n\n2008\n69\n412884.78\n\n\n2008\n71\n50336.74\n\n\n2009\n01\n268436.67\n\n\n2009\n03\n119730.82\n\n\n2009\n05\n237048.00\n\n\n2009\n07\n189204.16\n\n\n2009\n09\n195315.86\n\n\n2009\n11\n719254.29\n\n\n2009\n13\n247865.95\n\n\n2009\n15\n126685.65\n\n\n2009\n17\n390487.32\n\n\n2009\n19\n150543.27\n\n\n2009\n21\n135658.37\n\n\n2009\n23\n361308.56\n\n\n2009\n25\n547487.50\n\n\n2009\n27\n912501.07\n\n\n2009\n29\n103105.10\n\n\n2009\n31\n123265.05\n\n\n2009\n33\n98812.40\n\n\n2009\n35\n101356.12\n\n\n2009\n37\n264639.00\n\n\n2009\n41\n212906.34\n\n\n2009\n43\n296062.92\n\n\n2009\n45\n232690.72\n\n\n2009\n52\n151322.69\n\n\n2009\n53\n95702.91\n\n\n2009\n55\n477304.96\n\n\n2009\n57\n164531.64\n\n\n2009\n59\n534108.45\n\n\n2009\n61\n849825.00\n\n\n2009\n63\n59313.06\n\n\n2009\n65\n982251.41\n\n\n2009\n67\n1669149.91\n\n\n2009\n69\n445274.56\n\n\n2009\n71\n50347.53\n\n\n2010\n01\n257485.09\n\n\n2010\n03\n106829.31\n\n\n2010\n05\n217950.78\n\n\n2010\n07\n170465.15\n\n\n2010\n09\n203211.80\n\n\n2010\n11\n559966.71\n\n\n2010\n13\n255847.47\n\n\n2010\n15\n116734.91\n\n\n2010\n17\n281348.66\n\n\n2010\n19\n128741.72\n\n\n2010\n21\n112013.76\n\n\n2010\n23\n337002.93\n\n\n2010\n25\n534243.50\n\n\n2010\n27\n813505.15\n\n\n2010\n29\n91570.20\n\n\n2010\n31\n116896.31\n\n\n2010\n33\n93062.99\n\n\n2010\n35\n98936.00\n\n\n2010\n37\n206867.33\n\n\n2010\n41\n196203.55\n\n\n2010\n43\n253261.12\n\n\n2010\n45\n226614.48\n\n\n2010\n52\n146954.83\n\n\n2010\n53\n91504.26\n\n\n2010\n55\n452582.68\n\n\n2010\n57\n159728.84\n\n\n2010\n59\n377236.00\n\n\n2010\n61\n431156.33\n\n\n2010\n63\n51631.03\n\n\n2010\n65\n937824.74\n\n\n2010\n67\n1483752.36\n\n\n2010\n69\n384136.22\n\n\n2010\n71\n46562.94\n\n\n2011\n01\n250726.19\n\n\n2011\n03\n113857.15\n\n\n2011\n05\n210890.37\n\n\n2011\n07\n180954.71\n\n\n2011\n09\n198611.49\n\n\n2011\n11\n1763394.12\n\n\n2011\n13\n285431.00\n\n\n2011\n15\n128594.70\n\n\n2011\n17\n318540.49\n\n\n2011\n19\n149443.11\n\n\n2011\n21\n122966.50\n\n\n2011\n23\n354113.11\n\n\n2011\n25\n498787.25\n\n\n2011\n27\n863296.42\n\n\n2011\n29\n96164.90\n\n\n2011\n31\n123102.89\n\n\n2011\n33\n93134.40\n\n\n2011\n35\n103639.50\n\n\n2011\n37\n233924.33\n\n\n2011\n41\n180425.45\n\n\n2011\n43\n279338.56\n\n\n2011\n45\n227148.56\n\n\n2011\n52\n149568.06\n\n\n2011\n53\n87378.86\n\n\n2011\n55\n445825.71\n\n\n2011\n57\n165815.24\n\n\n2011\n59\n432775.55\n\n\n2011\n61\n450593.00\n\n\n2011\n63\n57312.28\n\n\n2011\n65\n934634.71\n\n\n2011\n67\n1564123.00\n\n\n2011\n69\n413578.11\n\n\n2011\n71\n45649.79\n\n\n2012\n01\n258566.98\n\n\n2012\n03\n119029.90\n\n\n2012\n05\n209427.95\n\n\n2012\n07\n181800.36\n\n\n2012\n09\n212748.95\n\n\n2012\n11\n1998481.88\n\n\n2012\n13\n282912.20\n\n\n2012\n15\n149670.15\n\n\n2012\n17\n320431.67\n\n\n2012\n19\n143918.49\n\n\n2012\n21\n128103.95\n\n\n2012\n23\n336294.27\n\n\n2012\n25\n511509.00\n\n\n2012\n27\n845107.36\n\n\n2012\n29\n99701.60\n\n\n2012\n31\n118211.48\n\n\n2012\n33\n92744.05\n\n\n2012\n35\n125224.89\n\n\n2012\n37\n279623.00\n\n\n2012\n41\n186370.04\n\n\n2012\n43\n293826.52\n\n\n2012\n45\n222833.94\n\n\n2012\n52\n144385.28\n\n\n2012\n53\n80948.52\n\n\n2012\n55\n444034.79\n\n\n2012\n57\n173259.58\n\n\n2012\n59\n411778.00\n\n\n2012\n61\n672067.00\n\n\n2012\n63\n59957.00\n\n\n2012\n65\n926561.42\n\n\n2012\n67\n1593354.73\n\n\n2012\n69\n459868.67\n\n\n2012\n71\n46893.95\n\n\n2013\n01\n235364.24\n\n\n2013\n03\n122011.10\n\n\n2013\n05\n211644.63\n\n\n2013\n07\n180018.61\n\n\n2013\n09\n271645.23\n\n\n2013\n11\n2077189.12\n\n\n2013\n13\n337544.44\n\n\n2013\n15\n143249.06\n\n\n2013\n17\n317851.05\n\n\n2013\n19\n147299.08\n\n\n2013\n21\n127838.53\n\n\n2013\n23\n344246.31\n\n\n2013\n25\n502863.25\n\n\n2013\n27\n944686.64\n\n\n2013\n29\n106023.30\n\n\n2013\n31\n116493.11\n\n\n2013\n33\n92379.34\n\n\n2013\n35\n127797.33\n\n\n2013\n37\n280096.33\n\n\n2013\n41\n191569.01\n\n\n2013\n43\n363833.37\n\n\n2013\n45\n235212.01\n\n\n2013\n52\n134219.17\n\n\n2013\n53\n85941.36\n\n\n2013\n55\n456405.43\n\n\n2013\n57\n176077.73\n\n\n2013\n59\n441976.27\n\n\n2013\n61\n698582.25\n\n\n2013\n63\n61315.66\n\n\n2013\n65\n1003697.07\n\n\n2013\n67\n1541231.83\n\n\n2013\n69\n494572.11\n\n\n2013\n71\n49319.00\n\n\n2014\n01\n262697.00\n\n\n2014\n03\n129905.80\n\n\n2014\n05\n221695.85\n\n\n2014\n07\n199149.09\n\n\n2014\n09\n274207.38\n\n\n2014\n11\n2301462.00\n\n\n2014\n13\n358441.11\n\n\n2014\n15\n131121.34\n\n\n2014\n17\n386115.42\n\n\n2014\n19\n160956.15\n\n\n2014\n21\n148403.31\n\n\n2014\n23\n460875.18\n\n\n2014\n25\n550608.50\n\n\n2014\n27\n1204023.99\n\n\n2014\n29\n136009.40\n\n\n2014\n31\n138898.33\n\n\n2014\n33\n100185.29\n\n\n2014\n35\n127681.90\n\n\n2014\n37\n275450.14\n\n\n2014\n41\n210217.40\n\n\n2014\n43\n382542.70\n\n\n2014\n45\n252178.35\n\n\n2014\n52\n142373.02\n\n\n2014\n53\n106309.79\n\n\n2014\n55\n476343.71\n\n\n2014\n57\n206164.96\n\n\n2014\n59\n505044.27\n\n\n2014\n61\n739103.50\n\n\n2014\n63\n63544.64\n\n\n2014\n65\n1208637.83\n\n\n2014\n67\n1713741.83\n\n\n2014\n69\n542201.89\n\n\n2014\n71\n76957.25\n\n\n2015\n01\n257870.09\n\n\n2015\n03\n129478.18\n\n\n2015\n05\n222717.30\n\n\n2015\n07\n214098.57\n\n\n2015\n09\n241542.50\n\n\n2015\n11\n1828500.44\n\n\n2015\n13\n392880.35\n\n\n2015\n15\n134732.38\n\n\n2015\n17\n407596.35\n\n\n2015\n19\n188890.52\n\n\n2015\n21\n170151.18\n\n\n2015\n23\n453447.58\n\n\n2015\n25\n616025.00\n\n\n2015\n27\n1249578.81\n\n\n2015\n29\n148538.40\n\n\n2015\n31\n141654.86\n\n\n2015\n33\n98071.17\n\n\n2015\n35\n176771.09\n\n\n2015\n37\n254856.86\n\n\n2015\n41\n223573.33\n\n\n2015\n43\n323570.48\n\n\n2015\n45\n257231.12\n\n\n2015\n52\n165629.22\n\n\n2015\n53\n118195.24\n\n\n2015\n55\n476020.79\n\n\n2015\n57\n207483.79\n\n\n2015\n59\n541362.64\n\n\n2015\n61\n783750.75\n\n\n2015\n63\n67248.58\n\n\n2015\n65\n1164427.68\n\n\n2015\n67\n1655036.54\n\n\n2015\n69\n565797.11\n\n\n2015\n71\n74815.69\n\n\n2016\n01\n300231.28\n\n\n2016\n03\n129202.80\n\n\n2016\n05\n227551.70\n\n\n2016\n07\n228564.75\n\n\n2016\n09\n237092.77\n\n\n2016\n11\n2069161.82\n\n\n2016\n13\n375991.57\n\n\n2016\n15\n136253.93\n\n\n2016\n17\n354538.72\n\n\n2016\n19\n186986.39\n\n\n2016\n21\n171809.36\n\n\n2016\n23\n414450.00\n\n\n2016\n25\n630813.75\n\n\n2016\n27\n1236167.85\n\n\n2016\n29\n133791.91\n\n\n2016\n31\n143102.27\n\n\n2016\n33\n97224.49\n\n\n2016\n35\n179511.91\n\n\n2016\n37\n218019.86\n\n\n2016\n41\n225980.39\n\n\n2016\n43\n327356.61\n\n\n2016\n45\n268256.76\n\n\n2016\n52\n166078.74\n\n\n2016\n53\n117781.52\n\n\n2016\n55\n490856.24\n\n\n2016\n57\n209266.81\n\n\n2016\n59\n508251.45\n\n\n2016\n61\n801049.00\n\n\n2016\n63\n71319.79\n\n\n2016\n65\n1200470.34\n\n\n2016\n67\n1557630.08\n\n\n2016\n69\n475756.89\n\n\n2016\n71\n67305.05\n\n\n2017\n01\n302108.86\n\n\n2017\n03\n126817.15\n\n\n2017\n05\n227870.25\n\n\n2017\n07\n221204.07\n\n\n2017\n09\n218304.90\n\n\n2017\n11\n1938147.64\n\n\n2017\n13\n382397.53\n\n\n2017\n15\n139404.76\n\n\n2017\n17\n336312.72\n\n\n2017\n19\n160226.02\n\n\n2017\n21\n172723.46\n\n\n2017\n23\n365238.04\n\n\n2017\n25\n604573.25\n\n\n2017\n27\n1206537.85\n\n\n2017\n29\n134372.27\n\n\n2017\n31\n153684.00\n\n\n2017\n33\n95823.35\n\n\n2017\n35\n179740.73\n\n\n2017\n37\n196658.86\n\n\n2017\n41\n226538.86\n\n\n2017\n43\n311258.40\n\n\n2017\n45\n267517.43\n\n\n2017\n52\n171250.58\n\n\n2017\n53\n118803.00\n\n\n2017\n55\n490851.48\n\n\n2017\n57\n219030.87\n\n\n2017\n59\n435980.91\n\n\n2017\n61\n782486.75\n\n\n2017\n63\n73672.76\n\n\n2017\n65\n1050603.61\n\n\n2017\n67\n1449523.92\n\n\n2017\n69\n414956.00\n\n\n2017\n71\n69016.33\n\n\n2018\n01\n282877.36\n\n\n2018\n03\n131440.24\n\n\n2018\n05\n240179.40\n\n\n2018\n07\n224153.37\n\n\n2018\n09\n214427.42\n\n\n2018\n11\n1726921.10\n\n\n2018\n13\n339565.75\n\n\n2018\n15\n148173.13\n\n\n2018\n17\n597991.54\n\n\n2018\n19\n181211.67\n\n\n2018\n21\n187952.21\n\n\n2018\n23\n400826.27\n\n\n2018\n25\n610545.50\n\n\n2018\n27\n1247739.12\n\n\n2018\n29\n154638.00\n\n\n2018\n31\n153656.08\n\n\n2018\n33\n97685.43\n\n\n2018\n35\n189261.00\n\n\n2018\n37\n211519.57\n\n\n2018\n41\n231766.17\n\n\n2018\n43\n303871.95\n\n\n2018\n45\n270446.91\n\n\n2018\n52\n181901.23\n\n\n2018\n53\n123445.69\n\n\n2018\n55\n504322.03\n\n\n2018\n57\n227208.68\n\n\n2018\n59\n486839.55\n\n\n2018\n61\n857679.00\n\n\n2018\n63\n79390.76\n\n\n2018\n65\n1391766.24\n\n\n2018\n67\n1565905.23\n\n\n2018\n69\n461443.78\n\n\n2018\n71\n68354.91\n\n\n2019\n01\n262069.74\n\n\n2019\n03\n138311.32\n\n\n2019\n05\n237228.43\n\n\n2019\n07\n216890.95\n\n\n2019\n09\n226203.04\n\n\n2019\n11\n2126909.44\n\n\n2019\n13\n485841.95\n\n\n2019\n15\n158525.38\n\n\n2019\n17\n506219.22\n\n\n2019\n19\n180708.92\n\n\n2019\n21\n196303.14\n\n\n2019\n23\n372967.76\n\n\n2019\n25\n600866.25\n\n\n2019\n27\n1309099.31\n\n\n2019\n29\n164162.09\n\n\n2019\n31\n137573.94\n\n\n2019\n33\n101831.24\n\n\n2019\n35\n181357.58\n\n\n2019\n37\n318721.25\n\n\n2019\n41\n239152.50\n\n\n2019\n43\n367170.14\n\n\n2019\n45\n278802.46\n\n\n2019\n52\n170791.94\n\n\n2019\n53\n125104.78\n\n\n2019\n55\n518260.72\n\n\n2019\n57\n241689.84\n\n\n2019\n59\n389020.64\n\n\n2019\n61\n906489.00\n\n\n2019\n63\n83129.73\n\n\n2019\n65\n998668.08\n\n\n2019\n67\n1545394.36\n\n\n2019\n69\n498858.33\n\n\n2019\n71\n65104.54\n\n\n2020\n01\n259215.87\n\n\n2020\n03\n177307.98\n\n\n2020\n05\n244869.10\n\n\n2020\n07\n210770.06\n\n\n2020\n09\n241079.08\n\n\n2020\n11\n1955329.20\n\n\n2020\n13\n424153.50\n\n\n2020\n15\n151706.11\n\n\n2020\n17\n398135.21\n\n\n2020\n19\n164414.76\n\n\n2020\n21\n173481.40\n\n\n2020\n23\n353354.08\n\n\n2020\n25\n643692.50\n\n\n2020\n27\n1635723.05\n\n\n2020\n29\n162943.91\n\n\n2020\n31\n129040.57\n\n\n2020\n33\n98890.02\n\n\n2020\n35\n178913.92\n\n\n2020\n37\n196802.00\n\n\n2020\n41\n247646.09\n\n\n2020\n43\n358774.71\n\n\n2020\n45\n267325.51\n\n\n2020\n52\n177347.57\n\n\n2020\n53\n119610.73\n\n\n2020\n55\n511412.14\n\n\n2020\n57\n231565.94\n\n\n2020\n59\n357720.64\n\n\n2020\n61\n966318.60\n\n\n2020\n63\n80113.09\n\n\n2020\n65\n952343.20\n\n\n2020\n67\n1431713.47\n\n\n2020\n69\n494910.11\n\n\n2020\n71\n62389.81\n\n\n2021\n01\n261038.88\n\n\n2021\n03\n154232.47\n\n\n2021\n05\n231363.60\n\n\n2021\n07\n203656.76\n\n\n2021\n09\n259568.29\n\n\n2021\n11\n1506441.10\n\n\n2021\n13\n328414.32\n\n\n2021\n15\n149948.65\n\n\n2021\n17\n337316.97\n\n\n2021\n19\n158764.71\n\n\n2021\n21\n159399.79\n\n\n2021\n23\n397320.29\n\n\n2021\n25\n565674.00\n\n\n2021\n27\n1074808.71\n\n\n2021\n29\n162734.45\n\n\n2021\n31\n124435.48\n\n\n2021\n33\n94321.98\n\n\n2021\n35\n164800.42\n\n\n2021\n37\n253755.29\n\n\n2021\n41\n227755.04\n\n\n2021\n43\n331724.19\n\n\n2021\n45\n262148.83\n\n\n2021\n52\n174393.67\n\n\n2021\n53\n119345.96\n\n\n2021\n55\n337168.21\n\n\n2021\n57\n245576.12\n\n\n2021\n59\n325493.55\n\n\n2021\n61\n356044.20\n\n\n2021\n63\n80004.21\n\n\n2021\n65\n972887.71\n\n\n2021\n67\n1360602.07\n\n\n2021\n69\n468718.22\n\n\n2021\n71\n60077.29\n\n\n2022\n01\n193211.24\n\n\n2022\n03\n142574.11\n\n\n2022\n05\n285272.12\n\n\n2022\n07\n228616.75\n\n\n2022\n09\n316732.67\n\n\n2022\n11\n2314302.11\n\n\n2022\n13\n73827.86\n\n\n2022\n15\n125329.16\n\n\n2022\n17\n485166.41\n\n\n2022\n19\n223281.31\n\n\n2022\n21\n183546.36\n\n\n2022\n23\n472942.65\n\n\n2022\n25\n549175.00\n\n\n2022\n27\n1275847.92\n\n\n2022\n29\n134323.90\n\n\n2022\n31\n186065.82\n\n\n2022\n33\n129817.37\n\n\n2022\n35\n323101.67\n\n\n2022\n37\n101761.60\n\n\n2022\n41\n282741.71\n\n\n2022\n43\n487104.06\n\n\n2022\n45\n296013.42\n\n\n2022\n52\n241641.98\n\n\n2022\n53\n187779.18\n\n\n2022\n55\n363635.24\n\n\n2022\n57\n285783.04\n\n\n2022\n59\n475465.10\n\n\n2022\n61\n586534.00\n\n\n2022\n63\n106232.34\n\n\n2022\n65\n1473049.62\n\n\n2022\n67\n1483928.00\n\n\n2022\n69\n674111.00\n\n\n2022\n71\n82889.20"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#ggplot2パッケージ",
    "href": "prezemi_2023_04_presen.html#ggplot2パッケージ",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "ggplot2パッケージ",
    "text": "ggplot2パッケージ\n\nggplot2パッケージは，グラフを作成するためのパッケージです。\nggplot()関数は引数にデータフレームをとります。\naes()関数で，x軸とy軸やグループ，色を指定します。\ngeom_***()関数で，グラフの種類を指定します。\n+でグラフにレイヤーを追加します。\ntheme()関数でグラフの見た目を指定します。\nlabs()関数でグラフのタイトルや軸ラベルを指定します。"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#ggplot2パッケージ-1",
    "href": "prezemi_2023_04_presen.html#ggplot2パッケージ-1",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "ggplot2パッケージ",
    "text": "ggplot2パッケージ\n\ng &lt;- ggplot(df_ave) +\n  aes(x = 年度,\n      y = 平均売上高,\n      group = 中分類,\n      color = 中分類\n      ) +\n  geom_line() + geom_point() # 線と点を追加\ng &lt;- g + xlab(\"年度\") + ylab(\"平均売上高\") # 軸ラベル\ng &lt;- g + mystyle\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#ggplot2パッケージ-1-output",
    "href": "prezemi_2023_04_presen.html#ggplot2パッケージ-1-output",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "ggplot2パッケージ",
    "text": "ggplot2パッケージ"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#plotlyパッケージ",
    "href": "prezemi_2023_04_presen.html#plotlyパッケージ",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "plotlyパッケージ",
    "text": "plotlyパッケージ\n先ほど作成したグラフを動的なものにするには，plotlyパッケージを使います。\n\nlibrary(plotly)\nlibrary(leaflet)\nggplotly(g)"
  },
  {
    "objectID": "prezemi_2023_04_presen.html#plotlyパッケージ-output",
    "href": "prezemi_2023_04_presen.html#plotlyパッケージ-output",
    "title": "プレゼミ2023  第4回 記述統計とデータの可視化・視覚化",
    "section": "plotlyパッケージ",
    "text": "plotlyパッケージ"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#おまけの分析事例",
    "href": "prezemi_2023_05_omake.html#おまけの分析事例",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "おまけの分析事例",
    "text": "おまけの分析事例\n必要なパッケージを読み込む。 いつものtidyverseとグラフの見た目を変えるggthemesとキレイな表を作るknitrとkableExtraを読み込む。\n\nlibrary(tidyverse) # データ操作全般\nlibrary(ggthemes) # グラフのスタイル拡張\nlibrary(knitr) # 表を作る\nlibrary(kableExtra) # 表を作る"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#作業ディレクトリの場所",
    "href": "prezemi_2023_05_omake.html#作業ディレクトリの場所",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "作業ディレクトリの場所",
    "text": "作業ディレクトリの場所\nまずは作業ディレクトリの場所にファイルがあることを確認しましょう。 いまRが使っている作業ディレクトリの場所はgetwd()で確認できます。\n\ngetwd()\n\n[1] \"/Users/soichi/Library/CloudStorage/Dropbox/R/presemi\""
  },
  {
    "objectID": "prezemi_2023_05_omake.html#データの読み込み",
    "href": "prezemi_2023_05_omake.html#データの読み込み",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "データの読み込み",
    "text": "データの読み込み\nここでは、作業ディレクトリの中にdataというフォルダがあり、 その中にotomasa04.csvを保存してある、という前提で話を進めます。\n\ndf &lt;- read_csv(\"data/otomasa_04.csv\")\n\nこれで財務データが入ったデータフレームdfができました。"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#グラフのスタイルを保存",
    "href": "prezemi_2023_05_omake.html#グラフのスタイルを保存",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "グラフのスタイルを保存",
    "text": "グラフのスタイルを保存\nmystyleというオブジェクトに保存しておく。 listで設定をまとめる。\n\nmystyle &lt;- list( # mystyleとして設定を保存\n  theme_economist(), # ggthemesが必要\n  theme(text = element_text(\n    size = 18,  #  フォントサイズ\n    family = \"HiraKakuProN-W3\" # mac用フォント\n    )))\n\nwindowsの人は family = “HiraKakuProN-W3” は消してください。"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#データの確認",
    "href": "prezemi_2023_05_omake.html#データの確認",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "データの確認",
    "text": "データの確認\nデータの中身を確認するなら、おなじみのglimpse()を使う。\n\nglimpse(df)\n\nRows: 83,637\nColumns: 35\n$ 日経会社コード                   &lt;chr&gt; \"0000001\", \"0000001\", \"0000001\", \"000…\n$ 企業名称                         &lt;chr&gt; \"極洋\", \"極洋\", \"極洋\", \"極洋\", \"極洋…\n$ 決算期                           &lt;chr&gt; \"1995/03\", \"1996/03\", \"1997/03\", \"199…\n$ 決算種別                         &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 1…\n$ 連結基準                         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ 決算月数                         &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 1…\n$ 日経業種コード                   &lt;dbl&gt; 235341, 235341, 235341, 235341, 23534…\n$ 売上高                           &lt;dbl&gt; 173803, 175202, 183640, 176022, 17194…\n$ 特別利益                         &lt;dbl&gt; 778, 903, 186, 287, 79, 1429, 282, NA…\n$ 特別損失                         &lt;dbl&gt; 778, 708, 783, 852, 1271, 2936, 478, …\n$ 売上総利益                       &lt;dbl&gt; 14314, 12327, 14222, 14225, 15206, 15…\n$ 営業利益                         &lt;dbl&gt; 1059, -148, 1362, 739, 2069, 2842, 23…\n$ 経常利益                         &lt;dbl&gt; 1049, -82, 1058, 535, 1600, 2299, 194…\n$ 当期純利益                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 親会社株主当期純利益             &lt;dbl&gt; 797, -64, 236, -377, -251, 327, 927, …\n$ `支払利息・割引料`               &lt;dbl&gt; 1394, 1011, 830, 884, 736, 683, 661, …\n$ `法人税・住民税及び事業税合計`   &lt;dbl&gt; 271, 159, 213, 341, 620, 606, 908, 85…\n$ 法人税等調整額                   &lt;dbl&gt; NA, NA, NA, NA, NA, -178, -114, 44, -…\n$ 減価償却費                       &lt;dbl&gt; NA, NA, NA, 42, 34, 84, 92, 85, 81, 8…\n$ のれん償却額                     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 1, NA, NA…\n$ `受取利息・配当金`               &lt;dbl&gt; 317, 219, 169, 195, 187, 145, 131, 97…\n$ 持分法を適用した場合の投資損益   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 支払利息                         &lt;dbl&gt; NA, NA, NA, NA, NA, 683, 661, 536, 50…\n$ 税金等調整前当期純利益           &lt;dbl&gt; 1049, 112, 461, -29, 408, 791, 1750, …\n$ 税金等調整前当期利益             &lt;dbl&gt; 1049, 112, 461, -29, 408, 791, 1750, …\n$ 販売費及び一般管理費             &lt;dbl&gt; 13254, 12476, 12859, 13486, 13136, 12…\n$ 売上原価                         &lt;dbl&gt; 159489, 162875, 169418, 161796, 15673…\n$ 資産合計                         &lt;dbl&gt; 61692, 63287, 65883, 62766, 62109, 60…\n$ `受取利息・割引料・有価証券利息` &lt;dbl&gt; 134, 68, 49, 69, 72, 59, 47, 59, 30, …\n$ `短期借入金・社債合計`           &lt;dbl&gt; 29693, 29887, 33371, 30942, 30937, 27…\n$ `長期借入金・社債・転換社債`     &lt;dbl&gt; 5543, 5020, 5635, 5080, 4798, 5816, 4…\n$ `1年内返済の長期借入金`          &lt;dbl&gt; NA, NA, NA, NA, NA, 1109, 1267, 1449,…\n$ コマーシャルペーパー             &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ リース債務                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ 長期リース債務                   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#カテゴリー変数",
    "href": "prezemi_2023_05_omake.html#カテゴリー変数",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "カテゴリー変数",
    "text": "カテゴリー変数\nデータフレームdfの中には、文字列(character)として、\n\n日経会社コード\n企業名称\n決算期\n\nが入っているので、適切な型に変換する。"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#ファクター型に変換",
    "href": "prezemi_2023_05_omake.html#ファクター型に変換",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "ファクター型に変換",
    "text": "ファクター型に変換\n文字列をファクター型に変換するにはas.factor()を使う。 決算期から年度データを取り出すためにsubstr()を使う。 substr()は文字列の一部を取り出す関数である。\n\ndf &lt;- df |&gt;\n    mutate( # 変数の型をファクター型に変換\n        日経会社コード = as.factor(日経会社コード),\n        企業名称 = as.factor(企業名称),\n        年度 = factor(substr(決算期, 1, 4), ordered = TRUE)\n    )"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#欠損値の処理",
    "href": "prezemi_2023_05_omake.html#欠損値の処理",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "欠損値の処理",
    "text": "欠損値の処理\nオリジナルの財務データの値が欠損値の場合、それは財務諸表上に個別項目で載せられないほど額が小さいことを意味する。 そこで、欠損値にゼロを代入する。\n\ndf[is.na(df)] &lt;- 0\n\nis.na()は欠損値をTRUE、欠損値でない値をFALSEとして返す関数で、TRUEにゼロを代入している。"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#異常な観測値の処理",
    "href": "prezemi_2023_05_omake.html#異常な観測値の処理",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "異常な観測値の処理",
    "text": "異常な観測値の処理\n決算期を変更した会社を除外するため，決算月数が12の会社のみを抽出する。 ついでに売上高が1億円未満の企業や販管費がゼロの会社も除外する。\n\ndf &lt;- df |&gt;\n    filter(\n        決算月数 == 12, # 決算月数が12の会社 \n        売上高 &gt;= 100, # 売上高1億以上\n        販売費及び一般管理費 &gt; 0) # 販管費が0超"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#変な企業を除外",
    "href": "prezemi_2023_05_omake.html#変な企業を除外",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "変な企業を除外",
    "text": "変な企業を除外\nなぜか同じ年度に2つデータがある会社があるので、除外する。\n\ndf &lt;- df |&gt;\n  group_by(年度, 企業名称) |&gt; # 年度と企業ごとに\n  mutate(N = n()) |&gt; # なぜか同じ年度に2コ以上データがある会社があるのでカウント\n  filter(N != 2) |&gt; # 重複データを削除\n  select(-N) # 上で作ったけどもういらないのでNを削除\n\nこれで整然データ(tidy data)が完成した(はず)。"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#売上高のヒストグラム",
    "href": "prezemi_2023_05_omake.html#売上高のヒストグラム",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "売上高のヒストグラム",
    "text": "売上高のヒストグラム\n簡単にチェックするだけなら基本関数hist()\n\n\nRコードはここ\nhist(df$売上高)"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#売上高のヒストグラム-1",
    "href": "prezemi_2023_05_omake.html#売上高のヒストグラム-1",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "売上高のヒストグラム",
    "text": "売上高のヒストグラム\nキレイなグラフを作るならggplot2\n\n\nRコードはここ\ndf |&gt;\n    ggplot() + aes(x = 売上高/1000000) + # 売上高を100万で割って単位を兆\n    geom_histogram() + # ヒストグラム\n    xlab(\"売上高（兆円）\") + ylab(\"度数\") + # x軸のラベル\n    mystyle # 上で作ったスタイルを適用"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#分布の計上を確認",
    "href": "prezemi_2023_05_omake.html#分布の計上を確認",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "分布の計上を確認",
    "text": "分布の計上を確認\n分布が左に固まっており、ばらつきが分からないので、分位点を確認\n\nfivenum(df$売上高)\n\n[1]      100.0     9002.0    27911.5    94322.0 37154298.0\n\nmean(df$売上高)\n\n[1] 188132.3\n\n\n\n\n\n最小 1億円\nQ1 135億3750万円,\nQ3 941億6700万円\n最大 37兆1542億9800万円\n\n\n\n中央値 278億8450万円\n平均 1879億8710万円"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#異常値の影響",
    "href": "prezemi_2023_05_omake.html#異常値の影響",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "異常値の影響",
    "text": "異常値の影響\n売上高の最大値が大きすぎる。 売上高の分布を正規分布に近づけるために対数を取る。\n\n\nRコードはここ\nhist(log(df$売上高))"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#対数をとって散布図を書く",
    "href": "prezemi_2023_05_omake.html#対数をとって散布図を書く",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "対数をとって散布図を書く",
    "text": "対数をとって散布図を書く\nggplot2パッケージのgeom_point()を使って、売上高と販売費及び一般管理費の散布図を書いてみる。\n\n\nRコードはここ\ndf |&gt;\n  filter(販売費及び一般管理費 &gt; 0) |&gt;\n  ggplot() + aes(x = log(売上高), y = log(販売費及び一般管理費)) +\n  geom_point() + # ヒストグラム\n  xlab(\"売上高の対数\") + ylab(\"販管費の対数\") + # x軸のラベル\n  mystyle # 上で作ったスタイルを適用"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#年度別の売上高平均を計算",
    "href": "prezemi_2023_05_omake.html#年度別の売上高平均を計算",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "年度別の売上高平均を計算",
    "text": "年度別の売上高平均を計算\n\n\nRコードはここ\n# 年度別の売上高平均を計算\ndf_year_sale &lt;- df |&gt;\n    group_by(年度) |&gt;\n    summarise(\n      売上高平均 = mean(売上高) # 平均売上高を計算\n    )\n# 折れ線グラフ\ndf_year_sale |&gt;\n# 年度がファクターなので、group = 1として1つのグループにまとめる\n  ggplot() + aes(x = 年度, y = 売上高平均 / 100, group = 1) +\n  geom_line() + geom_point() +# ヒストグラム\n  ylim(0, 3000) + mystyle # 軸の範囲とスタイルを適用"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#年度別の売上高平均棒グラフ",
    "href": "prezemi_2023_05_omake.html#年度別の売上高平均棒グラフ",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "年度別の売上高平均棒グラフ",
    "text": "年度別の売上高平均棒グラフ\n横軸が年度なので，棒グラフもOK\n\n\nRコードはここ\ndf_year_sale |&gt;\n  # 売上高平均を100で割って単位を億に\n  ggplot() + aes(x = 年度, y = 売上高平均 / 100) +\n  geom_col() +# ヒストグラム\n  ylim(0, 3000) + mystyle # Y軸の範囲とスタイル"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#グラフの読み取り",
    "href": "prezemi_2023_05_omake.html#グラフの読み取り",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "グラフの読み取り",
    "text": "グラフの読み取り\n\nなんか2023年度の売上が以上に増加している\n2023年度に売上高が急増した企業があるのかもしれない\n2023年度売上高ランク上位10社の2022年度と2023年度の売上高を比較しなきゃ"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#年度別の売上高平均を計算-1",
    "href": "prezemi_2023_05_omake.html#年度別の売上高平均を計算-1",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "年度別の売上高平均を計算",
    "text": "年度別の売上高平均を計算\n\n\nRコードはここ\ndf |&gt;\n  select(年度, 企業名称, 売上高) |&gt; # 必要な変数を選択\n  mutate(売上高 = round(売上高 / 100)) |&gt; # 売上高を100で割って単位を億円に\n  filter(年度 %in% c(\"2022\", \"2023\")) |&gt; # 2022年と2023年のデータのみを抽出\n  pivot_wider(names_from = 年度, values_from = 売上高, names_prefix = \"年度\") |&gt;# 年度を横軸に\n  mutate(# 売上の増加額と増加率を計算\n    差額 = 年度2023 - 年度2022, # 変化額\n    変化率 = round(差額 / 年度2022, digits = 2) # 変化率\n    ) |&gt; \n  arrange(desc(年度2023)) |&gt; # 2023年度の売上高で降順に並び替え\n  head(10) |&gt; # 上位10社のみを抽出\n  kable( booktabs = TRUE) |&gt; \n  kable_styling(font_size = 20)  # 作表\n\n\n\n\n\n企業名称\n年度2022\n年度2023\n差額\n変化率\n\n\n\n\nトヨタ自動車\n313795\n371543\n57748\n0.18\n\n\n三菱商事\n172648\n215720\n43072\n0.25\n\n\n本田技研工業\n145527\n169077\n23550\n0.16\n\n\nＥＮＥＯＳホールディングス\n109218\n150166\n40948\n0.37\n\n\n三井物産\n117576\n143064\n25488\n0.22\n\n\n伊藤忠商事\n122933\n139456\n16523\n0.13\n\n\nセブン＆アイ・ホールディングス\n87498\n118113\n30615\n0.35\n\n\nソニーグループ\n99215\n115398\n16183\n0.16\n\n\n日立製作所\n102646\n108812\n6166\n0.06\n\n\n日産自動車\n84246\n105967\n21721\n0.26"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#特殊な3時点比較",
    "href": "prezemi_2023_05_omake.html#特殊な3時点比較",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "特殊な3時点比較",
    "text": "特殊な3時点比較\nリーマンショック2009年、コロナ禍2021年、2023年の売上高を比較する\n\n\nRコードはここ\ndf |&gt;\n  select(年度, 企業名称, 売上高) |&gt; # 必要な変数を選択\n  mutate(売上高 = round(売上高 / 100)) |&gt; # 売上高を100で割って単位を億円に\n  filter(年度 %in% c(\"2009\", \"2021\", \"2023\")) |&gt; # 2000年と2010年と2023年のデータのみを抽出\n  pivot_wider(names_from = 年度, values_from = 売上高,  names_prefix = \"年度\") |&gt;# 年度を横軸に\n  mutate(# 売上の増加額と増加率を計算\n    差額 = 年度2023 - 年度2021, # 変化額\n    変化率 = round(差額 / 年度2021, digits = 2) # 変化率\n    ) |&gt; \n  arrange(desc(年度2023)) |&gt; # 2023年度の売上高で降順に並び替え\n  head(10) |&gt; # 上位10社のみを抽出\n  kable( booktabs = TRUE) |&gt; \n  kable_styling(font_size = 20)  # 作表\n\n\n\n\n\n企業名称\n年度2009\n年度2021\n年度2023\n差額\n変化率\n\n\n\n\nトヨタ自動車\n205296\n272146\n371543\n99397\n0.37\n\n\n三菱商事\n61464\n128845\n215720\n86875\n0.67\n\n\n本田技研工業\n100112\n131705\n169077\n37372\n0.28\n\n\nＥＮＥＯＳホールディングス\nNA\n76580\n150166\n73586\n0.96\n\n\n三井物産\n55048\n80102\n143064\n62962\n0.79\n\n\n伊藤忠商事\n34191\n103626\n139456\n35830\n0.35\n\n\nセブン＆アイ・ホールディングス\n56499\n57667\n118113\n60446\n1.05\n\n\nソニーグループ\n77300\n89987\n115398\n25411\n0.28\n\n\n日立製作所\n100004\n87292\n108812\n21520\n0.25\n\n\n日産自動車\n84370\n78626\n105967\n27341\n0.35"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#兆円売上高企業",
    "href": "prezemi_2023_05_omake.html#兆円売上高企業",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "10兆円売上高企業",
    "text": "10兆円売上高企業\n2023年度の売上高が10兆円以上の会社の売上高の推移をみてみる。 まず2023年度の売上高が10兆円以上の企業名を抽出する。\n\n\nRコードはここ\ndf_name &lt;- df |&gt;\n  filter(売上高 &gt;= 10^7 & 年度 == 2023)\nname &lt;- df_name$企業名称\n# 作図\ng &lt;- df |&gt;\n  filter(企業名称 %in% name) |&gt; # 企業名がnameに含まれるものを抽出\n  ggplot() + aes(x = 年度, y = 売上高 / 10^6, group = 企業名称, color = 企業名称) + # 企業ごとに色分け\n  geom_line() + geom_point() + # 折れ線グラフと散布図を組み合わせる\n  xlab(\"年度\") + ylab(\"売上高(兆円)\") + mystyle + # スタイルを適用\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 16)) # x軸のラベルを90度回転\nprint(g) # 出力"
  },
  {
    "objectID": "prezemi_2023_05_omake.html#動くグラフ",
    "href": "prezemi_2023_05_omake.html#動くグラフ",
    "title": "プレゼミ2023  第5回 【おまけ】収益データを可視化",
    "section": "動くグラフ",
    "text": "動くグラフ\n\n# install.packages(\"plotly\")\nlibrary(plotly)\nggplotly(g)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#用語の意味",
    "href": "prezemi_2023_06_presen.html#用語の意味",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "用語の意味",
    "text": "用語の意味\n\n\n\n母集団：研究対象となるすべての集合\n標本：母集団から抽出されたデータ\n標本サイズ：標本に含まれるデータの個数\n標本数・サンプル数：標本の数のことで標本サイズのことじゃないよ\n\n\n\n母数：母集団を特徴付ける値、母平均や母分散など\n統計量：標本を特徴付ける値、標本平均や標本分散など\n推定量：母数の推定に使われる統計量\n統計的推定：推定量から母数を予想すること"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#母集団と標本",
    "href": "prezemi_2023_06_presen.html#母集団と標本",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "母集団と標本",
    "text": "母集団と標本\n\n母集団(population)とは、研究問題(research question)に基づいて選定された対象全体の集まりのこと。\n標本(sample)とは、母集団から一部を抜き出したものであり、標本を通じて母集団の特性を推定する。\n統計学とは、限られた標本から母集団の特性（母数またはパラメータ）をどのように探求するかについて研究する学問"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#統計的推定統計量推定量",
    "href": "prezemi_2023_06_presen.html#統計的推定統計量推定量",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "統計的推定・統計量・推定量",
    "text": "統計的推定・統計量・推定量\n\n標本の特徴を調べることで，観察できない母集団の母数(parameter)を推定することを，統計的推定(statistical estimation)\n統計的推定には，標本から計算される統計量(statistic)を用いる。\n母数の推定のために利用される統計量を推定量(estimator)という。\n母数は定数だが、標本が変われば値が変わるので推定量は確率変数である。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#数学記号の使い方",
    "href": "prezemi_2023_06_presen.html#数学記号の使い方",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "数学記号の使い方",
    "text": "数学記号の使い方\n母数を推定するために用いられる統計量と一般的な数式記号\n\n\n\n母数\n記号\n統計量\n記号\n\n\n\n\n母平均\n\\(\\mu\\)\n標本平均\n\\(\\bar x\\)\n\n\n母比率\n\\(\\pi\\)\n標本比率\n\\(p\\)\n\n\n母分散\n\\(\\sigma^2\\)\n標本分散\n\\(s^2\\)\n\n\n母標準偏差\n\\(\\sigma\\)\n標本標準偏差\n\\(s\\)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出の方法",
    "href": "prezemi_2023_06_presen.html#標本抽出の方法",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出の方法",
    "text": "標本抽出の方法\n\n母集団から標本を選ぶ標本抽出方法として代表的なものが，単純無作為抽出(simple randome sampling)\n単純無作為抽出で選ばれた標本は、母集団の偏りのない標本となる。\nこのような標本を無作為標本(random sample)といい、この標本から計算される統計量は優れた特徴をもつ。\n\nシミュレーションで確認してみる。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーション準備",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーション準備",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出のシミュレーション準備",
    "text": "標本抽出のシミュレーション準備\n平均10，標準偏差1の正規分布に従う確率変数\\(X \\sim N(10,1)\\)を考える。 この確率変数\\(X\\)の実現値100個を標本として抽出し、平均値を計算する。 rnorm()関数は正規分布に従う乱数を発生させる関数であり、引数として\n\nn：発生させる乱数の個数\nmean：平均\nsd：標準偏差\n\nの3つをとる。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出のシミュレーションの実践",
    "text": "標本抽出のシミュレーションの実践\nrnorm(100,10,1)と書いてもよいが、後で変更するかもしれない変数は外で定義しておく。\n\nn = 100 # 標本サイズ\npmean = 10 # 母平均\npsd = 1 # 母標準偏差\nx &lt;- rnorm(n, pmean, psd) # 標本抽出\nmean(x) # 標本平均\n\n[1] 10.15124\n\n\n平均値は10.1512389で、母平均\\(10\\)と一致していない。 この差を誤差といい、母集団と標本のズレを意味する。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-1",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出のシミュレーションの実践",
    "text": "標本抽出のシミュレーションの実践\n\ntrial = 100 # 標本数\nresult &lt;- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x &lt;- rnorm(n, pmean, psd) # 標本抽出\n  result[i] &lt;- mean(x) # 標本平均\n}\nmean(result)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-2",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-2",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出のシミュレーションの実践",
    "text": "標本抽出のシミュレーションの実践\n標本サイズ\\(n\\)を増やす\n\n\nRコード\nn = 10000 # 標本サイズ\nresult &lt;- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x &lt;- rnorm(n, pmean, psd) # 標本抽出\n  result[i] &lt;- mean(x) # 標本平均\n}\nhist(result) # 基本関数histでヒストグラム作成"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-2-output",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-2-output",
    "title": "プレゼミ2023  第5回 記述統計とデータの可視化・視覚化",
    "section": "標本抽出のシミュレーションの実践",
    "text": "標本抽出のシミュレーションの実践"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#大数の法則",
    "href": "prezemi_2023_06_presen.html#大数の法則",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "大数の法則",
    "text": "大数の法則\nキレイな左右対称の釣り鐘型の分布になっている。 この標本平均の分布の平均値を計算してみる。\n\nmean(result)\n\n[1] 9.999944\n\n\nとほぼ10と等しい。\nこのように，標本サイズを増やしていくと，標本平均の平均値は母平均に近づく，という法則を大数の法則(law of large numbers)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本数が増えると母平均に近づく",
    "href": "prezemi_2023_06_presen.html#標本数が増えると母平均に近づく",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本数が増えると母平均に近づく",
    "text": "標本数が増えると母平均に近づく\n本当に標本サイズが増えると標本平均の平均が母平均に近づくのかシミュレーションで確認してみる。\n\nn = 1000 # 標本サイズ\npmean = 10 # 母平均\npsd = 4 # 母標準偏差\ntrial = 10000 # 標本数\nresult &lt;- numeric(n) # 結果を入れる空の変数\nfor (i in 2:n) { # 以下の処理をtrial回繰り返す\n    x &lt;- rnorm(i, pmean, psd) # 標本抽出\n    result[i] &lt;- mean(x) # 標本平均\n}\nplot(result, type=\"l\") # 基本関数plotで折れ線グラフ作成\nabline(h=pmean, col=\"red\") # 母平均を赤線で表示"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本数が増えると母平均に近づく-output",
    "href": "prezemi_2023_06_presen.html#標本数が増えると母平均に近づく-output",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本数が増えると母平均に近づく",
    "text": "標本数が増えると母平均に近づく"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-1-output",
    "href": "prezemi_2023_06_presen.html#標本抽出のシミュレーションの実践-1-output",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本抽出のシミュレーションの実践",
    "text": "標本抽出のシミュレーションの実践\n\n[1] 10.00172\n\nhist(result) # 基本関数histでヒストグラム作成"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#a",
    "href": "prezemi_2023_06_presen.html#a",
    "title": "プレゼミ2023  第5回 記述統計とデータの可視化・視覚化",
    "section": "a",
    "text": "a\n先の例は標本1つだけの場合だったが、次は標本を増やし、次のシミュレーションを行う。\n\n平均10，標準偏差1の正規分布からランダムに100個のデータを取り出し標本とする。\nその標本の平均値を計算する\n\nという試行(trial)を10,000回繰り返す。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本分布",
    "href": "prezemi_2023_06_presen.html#標本分布",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本分布",
    "text": "標本分布\nプレゼミのメンバー25名から5名の標本を抽出する場合でも，\n\\[\n{}_{25} \\mathrm{C}_5 = \\binom{25}{5} = \\frac{25!}{5!(25-5)!} = 53130\n\\]\nの組み合わせがある。 標本から計算した統計量は標本ごとに異なる値となる。 このような統計量の分布を標本分布(sampling distribution)という。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#不偏推定量",
    "href": "prezemi_2023_06_presen.html#不偏推定量",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "不偏推定量",
    "text": "不偏推定量\n\n「偏りのない」(unbiased)標本をたくさん集めることができれば，標本分布は母集団の分布に近づく\n多くの標本から計算される統計量の平均が母数に一致する性質を不偏性(unbiasedness)\n普遍性をもつ推定量を不偏推定量(unbiased estimator)という\n\n不偏推定量を計算することが非常に重要"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題",
    "href": "prezemi_2023_06_presen.html#例題",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n5個のデータ(2,4,6,7,9)から3つ取り出して標本を作成する場合の組み合わせ \\[\n{}_{5} \\mathrm{C}_3 = \\binom{5}{3} = \\frac{5!}{3!(5-3)!} = 10\n\\]\nこの10個の標本から計算される標本分散と標本平均を計算する。 定義は次のとおりである。\n\\[\n\\begin{aligned}\n\\text{標本平均} &= \\frac 1n \\sum_{i=1}^n x_i & \\text{標本分散} &= \\frac 1n \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-1",
    "href": "prezemi_2023_06_presen.html#例題-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n標本平均と標本分散を計算する関数を作る。 自作関数を作るには，function()関数を使う。\n\nmeanp &lt;- function(x){\n  sum(x) / length(x) # 合計をデータの個数で割る\n}\nvarp &lt;- function(x){\n  sum((x - meanp(x))^2) / length(x) # 分散の計算式\n}\n\n実務的には分母が0になるケースを考慮する必要があるが省略"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-2",
    "href": "prezemi_2023_06_presen.html#例題-2",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n\nx &lt;- c(2,4,6,7,9) # 母集団とする。\nmeanp(x) # 母平均\n\n[1] 5.6\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nprint(res)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n[1,]    2    2    2    2    2    2    4    4    4     6\n[2,]    4    4    4    6    6    7    6    6    7     7\n[3,]    6    7    9    7    9    9    7    9    9     9\n\n\n5個のデータから3つのデータを取り出して標本を作り，それぞれの標本から標本平均と標本分散を計算"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-3",
    "href": "prezemi_2023_06_presen.html#例題-3",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n自作のmeanp()関数をapply関数で適用して10の標本平均を作り，sample_meanという変数に代入し，その平均を計算する。\n\nsample_mean &lt;- apply(res, 2, meanp) # apply関数でmeanp関数をresに適用\nmeanp(sample_mean) # 標本平均の平均は5.6\n\n[1] 5.6\n\n\n標本平均の平均5.6が母平均5.6に一致したので，標本平均は不偏推定量である。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-4",
    "href": "prezemi_2023_06_presen.html#例題-4",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n次に分散を計算してみましょう。\n\nvarp(x) # 母分散 5.84\n\n[1] 5.84\n\nsample_var &lt;- apply(res, 2, varp)\nmeanp(sample_var) #\n\n[1] 4.866667\n\n\n標本分散の平均4.8666667は母分散5.84より小さな値になった。つまり標本分散は不偏推定量ではない，ということ。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-5",
    "href": "prezemi_2023_06_presen.html#例題-5",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\n\n自由度という概念が関係\n自由度とは，標本から計算される統計量の値を決めるのに使える情報の数のこと\n標本分散ではなく標本不偏分散を計算する。違いは，分母が\\(n\\)ではなく\\(n-1\\)になっていること。 \\[\n\\text{標本不偏分散} = \\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\]"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#一致推定量",
    "href": "prezemi_2023_06_presen.html#一致推定量",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "一致推定量",
    "text": "一致推定量\n標本数が増えると，標本分布は母集団の分布に近づく，という特徴をもつ推定量を一致推定量(consistent estimator)という。\n例えば，関心のある母集団が\n\n母平均\\(\\mu = 62\\)\n母分散\\(\\sigma^2 = 25\\)\n\nという母数をもつ正規分布に従っているとする。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#グラフ",
    "href": "prezemi_2023_06_presen.html#グラフ",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "グラフ",
    "text": "グラフ\n\n\nRコード\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) # 軸の設定\ng &lt;- g + geom_histogram( # ヒストグラム\n  aes(y = ..density..), bins = 60, # y軸を密度に\n  fill = \"white\", color = \"black\") # ヒストグラムの色\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))　# 母集団の分布\ng &lt;- g + geom_vline(xintercept = 62, color = \"red\") # 母平均の縦線\ng &lt;- g + xlim(47,77) # x軸の範囲を指定\nprint(g)\n\n\n\n母平均と標本平均の中心がほぼ一致している。 母分散と比べて標本分散が非常に小さい。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本平均を計算",
    "href": "prezemi_2023_06_presen.html#標本平均を計算",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本平均を計算",
    "text": "標本平均を計算\n\nn = 10 # 標本サイズ\ntrial = 1000 # 試行回数\nresult &lt;- numeric(trial) # 結果を入れる空の箱\nfor (i in 1:trial) { # 以下をtrial回繰り返す\n  x &lt;- rnorm(n, 62, 5) # 標本を生成\n  result[i] &lt;- mean(x) # 標本平均を計算\n}\nmean(result) # 標本平均の平均\n\n[1] 61.99138\n\n\nヒストグラムの中心が母平均の62に近づいていることが分かります。 標本平均の平均は61.9913766となりますが，これは母平均62に近い値になっています。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#グラフ-1",
    "href": "prezemi_2023_06_presen.html#グラフ-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "グラフ",
    "text": "グラフ\nグラフで確認すると，\n\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) # 軸の設定\ng &lt;- g + geom_histogram( # ヒストグラム\n  aes(y = ..density..), bins = 60, # y軸を密度に\n  fill = \"white\", color = \"black\") # ヒストグラムの色\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))　# 母集団の分布\ng &lt;- g + geom_vline(xintercept = 62, color = \"red\") # 母平均の縦線\ng &lt;- g + xlim(47,77) + mystyle # x軸の範囲を指定\nprint(g)\n\n\nと母平均と標本平均のヒストグラムの中心が一致していることが分かります。 ただ，母分散と比べて標本分散が非常に小さいことが一目瞭然です。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#シミュレーション",
    "href": "prezemi_2023_06_presen.html#シミュレーション",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "シミュレーション",
    "text": "シミュレーション\n標本サイズを先ほどの100倍の1000として，同じ試行を1000回繰り返す。\n\n\nRコード\nn = 100 # 標本サイズ\ntrial = 1000 # 試行回数\nresult &lt;- numeric(trial)\nfor (i in 1:trial) {\n  x &lt;- rnorm(n, 62, 5)\n  result[i] &lt;- mean(x)\n}\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) + geom_histogram(aes(y=..density..), bins=60, fill=\"white\", color=\"black\")\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))\ng &lt;- g + xlim(47,77) + geom_vline(xintercept = 62, color=\"red\")\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#シミュレーション-1",
    "href": "prezemi_2023_06_presen.html#シミュレーション-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "シミュレーション",
    "text": "シミュレーション\nどんどん標本サイズを増やして，100000として，同じ試行を1000回繰り返してみましょう。\n\n\nRコード\nn = 100000 # 標本サイズ\ntrial = 1000 # 試行回数\nresult &lt;- numeric(trial)\nfor (i in 1:trial) {\n  x &lt;- rnorm(n, 62, 5)\n  result[i] &lt;- mean(x)\n}\nresult &lt;- as.tibble(result)\ng &lt;- ggplot(result) + aes(value) + geom_histogram(aes(y=..density..), bins=60, fill=\"white\", color=\"black\")\ng &lt;- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))\ng &lt;- g + xlim(47,77) + geom_vline(xintercept = 62, color=\"red\")\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#一致推定量-1",
    "href": "prezemi_2023_06_presen.html#一致推定量-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "一致推定量",
    "text": "一致推定量\n標本平均の標準偏差\\(SD(\\bar x)\\)は，\n\\[\nSD(\\bar x) = \\frac{\\sigma}{\\sqrt{n}}\n\\]\n標本サイズを大きくすると，標本平均が母平均の近くの値をとる確率が大きくなる，という性質を一致性(consistency)と呼び， 一致性をもつ推定量を一致推定量(consistent estimator)という。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#例題-6",
    "href": "prezemi_2023_06_presen.html#例題-6",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "例題",
    "text": "例題\nRの基本関数であるvar()は標本分散ではなく標本不偏分散を計算する。\n\nvar(x) # 母分散 5.84\n\n[1] 7.3\n\nres &lt;- combn(x,3) # 3つのデータを取り出す組み合わせ\nsample_var &lt;- apply(res, 2, var)\nmeanp(sample_var) # 標本平均の平均は5.6\n\n[1] 7.3\n\n\n母分散と標本不偏分散の平均は一致した。 つまり母数である母分散を推定するためには，標本不偏分散を使う必要がある。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#準備",
    "href": "prezemi_2023_06_presen.html#準備",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "準備",
    "text": "準備\n\n# 文字化け防止のおまじない、R 4.1.0以降\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplot2のテーマ\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(gghighlight)\n\n# テーマを設定\ntheme_set(theme_few(base_size = 12))\n# 以下、ggplot2のデフォルトを変更\nupdate_geom_defaults(\"point\", list(size = 3))"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#作図",
    "href": "prezemi_2023_06_presen.html#作図",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "作図",
    "text": "作図\n正規分布の作図\n\n\nRコード\np &lt;- ggplot(data = data.frame(X = c(47,77))) # データの作成\np &lt;- p + aes(x = X)\np &lt;- p + stat_function(\n  fun = dnorm,\n  args = list(mean = 62, sd = 5)\n  )\nprint(p)\n\n\n\n母集団から標本サイズ10の標本を取り出し，標本平均を計算する，という試行を1000回繰り返し，1000個の標本平均を作る。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#母平均の推定と信頼区間",
    "href": "prezemi_2023_06_presen.html#母平均の推定と信頼区間",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "母平均の推定と信頼区間 ",
    "text": "母平均の推定と信頼区間 \n標本から得た統計量をつかって母数である母平均を予想したいとき，手元にある1つの標本から計算した標本平均は，どの程度の精度をもつのか？ これを測る尺度を信頼区間(confidence interval)という。\n\n母数である母平均は観察できないが，確率変数ではなく定数\nこの母平均が計算した信頼区間に含まれるか，含まれないか，のどちらか\n信頼区間の正しい解釈は，母集団から標本を取ってきて、その標本平均から95%信頼区間を求める、という作業を100回やったときに、95回はその区間の中に母平均が含まれる"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本平均の標準偏差を推定する-標準誤差",
    "href": "prezemi_2023_06_presen.html#標本平均の標準偏差を推定する-標準誤差",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本平均の標準偏差を推定する– 標準誤差",
    "text": "標本平均の標準偏差を推定する– 標準誤差\n標本の統計量は確率変数なので，統計量は分布する。 標本平均の標準偏差は，\n\\[\nSD(\\bar x) = \\frac{\\sigma }{\\sqrt{n}}\n\\]\nと定義される。 ここで\\(n\\)は標本サイズなので既知だが，$\\(は母標準偏差なので未知である。 そこでまず\\)$の推定のために，不偏標準偏差\n\\[\nu = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2}\n\\]\nを計算します。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標準誤差",
    "href": "prezemi_2023_06_presen.html#標準誤差",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標準誤差",
    "text": "標準誤差\n定義した\\(SD(\\bar x)\\)の分子\\(\\sigma\\)の代わりに推定量\\(u\\)を使ったものを標準誤差(standard error: SE)と呼ぶ。 \\[\nSE = \\frac{u}{\\sqrt{n}}\n\\]\nこの標準誤差を標本平均の標準誤差の代わりに利用する。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#t分布",
    "href": "prezemi_2023_06_presen.html#t分布",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "t分布",
    "text": "t分布\n\\(t\\)分布(t-distribution)は，母集団が正規分布にしたがうとき，標本平均の分布が従う確率分布です。\n\n\nRコード\nx &lt;- seq(-4, 4, length.out = 100)\n\ndf1 &lt;- dt(x, df = 1)\ndf5 &lt;- dt(x, df = 5)\ndf100 &lt;- dt(x, df = 100)\n\n# データフレームに変換\ndf &lt;- data.frame(x = rep(x, 3),\n                 y = c(df1, df5, df100),\n                 freedom = factor(rep(c(\"df = 1\", \"df = 5\", \"df = 100\"), each = length(x)), ordered = TRUE)\n                 )\n# プロット\nggplot(df, aes(x = x, y = y, color = freedom)) +\n  geom_line() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"green\")) +\n  labs(title = \"自由度が異なるt分布のプロット\") + xlab(\"t値\") + ylab(\"確率密度\")"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#t分布-1",
    "href": "prezemi_2023_06_presen.html#t分布-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "t分布",
    "text": "t分布\n標本平均\\(\\bar x\\)から母平均を引いて，それを標準誤差\\(SE\\)で割った値をt値(t-value)という。 自由度99の\\(t\\)分布の場合，95%の確率で\\(t\\)値は-1.98から1.98の間に入ります。\n\n\nRコード\n# 自由度を設定\ndf &lt;- 99\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df)\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x=x, y=y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &gt; ql & x &lt; qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\") + xlim(-3,3)\ng &lt;- g + annotate(geom = \"text\", x = qu, y = 0.12,\n  label = \"1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = qu, xend = qu,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = 0, y = 0.15,\n  label = \"95%\", size = 8)\ng &lt;- g + annotate(geom = \"text\", x = ql, y = 0.12,\n  label = \"-1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = ql, xend = ql,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#t分布-2",
    "href": "prezemi_2023_06_presen.html#t分布-2",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "t分布",
    "text": "t分布\n\\(t\\)分布は確率分布ですので，面積は1となります。 青い領域が95％の確率で\\(t\\)値が入る範囲です。\n\\[\n[ -t _{100-1, 0.025}, \\ t_{100-1, 0.025}]\n\\]\n\\(t\\)分布表を使って，自由度99のときの\\(t\\)値を調べると，\\(t_{100-1, 0.025} = 1.98\\)となります。 Rだとqt()関数を使って計算できます。\n\nround(qt(0.025, df = 99),digits =2)\n\n[1] -1.98\n\nround(qt(0.975, df = 99),digits =2)\n\n[1] 1.98"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間を求める",
    "href": "prezemi_2023_06_presen.html#信頼区間を求める",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間を求める",
    "text": "信頼区間を求める\n標本サイズ\\(n\\)の標本から計算される標本平均\\(\\bar x\\)から計算される次の\\(t\\)値 \\[\nt = \\frac{\\bar x - \\mu}{SE}\n\\] が自由度\\(n-1\\)の\\(t\\)分布にしたがうことが知られている。\nつまり，標本の95％の\\(t\\)値は，\\(t_{n-1, 0.025}\\)から\\(t_{n-1, 0.975}\\)の間に入る。 よって，\n\\[\n-t _{n-1, 0.025} \\leq \\frac{\\bar x - \\mu}{SE} \\leq  t_{n-1, 0.025}\n\\] 両辺に\\(SE\\)をかけると， \\[\n-t _{n-1, 0.025} \\times SE \\leq \\bar{x} - \\mu \\leq  t_{n-1, 0.025}\\times SE\n\\]\nこの区間を95％信頼区間といいます。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間の解釈",
    "href": "prezemi_2023_06_presen.html#信頼区間の解釈",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間の解釈",
    "text": "信頼区間の解釈\n信頼区間とは、観察できない真の値である母数が存在し、その母集団から標本を抽出し、標本平均を計算するということを繰り返したときに、95%の標本平均の信頼区間の中に真の値である母平均が入っている、ということです。\n先の例を使って、信頼区間を表現してみます。\n\n母集団が平均62，標準偏差5の正規分布にしたがうとする。\nこの母集団から標本サイズ50の標本を100個抽出して，標本平均と標本標準偏差を計算する。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間の解釈-1",
    "href": "prezemi_2023_06_presen.html#信頼区間の解釈-1",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間の解釈",
    "text": "信頼区間の解釈\n\n\nRコード\ntrial &lt;- 100 # 標本数\nn &lt;- 50 # 標本サイズ\nmu &lt;- 62 # 母平均\nsigma &lt;- 5 # 母標準偏差\n\nset.seed(1234) # 乱数を準備\n\n# 標本ごとの統計量を収納する空のベクトルを作成\nsample_mean &lt;- numeric(trial) # 標本平均の入れ物\nsample_sd   &lt;- numeric(trial) # 標本標準偏差の入れ物\nuplimit     &lt;- numeric(trial) # 信頼区間の上限の入れ物\nlowlimit    &lt;- numeric(trial) # 信頼区間の下限の入れ物\n\n# 標本の数だけ，以下の計算を繰り返す\nfor (i in 1:trial) {\n  temp_sample    &lt;- rnorm(n, mu, sigma) # 標本を抽出\n  sample_mean[i] &lt;- mean(temp_sample) # 標本平均を計算\n  sample_sd[i]   &lt;- sd(temp_sample) # 標本標準偏差を計算\n}\n\n# 信頼区間の計算\np &lt;- .95 # 信頼水準の設定 (95%信頼区間)\nalpha &lt;- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  &lt;- sample_mean + alpha * sample_sd/sqrt(n) # 信頼区間上限\nlowlimit &lt;- sample_mean - alpha * sample_sd/sqrt(n) # 信頼区間下限\n\n# 信頼区間の計算結果をデータフレームにまとめる\nconfidence_interval &lt;- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci &lt;- ggplot(confidence_interval) +\n  aes(x = 標本番号, y = 標本平均)\n  # aes(x = reorder(標本番号, 標本平均), y = 標本平均)\ng_ci &lt;- g_ci + geom_errorbar( # 信頼区間を表す線を描く\n  aes(ymin = 下限, ymax = 上限,\n      color = (下限 &lt;= 62 & 上限 &gt;= 62)\n      ), width = 0.2)\ng_ci &lt;- g_ci + scale_color_manual( # 色の設定\n  values = c(\"magenta\", \"black\"),\n  guide = FALSE)\ng_ci &lt;- g_ci + geom_point(aes(y = 標本平均)) # 標本平均を点で表す\ng_ci &lt;- g_ci + geom_hline(yintercept = 62, color = \"red\") # 母平均を赤い線で表す\ng_ci &lt;- g_ci + xlab(\"標本ID\") + ylab(\"95%信頼区間\") # 軸ラベルの設定\ng_ci &lt;- g_ci + ylim(47,77) + coord_flip()  # 軸の範囲と向きの設定\n\np &lt;- ggplot(data.frame(X = c(47,77))) + aes(x = X) # 母集団を描く範囲\np &lt;- p + stat_function(fun = dnorm, args = list(mean = 62, sd = 5)) # 正規分布を描く\np &lt;- p + geom_vline(xintercept = 62, color=\"red\") 　# 母平均を赤い線で表す\n\nlibrary(patchwork) # グラフを並べるためのパッケージ\np / g_ci # グラフを縦に並べる"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間の解釈-2",
    "href": "prezemi_2023_06_presen.html#信頼区間の解釈-2",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間の解釈",
    "text": "信頼区間の解釈\n本当は未知である母平均62，母標準偏差5の母集団から標本を100個取り出し，100個の標本平均と95%信頼区間を計算し，グラフにしています。 この100個の標本から計算した95％信頼区間に母平均62が含まれているかどうかを確認すると，7つの95％信頼区間に母平均が含まれていないことが分かります。\\(7/100\\)の割合で信頼区間に母平均が含まれていないので，信頼水準は\\(1-7/100=0.93\\)となります。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#section",
    "href": "prezemi_2023_06_presen.html#section",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "",
    "text": "信頼区間を50%にするとどうなるでしょうか？ こうなります。\n\n\nRコード\n# 信頼区間の計算\np &lt;- .5 # 信頼水準の設定 (95%信頼区間)\nalpha &lt;- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  &lt;- sample_mean + alpha * sample_sd/sqrt(n)\nlowlimit &lt;- sample_mean - alpha * sample_sd/sqrt(n)\n\n\nconfidence_interval &lt;- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci2 &lt;- ggplot(confidence_interval) +\n aes(x = 標本番号, y = 標本平均) +\n  geom_errorbar(aes(ymin = 下限, ymax = 上限,\n                    color = (下限 &lt;= 62 & 上限 &gt;= 62)), width = 0.2) +\n  scale_color_manual(values = c(\"magenta\", \"black\"), guide = FALSE) +\n  geom_point(aes(y = 標本平均)) + ylim(47,77) +\n  geom_hline(yintercept = 62, color = \"red\") + xlab(\"標本ID\") + ylab(\"50%信頼区間\") + coord_flip()\nprint(g_ci2)\n\n\n\n信頼区間が短くなり，母平均を含まない50%信頼区間が増えました。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間の解釈-3",
    "href": "prezemi_2023_06_presen.html#信頼区間の解釈-3",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間の解釈",
    "text": "信頼区間の解釈\n信頼区間を50%にするとどうなるでしょうか？ こうなります。\n\n\nRコード\n# 信頼区間の計算\np &lt;- .5 # 信頼水準の設定 (95%信頼区間)\nalpha &lt;- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  &lt;- sample_mean + alpha * sample_sd/sqrt(n)\nlowlimit &lt;- sample_mean - alpha * sample_sd/sqrt(n)\n\n\nconfidence_interval &lt;- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci2 &lt;- ggplot(confidence_interval) +\n aes(x = 標本番号, y = 標本平均) +\n  geom_errorbar(aes(ymin = 下限, ymax = 上限,\n                    color = (下限 &lt;= 62 & 上限 &gt;= 62)), width = 0.2) +\n  scale_color_manual(values = c(\"magenta\", \"black\"), guide = FALSE) +\n  geom_point(aes(y = 標本平均)) + ylim(47,77) +\n  geom_hline(yintercept = 62, color = \"red\") + xlab(\"標本ID\") + ylab(\"50%信頼区間\") + coord_flip()\nprint(g_ci2)\n\n\n\n信頼区間が短くなり，母平均を含まない50%信頼区間が増えました。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#標本平均の標準偏差を推定",
    "href": "prezemi_2023_06_presen.html#標本平均の標準偏差を推定",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "標本平均の標準偏差を推定",
    "text": "標本平均の標準偏差を推定\n標本の統計量は分布し，標本平均の標準偏差は，\n\\[\nSD(\\bar x) = \\frac{\\sigma }{\\sqrt{n}}\n\\]\nとなる。標本サイズ\\(n\\)は既知だが，$$は母標準偏差なので未知である。 \\(\\sigma\\)の推定のために，不偏標準偏差\n\\[\nu = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2}\n\\]\nを計算する。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#信頼区間の解釈-4",
    "href": "prezemi_2023_06_presen.html#信頼区間の解釈-4",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "信頼区間の解釈",
    "text": "信頼区間の解釈\n標本サイズを大きくすればどうでしょうか。 \n\n標本サイズ\\(n\\)が大きくなると、信頼区間の上限と下限を計算するさいの\\(\\sqrt{n}\\)が大きくなるため、信頼区間が短くなっていることがわかります。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#練習問題",
    "href": "prezemi_2023_06_presen.html#練習問題",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "練習問題",
    "text": "練習問題\n\nサイコロを作ってください。\nサイコロを10回降って，出た結果の平均を計算してください。\n2の作業を100回繰り返して，100個の標本平均を計算してください。\n100個の標本平均のヒストグラムを作成してください。"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#解答",
    "href": "prezemi_2023_06_presen.html#解答",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "解答",
    "text": "解答\nreplicate()関数とsample()関数を使って標本平均を複数作成し，mean()で平均を計算する。\n\n\nRコード\n# 自作関数 simulate_dice_toss\nsimulate_dice_toss &lt;- function(toss = 10, trial = 100) {#引数はnで試行回数\n  # 初期設定\n  dice &lt;- 1:6 # 1〜6の数値をdiceに代入\n\n  # replicateを使用してサイコロを投げ、平均を取得\n  result &lt;- replicate(trial, mean(sample(dice, toss, replace = TRUE)))\n\n  # 結果のヒストグラムをプロット\n  hist(result, breaks = seq(1,6,0.05))\n\n  # サンプル平均と真の平均の垂直線をプロット\n  sample_mean &lt;- mean(result)\n  true_mean &lt;- sum(dice) / length(dice)\n  abline(v = sample_mean, col = \"red\", lwd = 2)\n  abline(v = true_mean, col = \"blue\", lwd = 2)\n\n  # 標本平均の平均と母平均の差を表示（指数表記を避ける）\n  mean_difference &lt;- sample_mean - true_mean\n  cat(\"標本平均の平均と母平均の差は\", format(mean_difference, scientific = FALSE), \"\\n\")\n\n  # 元の出力オプションに戻す\n  options(scipen = 0)\n}\n\n\n関数を使ってみる。\n\n# 例として100回の試行で関数を実行\nsimulate_dice_toss(100, 1000)"
  },
  {
    "objectID": "prezemi_2023_06_presen.html#解答-output",
    "href": "prezemi_2023_06_presen.html#解答-output",
    "title": "プレゼミ2023  第6回 統計的推定",
    "section": "解答",
    "text": "解答\n\n\n\n\n標本平均の平均と母平均の差は 0.0015"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#準備",
    "href": "prezemi_2023_07_presen.html#準備",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "準備",
    "text": "準備\n\n# 文字化け防止のおまじない、R 4.1.0以降\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplot2のテーマ\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(gghighlight)\n\n# テーマを設定\ntheme_set(theme_few(base_size = 12))\n# 以下、ggplot2のデフォルトを変更\nupdate_geom_defaults(\"point\", list(size = 3))"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#統計的仮説検定-1",
    "href": "prezemi_2023_07_presen.html#統計的仮説検定-1",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "統計的仮説検定",
    "text": "統計的仮説検定\n\n検定(test)は、母集団の母数(パラメータ)に関する仮説を立てて、その仮説が正しいかどうかを検証する方法\n統計学は、観察できない未知の母数をもつ母集団から標本を抽出し、標本の特徴をもとに母集団の母数を推定することが目的\n自分の手元にある標本が母集団の母数を推定するための有効な情報をもっているかどうかを検証することが必要"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#統計的仮説検定の基礎",
    "href": "prezemi_2023_07_presen.html#統計的仮説検定の基礎",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "統計的仮説検定の基礎",
    "text": "統計的仮説検定の基礎\n母集団の母数(母平均とか)を知りたいけれど観察できないので、母集団から標本(sample)を抽出して、標本の特徴をつかって母集団の母数を予想しようとすることを、統計的推定(statistical estimation)という。\n\n仮説をたてる\n有意水準を設定する\n検定統計量を計算する\n検定統計量の確率分布を求めて有意水準で棄却域を決める\n検定統計量が棄却域に入るかどうかを確認する"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#仮説の立て方帰無仮説と対立仮説",
    "href": "prezemi_2023_07_presen.html#仮説の立て方帰無仮説と対立仮説",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "仮説の立て方：帰無仮説と対立仮説",
    "text": "仮説の立て方：帰無仮説と対立仮説\n仮説の立て方は、\n\n帰無仮説(null hypothesis)と\n対立仮説(alternative hypothesis)\n\nの2つに分けられる。\n本当に示したい仮説(対立仮説)ではなく、その排反事象である帰無仮説を立てて、帰無仮説が棄却されることで、対立仮説が採択されるという考え方"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#仮説の立て方の例",
    "href": "prezemi_2023_07_presen.html#仮説の立て方の例",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "仮説の立て方の例",
    "text": "仮説の立て方の例\n\n帰無仮説\\(H_0\\) : 利益反応係数\\(ERC\\)はゼロである。　\\(ERC =0\\)\n対立仮説\\(H_A\\) : 利益反応係数$\\(ERC\\)はゼロではない。 \\(ERC \\not = 0\\)\n\n「母数がある特定の値をとる」という帰無仮説を否定するためには、その値以外の取りうることを示せばよいだけだが， 対立仮説が\\(ERC=0\\)であったなら、これを示すためには、\\(ERC \\not = 0\\)を示す必要があるが，これは不可能"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#統計的検定の諸問題",
    "href": "prezemi_2023_07_presen.html#統計的検定の諸問題",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "統計的検定の諸問題",
    "text": "統計的検定の諸問題\n仮説検定における2種類の「誤り」と検出力\n\n第1種の過誤(type 1 error) : 帰無仮説が正しいのに，帰無仮説を棄却してしまう誤り。偽陽性(False Positive)とも呼ばれる。\n第2種の過誤(type 2 error) : 帰無仮説が正しくないのに，帰無仮説を棄却しない誤り。偽陰性（False Negative）とも呼ばれる。\n\n第1種の過誤の例として，よく挙げられる犯罪容疑者の例で説明すると，容疑者が無実なのに，容疑者を有罪としてしまう(えん罪)誤りを第1種の過誤といい，容疑者が犯罪者なのに，容疑者を無罪としてしまう誤りを第2種の過誤といいます。\n第1種の過誤(えん罪)を小さくしたいとします。 この確率を$$で表し，実はこれが有意水準の大きさとなります。 有意水準5％というのは，ある検定統計量の標本分布の平均から離れた5％の面積に入る統計量をかけ離れた値とするかを(研究者が勝手に)決めたものです。 両側検定なら，標本平均から離れた左右の2.5％の面積に入る統計量をかけ離れた値とし，ここに計算した統計量が含まれるとき，帰無仮説を棄却します。\n第1種の過誤と減らすために有意水準を小さくすると，だい2種の過誤が大きくなります。 当然ですが，えん罪を減らそうとしてほとんどのケースを無罪とすると，犯罪者を逃がすことになる，というロジックと同じです。\n帰無仮説が正しいとした場合の正規分布を青色で，真の分布を赤色で示し，有意水準が両側で5％，つまり片側が2.5％となる図を書くとこんな感じです。\n\n# 正規分布の確率密度関数\ndnorm_with_mean_sd &lt;- function(x, mean = 0, sd = 1) {\n  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))\n}\n\n# パラメータの設定\nmu1 &lt;- 0   # 帰無仮説の平均\nsd1 &lt;- 1   # 帰無仮説の標準偏差\nmu2 &lt;- 1.5 # 対立仮説の平均\nsd2 &lt;- 1   # 対立仮説の標準偏差\nalpha = 0.025\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\")\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &lt; qnorm(alpha, mu1, sd1)),\n  aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(alpha, mu1, sd1) & x &lt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"両側検定における第1種の過誤と第2種の過誤\")\ng &lt;- g + geom_vline(xintercept = qnorm(1-alpha), linetype=\"dotted\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\n\ng &lt;- g + annotate(\"text\", x = mu1 + 2.5, y = max(df$dnorm1) / 6,\n           label = \"第1種の過誤\", color = \"darkblue\", family = \"HiraKakuProN-W3\") +\n  annotate(\"text\", x = mu2 - 0.5, y = max(df$dnorm2) / 6,\n           label = \"第2種の過誤\", color = \"darkred\", family = \"HiraKakuProN-W3\")\n\ng &lt;- g + annotate(\"text\", x = mu1 - 2, y = max(df$dnorm1)-0.1,\n                  label = \"帰無仮説下の分布\", color = \"blue\", family = \"HiraKakuProN-W3\" ) +\n  annotate(\"text\", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,\n           label = \"真の分布\", color = \"red\", family = \"HiraKakuProN-W3\")\nprint(g)\n\n\n\n\n帰無仮説が正しいときに帰無仮説を棄却する確率である第1種の過誤\\(\\alpha\\)を小さくすると，こうなります。\n\n\n\n\n\n片側検定の場合なら，こんな感じです。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#有意水準の設定",
    "href": "prezemi_2023_07_presen.html#有意水準の設定",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "有意水準の設定",
    "text": "有意水準の設定\nどんなときに帰無仮説を棄却するのかを決める。\n\n帰無仮説として仮定した母数の値から標本から計算した値が大きく異なる場合には、帰無仮説を棄却する、とする。\nどのくらい帰無仮説として仮定した母数の値から離れたら帰無仮説を棄却するのかを決めるのが有意水準(significance level)\n有意水準は、\\(\\alpha\\)で表され、会計研究では\\(0.01\\)、\\(0.05\\)、\\(0.10\\)が使われることが多い"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#有意水準の例",
    "href": "prezemi_2023_07_presen.html#有意水準の例",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "有意水準の例",
    "text": "有意水準の例\n母集団の平均\\(\\mu\\)が\\(0\\)である、という帰無仮説を考える。\n\n対立仮説は母集団の平均\\(\\mu\\)は\\(0\\)ではない，となる。\n標本サイズ100の標本から計算した標本平均の分布から計算した\\(t\\)値が自由度\\(100-1\\)の\\(t\\)分布にしたがうとき、\n\n\\[\nt = \\frac{\\bar{x} - \\mu}{s/\\sqrt{n}}\n\\]\nとなり，今\\(\\bar{x} = \\mu\\)という帰無仮説を仮定しているので、\\(t = 0\\)となる。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#有意水準の計算",
    "href": "prezemi_2023_07_presen.html#有意水準の計算",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "有意水準の計算",
    "text": "有意水準の計算\n\n\nRコード\n# 自由度を設定\nn = 100\ndf &lt;- n-1\n\n# データを生成\ndata &lt;- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y &lt;- dt(data$x, df) # 変数yを作成\n\n\n# 90%の領域の上限と下限をqt()で計算\nql &lt;- qt(0.025, df)\nqu &lt;- qt(0.975, df)\n\n# t分布を書く\ng &lt;- ggplot(data) + aes(x = x, y = y) + geom_line()\ng &lt;- g + geom_area(data = data %&gt;% filter(x &lt;= ql), fill = \"blue\", alpha = 0.3) + geom_area(data = data %&gt;% filter(x &gt;= qu), fill = \"blue\", alpha = 0.3)\ng &lt;- g + geom_vline(xintercept = 0, color = \"red\")\ng &lt;- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\")\ng &lt;- g + geom_hline(yintercept = 0)\ng &lt;- g + annotate(geom = \"text\", x = 2.4, y = 0.08, label = \"α/2\", size = 10)\ng &lt;- g + annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = 2.4, xend = 2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng &lt;- g + annotate(geom = \"text\", x = -2.4, y = 0.08, label = \"α/2\", size = 10) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = -2.4, xend = -2.2,\n  y = 0.07, yend = 0.04, color = \"black\", size = 0.5,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#検定統計量の計算",
    "href": "prezemi_2023_07_presen.html#検定統計量の計算",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "検定統計量の計算 ",
    "text": "検定統計量の計算 \n標本から平均などの統計量を計算し，その統計量は確率変数なので分布をもつ。\n\\[\n\\begin{aligned}\nt = \\frac{\\bar{x} - \\mu}{SE} = \\displaystyle \\frac{\\bar{x} - \\mu}{\\frac{u}{\\sqrt{n}}}\n\\end{aligned}\n\\] を検定統計量"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#rでやってみる",
    "href": "prezemi_2023_07_presen.html#rでやってみる",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "Rでやってみる",
    "text": "Rでやってみる\n\n母平均\\(62\\)，母標準偏差\\(5\\)の正規分布にしたがう変数\\(X\\)を考える。\n母集団のサイズは10000\n\n\n\nRコード\nN &lt;- 10000\ntrue_mean &lt;- 62\ntrue_sd &lt;- 5\nX &lt;- rnorm(N, true_mean, true_sd) # 母集団\n# 作図\nggplot(data.frame(X)) + aes(X) +\n  geom_histogram() + ggtitle(\"母集団\") +\n  geom_vline(xintercept = true_mean, color = \"red\")"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#サンプリング",
    "href": "prezemi_2023_07_presen.html#サンプリング",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "サンプリング",
    "text": "サンプリング\nこの母集団から標本サイズ100の標本を100個とりだし、平均を100個計算\n\nn &lt;- 100 # 標本サイズ\ntrial &lt;- 100\nsample_mean &lt;- replicate(trial, mean(sample(X,n)))\ndf_mean &lt;- data.frame(sample_mean)\n\nたとえば、ある標本の平均値は62.44となる。\nこの平均値がどのように分布しているのかを調べるために、ヒストグラムを作成してみます。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#標本平均のヒストグラム",
    "href": "prezemi_2023_07_presen.html#標本平均のヒストグラム",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "標本平均のヒストグラム",
    "text": "標本平均のヒストグラム\n\n\nRコード\ng_mean &lt;- ggplot(df_mean) + aes(x=sample_mean) +\n  geom_histogram() + xlab(\"標本平均\") + ylab(\"度数\") +\n  geom_vline(xintercept = mean(sample_mean), color = \"blue\") +\n  geom_vline(xintercept = 62, color=\"red\")\nprint(g_mean)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#標本平均のヒストグラム-1",
    "href": "prezemi_2023_07_presen.html#標本平均のヒストグラム-1",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "標本平均のヒストグラム",
    "text": "標本平均のヒストグラム\n\n\nRコード\ng_m &lt;- ggplot(df_mean) +\n    aes(x = reorder(seq_along(sample_mean), sample_mean), y = sample_mean) +\n    geom_bar(stat=\"identity\") + geom_hline(yintercept = 62, color = \"red\") +\n   coord_cartesian(ylim = c(60, 64)) +\n    ylab(\"標本平均\") + xlab(\"標本ID\") + ggtitle(\"標本平均の分布\")\nprint(g_m)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#標本平均の平均",
    "href": "prezemi_2023_07_presen.html#標本平均の平均",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "標本平均の平均",
    "text": "標本平均の平均\n\nおおよそ母平均\\(\\mu = 62\\)の周りに分布していることがわかりますが，かなり離れた標本平均をもつ標本もある\n100個の標本で最小の標本平均となった標本の平均は60.59\nこのように母平均62，母標準偏差5の母集団から抽出した1つの標本サイズ100の標本平均が，60.59という値になる確率を知りたい。\n標本平均から\\(t\\)値を計算し，その\\(t\\)値が自由度99の\\(t\\)分布にしたがう確率を求めることで，この確率を求める"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#仮説検定における2種類の誤りと検出力",
    "href": "prezemi_2023_07_presen.html#仮説検定における2種類の誤りと検出力",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "仮説検定における2種類の「誤り」と検出力",
    "text": "仮説検定における2種類の「誤り」と検出力\n\n第1種の過誤(type 1 error) : 帰無仮説が正しいのに，帰無仮説を棄却してしまう誤り。 偽陽性(False Positive)ともいう。\n第2種の過誤(type 2 error) : 帰無仮説が正しくないのに，帰無仮説を棄却しない誤り。 偽陰性（False Negative）ともいう。\n\n容疑者が無実なのに容疑者を有罪としてしまう(えん罪)誤りを第1種の過誤といい，容疑者が犯罪者なのに，容疑者を無罪としてしまう誤りを第2種の過誤という。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#第1種の過誤",
    "href": "prezemi_2023_07_presen.html#第1種の過誤",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "第1種の過誤",
    "text": "第1種の過誤\n\n第1種の過誤(えん罪)を小さくしたい。\n第1種の過誤の確率を$$で表し，有意水準の大きさとなる。\n有意水準5％というのは，ある検定統計量の標本分布の平均から離れた5％の面積に入る統計量をかけ離れた値とするかを(研究者が勝手に)決めたもの。\n両側検定なら，標本平均から離れた左右の2.5％の面積に入る統計量をかけ離れた値とし，ここに計算した統計量が含まれるとき，帰無仮説を棄却"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#第1種の過誤と第2種の過誤",
    "href": "prezemi_2023_07_presen.html#第1種の過誤と第2種の過誤",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "第1種の過誤と第2種の過誤",
    "text": "第1種の過誤と第2種の過誤\n\n第1種の過誤を減らすために有意水準を小さくすると，第2種の過誤が大きくなる。\nえん罪を減らそうとしてほとんどのケースを無罪とすると，犯罪者を逃がすことになる、ということ。\n帰無仮説が正しいとした場合の正規分布を青色で，真の分布を赤色で示し，有意水準が両側で5％，つまり片側が2.5％となる図を書くと次のようになる。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#つの過誤",
    "href": "prezemi_2023_07_presen.html#つの過誤",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "2つの過誤",
    "text": "2つの過誤\n\n\nRコード\n# 正規分布の確率密度関数\ndnorm_with_mean_sd &lt;- function(x, mean = 0, sd = 1) {\n  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))\n}\n\n# パラメータの設定\nmu1 &lt;- 0   # 帰無仮説の平均\nsd1 &lt;- 1   # 帰無仮説の標準偏差\nmu2 &lt;- 1.5 # 対立仮説の平均\nsd2 &lt;- 1   # 対立仮説の標準偏差\nalpha = 0.025\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\")\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &lt; qnorm(alpha, mu1, sd1)),\n  aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(alpha, mu1, sd1) & x &lt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"両側検定における第1種の過誤と第2種の過誤\")\ng &lt;- g + geom_vline(xintercept = qnorm(1-alpha), linetype=\"dotted\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\n\ng &lt;- g + annotate(\"text\", x = mu1 + 2.5, y = max(df$dnorm1) / 6,\n           label = \"第1種の過誤\", color = \"darkblue\", family = \"HiraKakuProN-W3\") +\n  annotate(\"text\", x = mu2 - 0.5, y = max(df$dnorm2) / 6,\n           label = \"第2種の過誤\", color = \"darkred\", family = \"HiraKakuProN-W3\")\n\ng &lt;- g + annotate(\"text\", x = mu1 - 2, y = max(df$dnorm1)-0.1,\n                  label = \"帰無仮説下の分布\", color = \"blue\", family = \"HiraKakuProN-W3\" ) +\n  annotate(\"text\", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,\n           label = \"真の分布\", color = \"red\", family = \"HiraKakuProN-W3\")\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#有意水準を小さくする",
    "href": "prezemi_2023_07_presen.html#有意水準を小さくする",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "有意水準を小さくする",
    "text": "有意水準を小さくする\n帰無仮説が正しいときに帰無仮説を棄却する確率である第1種の過誤\\(\\alpha\\)を小さくする。\n\n\nRコード\nalpha = 0.005\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\")\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &lt; qnorm(alpha, mu1, sd1)),\n  aes(y = dnorm1), fill = \"blue\", alpha = 0.2)\ng &lt;- g + geom_area(\n  data = subset(df, x &gt; qnorm(alpha, mu1, sd1) & x &lt; qnorm(1-alpha, mu1, sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"両側検定における第1種の過誤と第2種の過誤\")\ng &lt;- g + geom_vline(xintercept = qnorm(1-alpha), linetype=\"dotted\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\n\ng &lt;- g + annotate(\"text\", x = mu1 + 2.5, y = max(df$dnorm1) / 6,\n           label = \"第1種の過誤\", color = \"darkblue\", family = \"HiraKakuProN-W3\") +\n  annotate(\"text\", x = mu2 - 0.5, y = max(df$dnorm2) / 6,\n           label = \"第2種の過誤\", color = \"darkred\", family = \"HiraKakuProN-W3\")\n\ng &lt;- g + annotate(\"text\", x = mu1 - 2, y = max(df$dnorm1)-0.1,\n                  label = \"帰無仮説下の分布\", color = \"blue\", family = \"HiraKakuProN-W3\" ) +\n  annotate(\"text\", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,\n           label = \"真の分布\", color = \"red\", family = \"HiraKakuProN-W3\")\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#片側検定の場合",
    "href": "prezemi_2023_07_presen.html#片側検定の場合",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "片側検定の場合",
    "text": "片側検定の場合\n\n\nRコード\n# 正規分布の確率密度関数\ndnorm_with_mean_sd &lt;- function(x, mean = 0, sd = 1) {\n  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))\n}\n\n# パラメータの設定\nmu1 &lt;- 0   # 帰無仮説の平均\nsd1 &lt;- 1   # 帰無仮説の標準偏差\nmu2 &lt;- 1 # 対立仮説の平均\nsd2 &lt;- 1   # 対立仮説の標準偏差\n\n# サンプルデータを生成\nx &lt;- seq(-5, 5, by = 0.01)\ndf &lt;- data.frame(x = x,\n                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),\n                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))\n\n# ggplotを使って描画\ng &lt;- ggplot(df, aes(x = x)) +\n  geom_line(aes(y = dnorm1), color = \"blue\") +\n  geom_line(aes(y = dnorm2), color = \"red\") +\n  geom_area(data = subset(df, x &lt; qnorm(0.05, mean = mu1, sd = sd1)),\n            aes(y = dnorm1), fill = \"blue\", alpha = 0.2) +\n  geom_area(data = subset(df, x &gt; qnorm(0.05, mean = mu1, sd = sd1)),\n            aes(y = dnorm2), fill = \"red\", alpha = 0.2) +\n  theme_minimal() +\n  labs(x = \"Value\", y = \"Density\",\n       title = \"Visualization of Type I and Type II Errors\") +\n  annotate(\"text\", x = mu1 - 2.5, y = max(df$dnorm1) / 3,\n           label = \"Type I Error\", color = \"blue\") +\n  annotate(\"text\", x = mu2 + 2.5, y = max(df$dnorm2) / 3,\n           label = \"Type II Error\", color = \"red\")\ng &lt;- g + geom_vline(xintercept = mu1, color = \"darkblue\")\ng &lt;- g + geom_vline(xintercept = mu2, color = \"darkred\")\nprint(g)"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#パン屋さんの代替わり",
    "href": "prezemi_2023_07_presen.html#パン屋さんの代替わり",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "パン屋さんの代替わり",
    "text": "パン屋さんの代替わり\n\nとあるパン屋さんがある。\n先代経営者の麦田はじめさんは，半年前に息子にパン屋の経営を譲った。\n息子の代になってから，先代の頃に比べてパンの重量が減っているという噂が流れた。\nそこで，パンの重量が減っているかどうかを調べることにした。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#パンの重量の調査",
    "href": "prezemi_2023_07_presen.html#パンの重量の調査",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "パンの重量の調査",
    "text": "パンの重量の調査\n\nまず，パン屋さんに行って，400gと表記されている食パンを1斤買い，その重量を量ると403gだった。\nそれから30日間，食パンを1斤購入して重さを量り，表を作ったところ次のようになった。\n\n\n\n\n\n\ndate\nweight\n\n\n\n\n2023/1/7\n386.7\n\n\n2023/1/9\n396.7\n\n\n2023/1/10\n409.8\n\n\n2023/1/12\n384.5\n\n\n2023/1/14\n394.3\n\n\n2023/1/16\n396.2\n\n\n2023/1/18\n401.6\n\n\n2023/1/20\n392.8\n\n\n2023/1/22\n413.5\n\n\n2023/1/25\n393.7\n\n\n2023/2/3\n398.9\n\n\n2023/2/5\n404.1\n\n\n2023/2/7\n391.3\n\n\n2023/2/11\n385.3\n\n\n2023/2/14\n411.6\n\n\n2023/2/16\n373.5\n\n\n2023/2/18\n403.2\n\n\n2023/2/22\n395.3\n\n\n2023/2/24\n404.4\n\n\n2023/2/26\n399.0\n\n\n2023/3/3\n414.4\n\n\n2023/3/5\n383.8\n\n\n2023/3/7\n409.8\n\n\n2023/3/11\n413.2\n\n\n2023/3/14\n395.0\n\n\n2023/3/18\n372.2\n\n\n2023/3/22\n399.4\n\n\n2023/3/25\n389.5\n\n\n2023/3/27\n402.4\n\n\n2023/3/29\n397.7"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#パンの重量の調査-1",
    "href": "prezemi_2023_07_presen.html#パンの重量の調査-1",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "パンの重量の調査",
    "text": "パンの重量の調査\n\n30日間のパンの重要の平均は，397.13gだった。\n30日間購入した30個のパンは表記の400グラムより小さい。\nこの事実を持って，パンの重量が減っていると主張してもよいのか？\n\nこれが統計的仮説検定の考え方です。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#パンの重量の記述統計量",
    "href": "prezemi_2023_07_presen.html#パンの重量の記述統計量",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "パンの重量の記述統計量",
    "text": "パンの重量の記述統計量\n\nパンの重量の平均値は397.13g\nパンの重量の標準偏差は10.92g\n\nヒストグラムを描いてみると次のようになる。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#仮説検定",
    "href": "prezemi_2023_07_presen.html#仮説検定",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "仮説検定",
    "text": "仮説検定\n\n帰無仮説：標本の平均値と母集団の平均値との差は誤差の範囲内である。\n対立仮説：標本の平均値と母集団の平均値との差は誤差の範囲を超えている。\n\nつまり，どれだけ標本平均が母平均から離れていると，たまたまでた差ではなく，本来異なる母集団であることを意味する。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#仮説検定パンのケース",
    "href": "prezemi_2023_07_presen.html#仮説検定パンのケース",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "仮説検定：パンのケース",
    "text": "仮説検定：パンのケース\n\n帰無仮説：\\(\\mu = 400\\)，パンの重量は400gである。\n対立仮説：\\(\\mu \\not = 400\\), パンの重量は400gではない。\n\n帰無仮説が正しく，母平均が400gであると仮定したとき，標本平均397.13gが生じる確率はどのくらいか？を考える。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#標本平均のt値",
    "href": "prezemi_2023_07_presen.html#標本平均のt値",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "標本平均の\\(t\\)値",
    "text": "標本平均の\\(t\\)値\n\nt &lt;- (min(df_mean$sample_mean) - 62) / (5 / sqrt(n))\nprint(t)\n\n[1] -2.814472\n\n\n自由度99の\\(t\\)分布の下で，となる確率は求めると，\n\npt(t, df = n-1)\n\n[1] 0.002947437\n\n\nとなり，この確率は非常に小さい値となる。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#例",
    "href": "prezemi_2023_07_presen.html#例",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "例",
    "text": "例\n100個の標本から計算された標本平均は母平均62からかなり離れた値となる。 それぞれの標本平均から計算された\\(t\\)値の分布を調べる。\n\ndf_mean &lt;- df_mean %&gt;%\n  mutate(\n    t_value = (sample_mean - 62) / (5 / sqrt(n)),\n    p_value = pt(t_value, df = n-1)\n  )\nggplot(df_mean) +\n    aes(x = reorder(seq_along(p_value), p_value), y = p_value) + # グラフの設定\n    geom_bar(stat=\"identity\", fill = ifelse(df_mean$p_value &lt; 0.05, \"red\", \"black\")) + #\n    geom_hline(yintercept = 0.05, color = \"red\") + # 有意水準0.05\n    ylab(\"p値\") + xlab(\"標本ID\") + ggtitle(\"p値の分布\") # 軸の設定\n\n\nとなり，\\(t\\)値が生じる確率が5%未満となる標本がいくつかあることがわかった。"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#統計的検定",
    "href": "prezemi_2023_07_presen.html#統計的検定",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "統計的検定",
    "text": "統計的検定\n自分が集めた標本の1つから計算した標本平均、そして\\(t\\)値が、帰無仮説が正しいと仮定した場合に、その標本平均がどのくらいの確率で生じるかを調べ、それが5%未満や1%未満であったならば、帰無仮説が正しいと考えるよりも、帰無仮説とは異なる母平均をもつ母集団から標本を集めたから、そのような標本平均が生じたと考えるほうがもっともらしいと考える。\nこれが統計的仮説検定の考え方"
  },
  {
    "objectID": "prezemi_2023_07_presen.html#例-output",
    "href": "prezemi_2023_07_presen.html#例-output",
    "title": "プレゼミ2023  第7回 統計的仮説検定",
    "section": "例",
    "text": "例"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#準備",
    "href": "prezemi_2023_08_presen.html#準備",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "準備",
    "text": "準備\n\n# 文字化け防止のおまじない、R 4.1.0以降\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplot2のテーマ\nlibrary(knitr) # 作表\nlibrary(kableExtra) # 作表の拡張\nlibrary(scales)\n# テーマを設定\ntheme_set(theme_few(base_size = 12))\n# 以下、ggplot2のデフォルトを変更\nupdate_geom_defaults(\"point\", list(size = 3))"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#データの読み込み",
    "href": "prezemi_2023_08_presen.html#データの読み込み",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "データの読み込み",
    "text": "データの読み込み\n作業ディレクトリを確認・設定する。\n\ngetwd()\nsetwd(\"hoge\")"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#データの読み込み-1",
    "href": "prezemi_2023_08_presen.html#データの読み込み-1",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "データの読み込み",
    "text": "データの読み込み\n\ndf &lt;- read_csv(\"https://so-ichi.com/presemi08_2018.csv\")\nglimpse(df)\n\nRows: 21,427\nColumns: 30\n$ 日経会社コード                 &lt;chr&gt; \"0000191\", \"0000191\", \"0000191\", \"00001…\n$ 企業名称                       &lt;chr&gt; \"ニップン\", \"ニップン\", \"ニップン\", \"ニ…\n$ 決算種別                       &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準                       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 決算月数                       &lt;dbl&gt; 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 上場コード                     &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,…\n$ 連結子会社数                   &lt;dbl&gt; 47, 47, 48, 49, 45, 42, 47, 48, 72, 73,…\n$ 流動資産                       &lt;dbl&gt; 105143, 118330, 114534, 117693, 130768,…\n$ 資産合計                       &lt;dbl&gt; 272166, 293392, 290428, 307813, 325869,…\n$ 流動負債                       &lt;dbl&gt; 77675, 76100, 74078, 69544, 74842, 7861…\n$ 負債合計                       &lt;dbl&gt; 115261, 138405, 131847, 138749, 147171,…\n$ 純資産                         &lt;dbl&gt; 156905, 154986, 158581, 169063, 178697,…\n$ 売上高                         &lt;dbl&gt; 323495, 335399, 344839, 288324, 321317,…\n$ 売上原価                       &lt;dbl&gt; 234823, 243017, 247264, 218660, 246390,…\n$ 販管費                         &lt;dbl&gt; 78611, 81159, 86473, 59293, 63644, 6778…\n$ 親会社利益                     &lt;dbl&gt; 7651, 8455, 8941, 8636, 9327, 10260, 21…\n$ 税金等調整前当期純利益         &lt;dbl&gt; 11486, 12305, 13386, 13049, 13568, 1471…\n$ 営業活動によるキャッシュフロー &lt;dbl&gt; 15217, 17063, 15532, 14804, 11975, 1505…\n$ 投資活動によるキャッシュフロー &lt;dbl&gt; -11941, -14614, -14130, -12585, -10103,…\n$ 財務活動によるキャッシュフロー &lt;dbl&gt; 2824, 7135, -759, 2553, -4278, -8402, -…\n$ 現金及び現金同等物の期末残高   &lt;dbl&gt; 20556, 30085, 31012, 35320, 31215, 3315…\n$ 広告宣伝費                     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ 従業員数                       &lt;dbl&gt; 19571, 19943, 20700, 20960, 22263, 2293…\n$ 期末従業員数                   &lt;dbl&gt; 3696, 3687, 3737, 3880, 3775, 3848, 654…\n$ 発行済株式数                   &lt;dbl&gt; 82524009, 78824009, 78824009, 78824009,…\n$ 年度                           &lt;dbl&gt; 2018, 2019, 2020, 2021, 2022, 2023, 201…\n$ 決算月                         &lt;chr&gt; \"03\", \"03\", \"03\", \"03\", \"03\", \"03\", \"03…\n$ 大分類                         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 中分類                         &lt;chr&gt; \"食品\", \"食品\", \"食品\", \"食品\", \"食品\",…\n$ 小分類                         &lt;chr&gt; \"003\", \"003\", \"003\", \"003\", \"003\", \"003…"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#自作関数を作ってみる",
    "href": "prezemi_2023_08_presen.html#自作関数を作ってみる",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "自作関数を作ってみる。",
    "text": "自作関数を作ってみる。\n関数を作るには，function()を使う。 例えば，変数yとxを足す，という関数を作るとする。\n\nadd &lt;- function(y, x){\n  y + x\n}\n\nadd(1,4)\n\n[1] 5"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#自作関数を作ってみる-1",
    "href": "prezemi_2023_08_presen.html#自作関数を作ってみる-1",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "自作関数を作ってみる。",
    "text": "自作関数を作ってみる。\n関数を使うには，関数名(引数)とする。引数は複数でも良い。 ある産業のある項目の平均，分散，標準偏差を求める関数を作る。\n\nmystat &lt;- function(chu, item) {\n  df |&gt;\n    filter(中分類 == chu) |&gt;\n    summarise(\n      平均 = mean(!!sym(item), na.rm = TRUE),\n      分散 = var(!!sym(item), na.rm = TRUE),\n      標準偏差 = sd(!!sym(item), na.rm = TRUE)\n    ) |&gt;\n    kable() |&gt; kable_styling(font_size = 30)\n}"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#自作関数を使う",
    "href": "prezemi_2023_08_presen.html#自作関数を使う",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "自作関数を使う。",
    "text": "自作関数を使う。\n\nmystat(\"精密機器\", \"売上高\") # \"\"で囲まないとエラー\n\n\n\n\n平均\n分散\n標準偏差\n\n\n\n\n136743\n54112659167\n232621.3"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#折れ線グラフを作る関数",
    "href": "prezemi_2023_08_presen.html#折れ線グラフを作る関数",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "折れ線グラフを作る関数",
    "text": "折れ線グラフを作る関数\n特定企業の，特定項目のデータから折れ線グラフを作る関数myline()を作る。\n\nmyline &lt;- function(name, item) {\n  df |&gt;\n    filter(企業名称 == name) |&gt;\n    select(年度, !!sym(item)) |&gt;\n    ggplot(aes(x = 年度, y = !!sym(item), group = 1)) +\n    geom_line() + geom_point() +\n    labs(title = paste(name, item, sep = \" \"), x = \"年度\", y = item) +\n    scale_y_continuous(labels = label_number(scale = 1/100, suffix = '億')) + # 単位\n    theme_economist(base_family = \"HiraKakuProN-W3\") +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))\n}"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#折れ線グラフを作る関数-1",
    "href": "prezemi_2023_08_presen.html#折れ線グラフを作る関数-1",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "折れ線グラフを作る関数",
    "text": "折れ線グラフを作る関数\n\nmyline(\"トヨタ自動車\", \"売上高\")"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#ヒストグラムを作る関数",
    "href": "prezemi_2023_08_presen.html#ヒストグラムを作る関数",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "ヒストグラムを作る関数",
    "text": "ヒストグラムを作る関数\n\nmyhist &lt;- function(df, chu, item) {\n  df |&gt;\n    filter(中分類 == chu) |&gt;\n    ggplot(aes(x = !!sym(item))) +\n    geom_histogram(bins = 20) +\n    labs(title = paste(chu, item, sep = \" \"), x = item, y = \"頻度\") +\n    theme_economist(base_family = \"HiraKakuProN-W3\")\n}"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#ヒストグラムを作る関数-1",
    "href": "prezemi_2023_08_presen.html#ヒストグラムを作る関数-1",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "ヒストグラムを作る関数",
    "text": "ヒストグラムを作る関数\n\nmyhist(df, \"精密機器\", \"売上高\")"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#すべての産業でヒストグラムを作る",
    "href": "prezemi_2023_08_presen.html#すべての産業でヒストグラムを作る",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "すべての産業でヒストグラムを作る",
    "text": "すべての産業でヒストグラムを作る\nループと自作関数myhist()を使って，一気に全産業のヒストグラムを作成してオブジェクトに代入し，patchworkで並べて表示する。\n\np &lt;- NULL\nfor (chu in unique(df$中分類)) {\n  p &lt;- c(p, myhist(df, chu, \"売上高\"))\n}\np\n\n$data\n# A tibble: 695 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000191        ニップン          10        1       12         11           47\n 2 0000191        ニップン          10        1       12         11           47\n 3 0000191        ニップン          10        1       12         11           48\n 4 0000191        ニップン          10        1       12         11           49\n 5 0000191        ニップン          10        1       12         11           45\n 6 0000191        ニップン          10        1       12         11           42\n 7 0000192        日清製粉グ…       10        1       12         11           47\n 8 0000192        日清製粉グ…       10        1       12         11           48\n 9 0000192        日清製粉グ…       10        1       12         11           72\n10 0000192        日清製粉グ…       10        1       12         11           73\n# ℹ 685 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x134e7eca0&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"食品 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 239 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000301        片倉工業       10        1       12         12            7\n 2 0000301        片倉工業       10        1       12         12            6\n 3 0000301        片倉工業       10        1       12         12            6\n 4 0000301        片倉工業       10        1       12         12            5\n 5 0000301        片倉工業       10        1       12         12            5\n 6 0000302        グンゼ         10        1       12         11           44\n 7 0000302        グンゼ         10        1       12         11           46\n 8 0000302        グンゼ         10        1       12         11           48\n 9 0000302        グンゼ         10        1       12         11           48\n10 0000302        グンゼ         10        1       12         11           50\n# ℹ 229 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x1347e0490&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"繊維 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 129 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000417        王子ホール…       10        1       12         11          189\n 2 0000417        王子ホール…       10        1       12         11          190\n 3 0000417        王子ホール…       10        1       12         11          189\n 4 0000417        王子ホール…       10        1       12         11          188\n 5 0000417        王子ホール…       10        1       12         11          186\n 6 0000417        王子ホール…       10        1       12         11          196\n 7 0000419        日本製紙          10        1       12         11           44\n 8 0000419        日本製紙          10        1       12         11           48\n 9 0000419        日本製紙          10        1       12         11           50\n10 0000419        日本製紙          10        1       12         11           54\n# ℹ 119 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x115e80390&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"パルプ・紙 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 1,170 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000349        クラレ         10        1       12         11           77\n 2 0000349        クラレ         10        1       12         11           77\n 3 0000349        クラレ         10        1       12         11           78\n 4 0000349        クラレ         10        1       12         11           76\n 5 0000349        クラレ         10        1       12         11           77\n 6 0000351        旭化成         10        1       12         11          171\n 7 0000351        旭化成         10        1       12         11          203\n 8 0000351        旭化成         10        1       12         11          211\n 9 0000351        旭化成         10        1       12         11          228\n10 0000351        旭化成         10        1       12         11          273\n# ℹ 1,160 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x113759868&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"化学工業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 407 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000522        協和キリン        10        3       12         11           49\n 2 0000522        協和キリン        10        3       12         11           38\n 3 0000522        協和キリン        10        3       12         11           37\n 4 0000522        協和キリン        10        3       12         11           35\n 5 0000522        協和キリン        10        3       12         11           39\n 6 0000590        日本ケミフ…       10        1       12         11            4\n 7 0000590        日本ケミフ…       10        1       12         11            4\n 8 0000590        日本ケミフ…       10        1       12         11            4\n 9 0000590        日本ケミフ…       10        1       12         11            4\n10 0000590        日本ケミフ…       10        1       12         11            4\n# ℹ 397 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110a7ca90&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"医薬品 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 53 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000557        ニチレキ       10        1       12         11           30\n 2 0000557        ニチレキ       10        1       12         11           33\n 3 0000557        ニチレキ       10        1       12         11           34\n 4 0000557        ニチレキ       10        1       12         11           35\n 5 0000557        ニチレキ       10        1       12         11           35\n 6 0000557        ニチレキ       10        1       12         11           34\n 7 0000669        日本精蝋       10        1       12         12            2\n 8 0000669        日本精蝋       10        1       12         12            2\n 9 0000669        日本精蝋       10        1       12         12            2\n10 0000669        日本精蝋       10        1       12         12            2\n# ℹ 43 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x12101e8c0&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"石油 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 109 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000691        横浜ゴム          10        3       12         11          123\n 2 0000691        横浜ゴム          10        3       12         11          121\n 3 0000691        横浜ゴム          10        3       12         11          113\n 4 0000691        横浜ゴム          10        3       12         11          109\n 5 0000691        横浜ゴム          10        3       12         11          109\n 6 0000693        昭和ホール…       10        1       12         12           18\n 7 0000693        昭和ホール…       10        1       12         12           21\n 8 0000693        昭和ホール…       10        1       12         12           21\n 9 0000693        昭和ホール…       10        1       12         12           21\n10 0000693        昭和ホール…       10        1       12         12           12\n# ℹ 99 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x1216bc0e8&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"ゴム 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 305 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000317        日東紡         10        1       12         11           20\n 2 0000317        日東紡         10        1       12         11           22\n 3 0000317        日東紡         10        1       12         11           23\n 4 0000317        日東紡         10        1       12         11           22\n 5 0000317        日東紡         10        1       12         11           22\n 6 0000317        日東紡         10        1       12         11           21\n 7 0000721        ＡＧＣ         10        3       12         11          213\n 8 0000721        ＡＧＣ         10        3       12         11          213\n 9 0000721        ＡＧＣ         10        3       12         11          217\n10 0000721        ＡＧＣ         10        3       12         11          206\n# ℹ 295 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x1107320c0&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"窯業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 247 × 30\n   日経会社コード 企業名称   決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000801        日本製鉄         10        3       12         11            0\n 2 0000801        日本製鉄         10        3       12         11          420\n 3 0000801        日本製鉄         10        3       12         11          408\n 4 0000801        日本製鉄         10        3       12         11          389\n 5 0000801        日本製鉄         10        3       12         11          378\n 6 0000801        日本製鉄         10        3       12         11          360\n 7 0000806        神戸製鋼所       10        1       12         11          173\n 8 0000806        神戸製鋼所       10        1       12         11          177\n 9 0000806        神戸製鋼所       10        1       12         11          175\n10 0000806        神戸製鋼所       10        1       12         11          175\n# ℹ 237 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x121c77228&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"鉄鉱業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 706 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000043        古河機械金…       10        1       12         11           35\n 2 0000043        古河機械金…       10        1       12         11           33\n 3 0000043        古河機械金…       10        1       12         11           32\n 4 0000043        古河機械金…       10        1       12         11           31\n 5 0000043        古河機械金…       10        1       12         11           32\n 6 0000043        古河機械金…       10        1       12         11           32\n 7 0000045        三井金属鉱…       10        1       12         11           53\n 8 0000045        三井金属鉱…       10        1       12         11           52\n 9 0000045        三井金属鉱…       10        1       12         11           51\n10 0000045        三井金属鉱…       10        1       12         11           53\n# ℹ 696 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x1309b0400&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"非金属及び金属製品 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 1,273 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000021        ニッチツ          10        1       12         12            2\n 2 0000021        ニッチツ          10        1       12         12            3\n 3 0000021        ニッチツ          10        1       12         12            3\n 4 0000021        ニッチツ          10        1       12         12            3\n 5 0000021        ニッチツ          10        1       12         12            3\n 6 0000021        ニッチツ          10        1       12         12            3\n 7 0000571        小池酸素工…       10        1       12         12           11\n 8 0000571        小池酸素工…       10        1       12         12           11\n 9 0000571        小池酸素工…       10        1       12         12           11\n10 0000571        小池酸素工…       10        1       12         12           11\n# ℹ 1,263 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x130ffa148&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"機械 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 1,407 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000313        日清紡ホー…       10        1       12         11          109\n 2 0000313        日清紡ホー…       10        1        9         11          106\n 3 0000313        日清紡ホー…       10        1       12         11          106\n 4 0000313        日清紡ホー…       10        1       12         11          104\n 5 0000313        日清紡ホー…       10        1       12         11          101\n 6 0000313        日清紡ホー…       10        1       12         11           99\n 7 0000488        イビデン          10        1       12         11           37\n 8 0000488        イビデン          10        1       12         11           39\n 9 0000488        イビデン          10        1       12         11           39\n10 0000488        イビデン          10        1       12         11           38\n# ℹ 1,397 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x134d1dc28&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"電気機器 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 24 × 30\n   日経会社コード 企業名称   決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001321        三井Ｅ＆Ｓ       10        1       12         11           85\n 2 0001321        三井Ｅ＆Ｓ       10        1       12         11           91\n 3 0001321        三井Ｅ＆Ｓ       10        1       12         11           87\n 4 0001321        三井Ｅ＆Ｓ       10        1       12         11           82\n 5 0001321        三井Ｅ＆Ｓ       10        1       12         11           52\n 6 0001321        三井Ｅ＆Ｓ       10        1       12         11           47\n 7 0001326        川崎重工業       10        1       12         11           93\n 8 0001326        川崎重工業       10        1       12         11           94\n 9 0001326        川崎重工業       10        1       12         11           96\n10 0001326        川崎重工業       10        1       12         11           99\n# ℹ 14 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x135238f60&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"造船 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 430 × 30\n   日経会社コード 企業名称   決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000322        トヨタ紡織       10        3       12         11            0\n 2 0000322        トヨタ紡織       10        3       12         11           80\n 3 0000322        トヨタ紡織       10        3       12         11           80\n 4 0000322        トヨタ紡織       10        3       12         11           78\n 5 0000322        トヨタ紡織       10        3       12         11           73\n 6 0000322        トヨタ紡織       10        3       12         11           72\n 7 0000363        芦森工業         10        1       12         11           14\n 8 0000363        芦森工業         10        1       12         11           14\n 9 0000363        芦森工業         10        1       12         11           14\n10 0000363        芦森工業         10        1       12         11           14\n# ℹ 420 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110df2e40&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"自動車・自動車部品 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 67 × 30\n   日経会社コード 企業名称   決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001361        新明和工業       10        1       12         11           18\n 2 0001361        新明和工業       10        1       12         11           20\n 3 0001361        新明和工業       10        1       12         11           20\n 4 0001361        新明和工業       10        1       12         11           26\n 5 0001361        新明和工業       10        1       12         11           31\n 6 0001361        新明和工業       10        1       12         11           30\n 7 0001363        トピー工業       10        1       12         11           24\n 8 0001363        トピー工業       10        1       12         11           29\n 9 0001363        トピー工業       10        1       12         11           29\n10 0001363        トピー工業       10        1       12         11           28\n# ℹ 57 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x116d22d10&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"その他輸送用機器 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 287 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000639        コニカミノ…       10        3       12         11          164\n 2 0000639        コニカミノ…       10        3       12         11          174\n 3 0000639        コニカミノ…       10        3       12         11          170\n 4 0000639        コニカミノ…       10        3       12         11          171\n 5 0000639        コニカミノ…       10        3       12         11          166\n 6 0000639        コニカミノ…       10        3       12         11          168\n 7 0000728        ＨＯＹＡ          10        3       12         11          148\n 8 0000728        ＨＯＹＡ          10        3       12         11          146\n 9 0000728        ＨＯＹＡ          10        3       12         11          145\n10 0000728        ＨＯＹＡ          10        3       12         11          143\n# ℹ 277 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x115295120&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"精密機器 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 655 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000475        神島化学工…       10        0       12         12            0\n 2 0000475        神島化学工…       10        0       12         12            0\n 3 0000475        神島化学工…       10        0       12         12            0\n 4 0000475        神島化学工…       10        0       12         12            0\n 5 0000475        神島化学工…       10        0       12         12            0\n 6 0000475        神島化学工…       10        0       12         12            0\n 7 0000950        浅香工業          10        0       12         12            0\n 8 0000950        浅香工業          10        0       12         12            0\n 9 0000950        浅香工業          10        0       12         12            0\n10 0000950        浅香工業          10        0       12         12            0\n# ℹ 645 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x11290ed48&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"その他製造業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 66 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000001        極洋           10        1       12         11           24\n 2 0000001        極洋           10        1       12         11           24\n 3 0000001        極洋           10        1       12         11           26\n 4 0000001        極洋           10        1       12         11           25\n 5 0000001        極洋           10        1       12         11           25\n 6 0000001        極洋           10        1       12         11           26\n 7 0000003        ニッスイ       10        1       12         11           65\n 8 0000003        ニッスイ       10        1       12         11           64\n 9 0000003        ニッスイ       10        1       12         11           65\n10 0000003        ニッスイ       10        1       12         11           66\n# ℹ 56 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110ebe0a8&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"水産 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 41 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000022        日鉄鉱業          10        1       12         11           22\n 2 0000022        日鉄鉱業          10        1       12         11           22\n 3 0000022        日鉄鉱業          10        1       12         11           22\n 4 0000022        日鉄鉱業          10        1       12         11           22\n 5 0000022        日鉄鉱業          10        1       12         11           22\n 6 0000022        日鉄鉱業          10        1       12         11           22\n 7 0000023        三井松島ホ…       10        1       12         11           17\n 8 0000023        三井松島ホ…       10        1       12         11           17\n 9 0000023        三井松島ホ…       10        1       12         11           18\n10 0000023        三井松島ホ…       10        1       12         11           26\n# ℹ 31 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x12155d530&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"鉱業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 915 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000055        ユアテック        10        1       12         11           15\n 2 0000055        ユアテック        10        1       12         11           16\n 3 0000055        ユアテック        10        1       12         11           14\n 4 0000055        ユアテック        10        1       12         11           15\n 5 0000055        ユアテック        10        1       12         11           16\n 6 0000055        ユアテック        10        1       12         11           16\n 7 0000056        日比谷総合…       10        1       12         11            3\n 8 0000056        日比谷総合…       10        1       12         11            3\n 9 0000056        日比谷総合…       10        1       12         11            3\n10 0000056        日比谷総合…       10        1       12         11            2\n# ℹ 905 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110606890&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"建設 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 1,814 × 30\n   日経会社コード 企業名称   決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000016        太平洋興発       10        1       12         12           14\n 2 0000016        太平洋興発       10        1       12         12           14\n 3 0000016        太平洋興発       10        1       12         12           14\n 4 0000016        太平洋興発       10        1       12         12           13\n 5 0000016        太平洋興発       10        1       12         12           13\n 6 0000016        太平洋興発       10        1       12         12           13\n 7 0000278        ヨコレイ         10        1       12         11            9\n 8 0000278        ヨコレイ         10        1       12         11            9\n 9 0000278        ヨコレイ         10        1       12         11            6\n10 0000278        ヨコレイ         10        1       12         11            2\n# ℹ 1,804 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x121b57f10&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"商社 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 1,434 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000308        バナーズ          10        1       12         12            4\n 2 0000308        バナーズ          10        1       12         12            3\n 3 0000308        バナーズ          10        1       12         12            3\n 4 0000308        バナーズ          10        1       12         12            3\n 5 0000308        バナーズ          10        1       12         12            3\n 6 0000308        バナーズ          10        1       12         12            3\n 7 0001286        大黒屋ホー…       10        1       12         12            9\n 8 0001286        大黒屋ホー…       10        1       12         12           10\n 9 0001286        大黒屋ホー…       10        1       12         12           10\n10 0001286        大黒屋ホー…       10        1       12         12           10\n# ℹ 1,424 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x130898da0&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"小売業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 977 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000319        Ｏａｋ　キ…       10        1       12         12            1\n 2 0000319        Ｏａｋ　キ…       10        1       12         12            4\n 3 0000319        Ｏａｋ　キ…       10        1       12         12            7\n 4 0000319        Ｏａｋ　キ…       10        1       12         12            6\n 5 0000319        Ｏａｋ　キ…       10        1       12         12            6\n 6 0000319        Ｏａｋ　キ…       10        1       12         12            8\n 7 0000325        マーチャン…       10        1       12         12            1\n 8 0000325        マーチャン…       10        1       12         12            3\n 9 0000325        マーチャン…       10        1       12         12            3\n10 0000325        マーチャン…       10        1       12         12            4\n# ℹ 967 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x130ed4d88&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"その他金融業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 787 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000303        ヒューリッ…       10        1       12         11           19\n 2 0000303        ヒューリッ…       10        1       12         11           22\n 3 0000303        ヒューリッ…       10        1       12         11           22\n 4 0000303        ヒューリッ…       10        1       12         11           20\n 5 0000303        ヒューリッ…       10        1       12         11           20\n 6 0001801        三井不動産        10        1       12         11          242\n 7 0001801        三井不動産        10        1       12         11          255\n 8 0001801        三井不動産        10        1       12         11          275\n 9 0001801        三井不動産        10        1       12         11          286\n10 0001801        三井不動産        10        1       12         11          286\n# ℹ 777 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x134c1b900&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"不動産 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 168 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001831        東武鉄道          10        1       12         11           81\n 2 0001831        東武鉄道          10        1       12         11           81\n 3 0001831        東武鉄道          10        1       12         11           80\n 4 0001831        東武鉄道          10        1       12         11           80\n 5 0001831        東武鉄道          10        1       12         11           78\n 6 0001831        東武鉄道          10        1       12         11           69\n 7 0001833        相鉄ホール…       10        1       12         11           29\n 8 0001833        相鉄ホール…       10        1       12         11           31\n 9 0001833        相鉄ホール…       10        1       12         11           32\n10 0001833        相鉄ホール…       10        1       12         11           33\n# ℹ 158 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x135139d28&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"鉄道・バス 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 191 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001874        ヤマトホー…       10        1       12         11           40\n 2 0001874        ヤマトホー…       10        1       12         11           39\n 3 0001874        ヤマトホー…       10        1       12         11           39\n 4 0001874        ヤマトホー…       10        1       12         11           39\n 5 0001874        ヤマトホー…       10        1       12         11           30\n 6 0001874        ヤマトホー…       10        1       12         11           29\n 7 0001875        山九              10        1       12         11           57\n 8 0001875        山九              10        1       12         11           56\n 9 0001875        山九              10        1       12         11           57\n10 0001875        山九              10        1       12         11           56\n# ℹ 181 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x12198cdb0&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"陸運 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 65 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001901        日本郵船       10        1       12         11          538\n 2 0001901        日本郵船       10        1       12         11          510\n 3 0001901        日本郵船       10        1       12         11          501\n 4 0001901        日本郵船       10        1       12         11          502\n 5 0001901        日本郵船       10        1       12         11          488\n 6 0001901        日本郵船       10        1       12         11          493\n 7 0001903        商船三井       10        1       12         11          369\n 8 0001903        商船三井       10        1       12         11          371\n 9 0001903        商船三井       10        1       12         11          368\n10 0001903        商船三井       10        1       12         11          363\n# ℹ 55 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x116f90268&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"海運 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 32 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001941        日本航空          10        1       12         11           51\n 2 0001941        日本航空          10        1       12         11           54\n 3 0001941        日本航空          10        3       12         11            0\n 4 0001941        日本航空          10        3       12         11           55\n 5 0001941        日本航空          10        3       12         11           59\n 6 0001941        日本航空          10        3       12         11           56\n 7 0001942        ＡＮＡホー…       10        1       12         11           64\n 8 0001942        ＡＮＡホー…       10        1       12         11           62\n 9 0001942        ＡＮＡホー…       10        1       12         11           62\n10 0001942        ＡＮＡホー…       10        1       12         11           56\n# ℹ 22 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x115511c90&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"空輸 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 216 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0001876        日新           10        1       12         11           55\n 2 0001876        日新           10        1       12         11           54\n 3 0001876        日新           10        1       12         11           54\n 4 0001876        日新           10        1       12         11           53\n 5 0001876        日新           10        1       12         11           56\n 6 0001876        日新           10        1       12         11           55\n 7 0001927        東京汽船       10        1       12         12            5\n 8 0001927        東京汽船       10        1       12         12            5\n 9 0001927        東京汽船       10        1       12         12            5\n10 0001927        東京汽船       10        1       12         12            5\n# ℹ 206 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x13468a488&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"倉庫・運輸関連 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 218 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0002001        ＴＢＳホー…       10        1       12         11           31\n 2 0002001        ＴＢＳホー…       10        1       12         11           31\n 3 0002001        ＴＢＳホー…       10        1       12         11           25\n 4 0002001        ＴＢＳホー…       10        1       12         11           25\n 5 0002001        ＴＢＳホー…       10        1       12         11           22\n 6 0002001        ＴＢＳホー…       10        1       12         11           22\n 7 0002003        日本テレビ…       10        1       12         11           20\n 8 0002003        日本テレビ…       10        1       12         11           22\n 9 0002003        日本テレビ…       10        1       12         11           22\n10 0002003        日本テレビ…       10        1       12         11           22\n# ℹ 208 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110ddbe70&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"通信 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 82 × 30\n   日経会社コード 企業名称    決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0002021        東京電力ホ…       10        1       12         11           43\n 2 0002021        東京電力ホ…       10        1       12         11           49\n 3 0002021        東京電力ホ…       10        1       12         11           45\n 4 0002021        東京電力ホ…       10        1       12         11           45\n 5 0002021        東京電力ホ…       10        1       12         11           51\n 6 0002021        東京電力ホ…       10        1       12         11           71\n 7 0002022        中部電力          10        1       12         11           32\n 8 0002022        中部電力          10        1       12         11           37\n 9 0002022        中部電力          10        1       12         11           35\n10 0002022        中部電力          10        1       12         11           39\n# ℹ 72 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x1214b38e8&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"電力 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 52 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0002041        東京ガス       10        1       12         11           74\n 2 0002041        東京ガス       10        1       12         11           78\n 3 0002041        東京ガス       10        1       12         11           82\n 4 0002041        東京ガス       10        1       12         11          107\n 5 0002041        東京ガス       10        1       12         11          113\n 6 0002041        東京ガス       10        1       12         11          102\n 7 0002042        大阪ガス       10        1       12         11          138\n 8 0002042        大阪ガス       10        1       12         11          150\n 9 0002042        大阪ガス       10        1       12         11          156\n10 0002042        大阪ガス       10        1       12         11          154\n# ℹ 42 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x110558a88&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"ガス 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE\n\n\n$data\n# A tibble: 6,166 × 30\n   日経会社コード 企業名称 決算種別 連結基準 決算月数 上場コード 連結子会社数\n   &lt;chr&gt;          &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;        &lt;dbl&gt;\n 1 0000015        常磐興産       10        1       12         12            2\n 2 0000015        常磐興産       10        1       12         12            2\n 3 0000015        常磐興産       10        1       12         12            3\n 4 0000015        常磐興産       10        1       12         12            3\n 5 0000015        常磐興産       10        1       12         12            3\n 6 0000015        常磐興産       10        1       12         12            3\n 7 0000169        オオバ         10        1       12         11            4\n 8 0000169        オオバ         10        1       12         11            3\n 9 0000169        オオバ         10        1       12         11            3\n10 0000169        オオバ         10        1       12         11            3\n# ℹ 6,156 more rows\n# ℹ 23 more variables: 流動資産 &lt;dbl&gt;, 資産合計 &lt;dbl&gt;, 流動負債 &lt;dbl&gt;,\n#   負債合計 &lt;dbl&gt;, 純資産 &lt;dbl&gt;, 売上高 &lt;dbl&gt;, 売上原価 &lt;dbl&gt;, 販管費 &lt;dbl&gt;,\n#   親会社利益 &lt;dbl&gt;, 税金等調整前当期純利益 &lt;dbl&gt;,\n#   営業活動によるキャッシュフロー &lt;dbl&gt;, 投資活動によるキャッシュフロー &lt;dbl&gt;,\n#   財務活動によるキャッシュフロー &lt;dbl&gt;, 現金及び現金同等物の期末残高 &lt;dbl&gt;,\n#   広告宣伝費 &lt;dbl&gt;, 従業員数 &lt;dbl&gt;, 期末従業員数 &lt;dbl&gt;, 発行済株式数 &lt;dbl&gt;, …\n\n$layers\n$layers[[1]]\ngeom_bar: na.rm = FALSE, orientation = NA\nstat_bin: binwidth = NULL, bins = 20, na.rm = FALSE, orientation = NA, pad = FALSE\nposition_stack \n\n\n$scales\n&lt;ggproto object: Class ScalesList, gg&gt;\n    add: function\n    clone: function\n    find: function\n    get_scales: function\n    has_scale: function\n    input: function\n    n: function\n    non_position_scales: function\n    scales: list\n    super:  &lt;ggproto object: Class ScalesList, gg&gt;\n\n$mapping\nAesthetic mapping: \n* `x` -&gt; `売上高`\n\n$theme\nList of 41\n $ line                :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"black\"\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text           :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 10points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 10points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 10points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks          :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.ticks.y        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.length   : 'simpleUnit' num -5points\n  ..- attr(*, \"unit\")= int 8\n $ axis.line           :List of 6\n  ..$ colour       : NULL\n  ..$ linewidth    : 'rel' num 0.8\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ axis.line.y         : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.background   :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.spacing      : 'simpleUnit' num 15points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key          :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ legend.key.size     : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height   : NULL\n $ legend.key.width    : NULL\n $ legend.text         :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.align   : NULL\n $ legend.title        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.align  : NULL\n $ legend.position     : chr \"top\"\n $ legend.direction    : NULL\n $ legend.justification: chr \"center\"\n $ panel.background    :List of 5\n  ..$ fill         : NULL\n  ..$ colour       : NULL\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ panel.border        : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ panel.spacing       : 'simpleUnit' num 0.25lines\n  ..- attr(*, \"unit\")= int 3\n $ panel.grid.major    :List of 6\n  ..$ colour       : chr \"white\"\n  ..$ linewidth    : 'rel' num 1.75\n  ..$ linetype     : NULL\n  ..$ lineend      : NULL\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ panel.grid.minor    : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ plot.background     :List of 5\n  ..$ fill         : Named chr \"#d5e4eb\"\n  .. ..- attr(*, \"names\")= chr \"blue-gray\"\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ plot.title          :List of 11\n  ..$ family       : NULL\n  ..$ face         : chr \"bold\"\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.5\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ plot.margin         : 'simpleUnit' num [1:4] 12points 10points 12points 10points\n  ..- attr(*, \"unit\")= int 8\n $ strip.background    :List of 5\n  ..$ fill         : Named chr NA\n  .. ..- attr(*, \"names\")= chr NA\n  ..$ colour       : logi NA\n  ..$ linewidth    : NULL\n  ..$ linetype     : num 0\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ strip.text          :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 1.25\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.x        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ strip.text.y        :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ panel.grid.major.x  : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n$coordinates\n&lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n    aspect: function\n    backtransform_range: function\n    clip: on\n    default: TRUE\n    distance: function\n    expand: TRUE\n    is_free: function\n    is_linear: function\n    labels: function\n    limits: list\n    modify_scales: function\n    range: function\n    render_axis_h: function\n    render_axis_v: function\n    render_bg: function\n    render_fg: function\n    setup_data: function\n    setup_layout: function\n    setup_panel_guides: function\n    setup_panel_params: function\n    setup_params: function\n    train_panel_guides: function\n    transform: function\n    super:  &lt;ggproto object: Class CoordCartesian, Coord, gg&gt;\n\n$facet\n&lt;ggproto object: Class FacetNull, Facet, gg&gt;\n    compute_layout: function\n    draw_back: function\n    draw_front: function\n    draw_labels: function\n    draw_panels: function\n    finish_data: function\n    init_scales: function\n    map_data: function\n    params: list\n    setup_data: function\n    setup_params: function\n    shrink: TRUE\n    train_scales: function\n    vars: function\n    super:  &lt;ggproto object: Class FacetNull, Facet, gg&gt;\n\n$plot_env\n&lt;environment: 0x121ab6178&gt;\n\n$labels\n$labels$x\n[1] \"売上高\"\n\n$labels$y\n[1] \"頻度\"\n\n$labels$title\n[1] \"サービス業 売上高\"\n\n$labels$weight\n[1] \"weight\"\nattr(,\"fallback\")\n[1] TRUE"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#a",
    "href": "prezemi_2023_08_presen.html#a",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "a",
    "text": "a\n\nfor (chu in unique(df$中分類)) {\n  print(myhist(df, chu, \"売上高\"))\n}"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#平均と分散を計算する関数を作ってみよう",
    "href": "prezemi_2023_08_presen.html#平均と分散を計算する関数を作ってみよう",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "平均と分散を計算する関数を作ってみよう。",
    "text": "平均と分散を計算する関数を作ってみよう。\n\nデータの個数は，ベクトルならlength()，データフレームならnrow()\n合計はsum()，sum()を使わないならfor()\nfunction()を使って関数を作る。\n\n\n# 書き方\n\nmyfunc &lt;- function(x){\n  # 何かしらの処理\n  # y = f(x)\n  return(y)\n}"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#合計を計算",
    "href": "prezemi_2023_08_presen.html#合計を計算",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "合計を計算",
    "text": "合計を計算\n\nx &lt;- c(1:10) # 1〜10までの整数\nsum(x) # 合計\n\n[1] 55\n\n\nforループを使うなら，\n\ns &lt;- 0 # 初期値\nfor(i in 1:length(x)){ # ループ\n    s &lt;- s + x[i] # 合計\n  }\nprint(s) # 結果\n\n[1] 55"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#平均を計算",
    "href": "prezemi_2023_08_presen.html#平均を計算",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "平均を計算",
    "text": "平均を計算\n\ns &lt;- 0 # 初期値\nfor(i in 1:length(x)){ # ループ\n    s &lt;- s + x[i] # 合計\n  }\nsumx &lt;- s / length(x)\nprint(sumx)\n\n[1] 5.5\n\n\n基本関数mean()を使えば，\n\nmean(x) # 一撃\n\n[1] 5.5"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#日産も作ってみる",
    "href": "prezemi_2023_08_presen.html#日産も作ってみる",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "日産も作ってみる。",
    "text": "日産も作ってみる。\n\nmyline(\"日産自動車\", \"売上高\")"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#並べてみる",
    "href": "prezemi_2023_08_presen.html#並べてみる",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "並べてみる",
    "text": "並べてみる\n\ng1 &lt;- myline(\"トヨタ自動車\", \"売上高\")\ng2 &lt;- myline(\"日産自動車\", \"売上高\")\nlibrary(patchwork)\ng1/g2"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#製造業-vs-非製造業",
    "href": "prezemi_2023_08_presen.html#製造業-vs-非製造業",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "製造業 vs 非製造業",
    "text": "製造業 vs 非製造業\n製造業と非製造業で売上高利益率が違うかどうかの検定を行う。 いきなり計算するのではなく，まずはデータを見てみる。\n\nsummary(df$売上高)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n       0     7290    24356   209424    93960 37154298 \n\n\n売上高ゼロはまずいので，あとで除外する。"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#製造業-vs-非製造業-1",
    "href": "prezemi_2023_08_presen.html#製造業-vs-非製造業-1",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "製造業 vs 非製造業",
    "text": "製造業 vs 非製造業\n\nsummary(df$親会社利益)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-1708029      172      877    10059     3835  4987962 \n\n\n赤字企業も利益率を計算する上で邪魔なので，除外する。"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#製造業-vs-非製造業-2",
    "href": "prezemi_2023_08_presen.html#製造業-vs-非製造業-2",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "製造業 vs 非製造業",
    "text": "製造業 vs 非製造業\n\ndf &lt;- df |&gt;\n  filter(売上高 &gt; 0, 親会社利益 &gt; 0) |&gt;\n  mutate(\n    売上高利益率 = 親会社利益 / 売上高\n  )\ndf_mean &lt;- df |&gt;\n  group_by(大分類) |&gt;\n  summarise(\n    平均利益率 = round(mean(売上高利益率, na.rm = TRUE),digits = 3),\n  )\ndf_mean |&gt; kable() |&gt; kable_styling(font_size = 30)\n\n\n\n\n大分類\n平均利益率\n\n\n\n\n1\n0.060\n\n\n2\n0.086"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#製造業-vs-非製造業-3",
    "href": "prezemi_2023_08_presen.html#製造業-vs-非製造業-3",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "製造業 vs 非製造業",
    "text": "製造業 vs 非製造業\n\nt.test(df$売上高利益率[df$大分類 == 1], df$売上高利益率[df$大分類 == 2])\n\n\n    Welch Two Sample t-test\n\ndata:  df$売上高利益率[df$大分類 == 1] and df$売上高利益率[df$大分類 == 2]\nt = -19.215, df = 16723, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.02933700 -0.02390572\nsample estimates:\n mean of x  mean of y \n0.05957743 0.08619879"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#比較",
    "href": "prezemi_2023_08_presen.html#比較",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "比較",
    "text": "比較\n大分類1は製造業で，利益率が2，非製造業は0.086であることから，サービス業の方が売上高利益率が高いことがわかる。\nこの差は，\n\n同じ母集団から，偶然の差？\n違う母集団から，当然の差？\n\nt検定してみる。"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#ヒストグラムを重ねてみる",
    "href": "prezemi_2023_08_presen.html#ヒストグラムを重ねてみる",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "ヒストグラムを重ねてみる。",
    "text": "ヒストグラムを重ねてみる。\n\n\nRコード\ndf |&gt;\n  ggplot(aes(x = 売上高利益率,y = ..density.., group = 大分類, fill = 大分類)) +\n  geom_histogram(binwidth = 0.01, alpha = 0.5) + xlim(0,0.5) +\n  labs(title = \"売上高利益率のヒストグラム\", x = \"売上高利益率\", y = \"頻度\") +\n  theme_economist(base_family = \"HiraKakuProN-W3\")"
  },
  {
    "objectID": "prezemi_2023_08_presen.html#平均と分散を計算する関数",
    "href": "prezemi_2023_08_presen.html#平均と分散を計算する関数",
    "title": "プレゼミ2023  第8回 分析をしてみよう",
    "section": "平均と分散を計算する関数",
    "text": "平均と分散を計算する関数\n\nデータの個数は，ベクトルならlength()，データフレームならnrow()\n合計はsum()，sum()を使わないならfor()\nfunction()を使って関数を作る。\n\n\n# 書き方\n\nmyfunc &lt;- function(x){\n  # 何かしらの処理\n  # y = f(x)\n  return(y)\n}"
  }
]