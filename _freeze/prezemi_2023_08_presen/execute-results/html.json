{
  "hash": "b940f9bb42deb3ead65723d6d67e6dc3",
  "result": {
    "markdown": "---\ntitle: |\n  <b>プレゼミ2023</b> </br>\n  <span style=\"color: #282A36; \">第8回 分析をしてみよう</span>\nauthor: \"Soichi Matsuura\"\nformat:\n  revealjs:\n    theme: [\"default\", \"dracula.scss\"]\n    transition: convex\n    slide-number: true\n    chalkboard: true\n    df_print: paged\n# highlight-style: \"dracula\"\nhighlight-style: github\nexecute:\n  echo: true\n  warning: false\n---\n\n\n\n# データを調理する\n\n::: columns\n:::{.column width=\"50%\"}\n\n第8回講義の**到達目標**\n\n- データを読み込むことができる。\n- データを操作し，分析しやすい形にすることができる。\n- 分析をするための関数を作成することができる。\n\n:::\n:::{.column width=\"50%\"}\n\n第7回講義の**到達度検証のための課題**\n\n- 製造業と非製造業で利益率が違うかどうかの検定を行う。\n- 広告宣伝費と売上高の相関関係を分析する。\n- 一番ROEが高い会社を探す。\n\n:::\n:::\n\n## 準備\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-1_3215a934fcd51d08cf6214abeb7bd263'}\n\n```{.r .cell-code}\n# 文字化け防止のおまじない、R 4.1.0以降\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplot2のテーマ\nlibrary(knitr) # 作表\nlibrary(kableExtra) # 作表の拡張\nlibrary(scales)\n# テーマを設定\ntheme_set(theme_few(base_size = 12))\n# 以下、ggplot2のデフォルトを変更\nupdate_geom_defaults(\"point\", list(size = 3))\n```\n:::\n\n\n\n## データの読み込み\n\n作業ディレクトリを確認・設定する。\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-2_4e297f0bd547c9176dcfff800c4a7ebd'}\n\n```{.r .cell-code}\ngetwd()\nsetwd(\"hoge\")\n```\n:::\n\n\n\n## データの読み込み\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-3_c6b8b1624646ffbe5d312560fce40cb1'}\n\n```{.r .cell-code}\ndf <- read_csv(\"https://so-ichi.com/presemi08_2018.csv\")\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 21,427\nColumns: 30\n$ 日経会社コード                 <chr> \"0000191\", \"0000191\", \"0000191\", \"00001…\n$ 企業名称                       <chr> \"ニップン\", \"ニップン\", \"ニップン\", \"ニ…\n$ 決算種別                       <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,…\n$ 連結基準                       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 決算月数                       <dbl> 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,…\n$ 上場コード                     <dbl> 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,…\n$ 連結子会社数                   <dbl> 47, 47, 48, 49, 45, 42, 47, 48, 72, 73,…\n$ 流動資産                       <dbl> 105143, 118330, 114534, 117693, 130768,…\n$ 資産合計                       <dbl> 272166, 293392, 290428, 307813, 325869,…\n$ 流動負債                       <dbl> 77675, 76100, 74078, 69544, 74842, 7861…\n$ 負債合計                       <dbl> 115261, 138405, 131847, 138749, 147171,…\n$ 純資産                         <dbl> 156905, 154986, 158581, 169063, 178697,…\n$ 売上高                         <dbl> 323495, 335399, 344839, 288324, 321317,…\n$ 売上原価                       <dbl> 234823, 243017, 247264, 218660, 246390,…\n$ 販管費                         <dbl> 78611, 81159, 86473, 59293, 63644, 6778…\n$ 親会社利益                     <dbl> 7651, 8455, 8941, 8636, 9327, 10260, 21…\n$ 税金等調整前当期純利益         <dbl> 11486, 12305, 13386, 13049, 13568, 1471…\n$ 営業活動によるキャッシュフロー <dbl> 15217, 17063, 15532, 14804, 11975, 1505…\n$ 投資活動によるキャッシュフロー <dbl> -11941, -14614, -14130, -12585, -10103,…\n$ 財務活動によるキャッシュフロー <dbl> 2824, 7135, -759, 2553, -4278, -8402, -…\n$ 現金及び現金同等物の期末残高   <dbl> 20556, 30085, 31012, 35320, 31215, 3315…\n$ 広告宣伝費                     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ 従業員数                       <dbl> 19571, 19943, 20700, 20960, 22263, 2293…\n$ 期末従業員数                   <dbl> 3696, 3687, 3737, 3880, 3775, 3848, 654…\n$ 発行済株式数                   <dbl> 82524009, 78824009, 78824009, 78824009,…\n$ 年度                           <dbl> 2018, 2019, 2020, 2021, 2022, 2023, 201…\n$ 決算月                         <chr> \"03\", \"03\", \"03\", \"03\", \"03\", \"03\", \"03…\n$ 大分類                         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 中分類                         <chr> \"食品\", \"食品\", \"食品\", \"食品\", \"食品\",…\n$ 小分類                         <chr> \"003\", \"003\", \"003\", \"003\", \"003\", \"003…\n```\n:::\n:::\n\n\n\n## 自作関数を作ってみる。\n\n関数を作るには，`function()`を使う。\n例えば，変数`y`と`x`を足す，という関数を作るとする。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-4_c818f7cda9c20714752e07d20c77681d'}\n\n```{.r .cell-code}\nadd <- function(y, x){\n  y + x\n}\n\nadd(1,4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n## 平均と分散を計算する関数\n\n- データの個数は，ベクトルなら`length()`，データフレームなら`nrow()`\n- 合計は`sum()`，`sum()`を使わないなら`for()`\n- `function()`を使って関数を作る。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-5_91c8f84b60a1f080b039b5d29e7daaf5'}\n\n```{.r .cell-code}\n# 書き方\n\nmyfunc <- function(x){\n  # 何かしらの処理\n  # y = f(x)\n  return(y)\n}\n```\n:::\n\n\n## 合計を計算\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-6_287fa3f0b93bd89bb5226959fc6feb0f'}\n\n```{.r .cell-code}\nx <- c(1:10) # 1〜10までの整数\nsum(x) # 合計\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 55\n```\n:::\n:::\n\n\n`for`ループを使うなら，\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-7_7caf530835781ea9d59a4ddfadff448c'}\n\n```{.r .cell-code}\ns <- 0 # 初期値\nfor(i in 1:length(x)){ # ループ\n    s <- s + x[i] # 合計\n  }\nprint(s) # 結果\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 55\n```\n:::\n:::\n\n\n## 平均を計算\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-8_ae77f5ee9590ca591ddba39133f882ed'}\n\n```{.r .cell-code}\ns <- 0 # 初期値\nfor(i in 1:length(x)){ # ループ\n    s <- s + x[i] # 合計\n  }\nsumx <- s / length(x)\nprint(sumx)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.5\n```\n:::\n:::\n\n\n基本関数`mean()`を使えば，\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-9_43fb27d438189e1c29fe45cc5bb6526b'}\n\n```{.r .cell-code}\nmean(x) # 一撃\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.5\n```\n:::\n:::\n\n\n## 自作関数を作ってみる。\n\n関数を使うには，`関数名(引数)`とする。引数は複数でも良い。\nある産業のある項目の平均，分散，標準偏差を求める関数を作る。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-10_688d16c17249f399564f4e870e9681f7'}\n\n```{.r .cell-code}\nmystat <- function(chu, item) {\n  df |>\n    filter(中分類 == chu) |>\n    summarise(\n      平均 = mean(!!sym(item), na.rm = TRUE),\n      分散 = var(!!sym(item), na.rm = TRUE),\n      標準偏差 = sd(!!sym(item), na.rm = TRUE)\n    ) |>\n    kable() |> kable_styling(font_size = 30)\n}\n```\n:::\n\n\n## 自作関数を使う。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-11_8a76a9b6a1df1160bfa87a64e90cb7cc'}\n\n```{.r .cell-code}\nmystat(\"精密機器\", \"売上高\") # \"\"で囲まないとエラー\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 30px; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> 平均 </th>\n   <th style=\"text-align:right;\"> 分散 </th>\n   <th style=\"text-align:right;\"> 標準偏差 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 136743 </td>\n   <td style=\"text-align:right;\"> 54112659167 </td>\n   <td style=\"text-align:right;\"> 232621.3 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## 折れ線グラフを作る関数\n\n特定企業の，特定項目のデータから折れ線グラフを作る関数`myline()`を作る。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-12_74ebea707a4df2af5978389e06bc3322'}\n\n```{.r .cell-code}\nmyline <- function(name, item) {\n  df |>\n    filter(企業名称 == name) |>\n    select(年度, !!sym(item)) |>\n    ggplot(aes(x = 年度, y = !!sym(item), group = 1)) +\n    geom_line() + geom_point() +\n    labs(title = paste(name, item, sep = \" \"), x = \"年度\", y = item) +\n    scale_y_continuous(labels = label_number(scale = 1/100, suffix = '億')) + # 単位\n    theme_economist(base_family = \"HiraKakuProN-W3\") +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))\n}\n```\n:::\n\n\n\n## 折れ線グラフを作る関数\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-13_a772ad5e7470d4d6812780d509fced88'}\n\n```{.r .cell-code}\nmyline(\"トヨタ自動車\", \"売上高\")\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_08_presen_files/figure-revealjs/unnamed-chunk-13-1.png){width=1344}\n:::\n:::\n\n\n## 日産も作ってみる。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-14_1a6344cbe7417f5d54cfc9121d5c131b'}\n\n```{.r .cell-code}\nmyline(\"日産自動車\", \"売上高\")\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_08_presen_files/figure-revealjs/unnamed-chunk-14-1.png){width=1344}\n:::\n:::\n\n\n## 並べてみる\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-15_cee020c7e400885802cfd9d3952102ea'}\n\n```{.r .cell-code}\ng1 <- myline(\"トヨタ自動車\", \"売上高\")\ng2 <- myline(\"日産自動車\", \"売上高\")\nlibrary(patchwork)\ng1/g2\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_08_presen_files/figure-revealjs/unnamed-chunk-15-1.png){width=1344}\n:::\n:::\n\n\n## ヒストグラムを作る関数\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-16_000dafc7e8984b56816dab919158f31c'}\n\n```{.r .cell-code}\nmyhist <- function(df, chu, item) {\n  df |>\n    filter(中分類 == chu) |>\n    ggplot(aes(x = !!sym(item))) +\n    geom_histogram(bins = 20) +\n    labs(title = paste(chu, item, sep = \" \"), x = item, y = \"頻度\") +\n    theme_economist(base_family = \"HiraKakuProN-W3\")\n}\n```\n:::\n\n\n## ヒストグラムを作る関数\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-17_636662a121e9278d98f5861b63cf0768'}\n\n```{.r .cell-code}\nmyhist(df, \"精密機器\", \"売上高\")\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_08_presen_files/figure-revealjs/unnamed-chunk-17-1.png){width=1344}\n:::\n:::\n\n\n# 検定してみる。\n\n## 製造業 vs 非製造業\n\n製造業と非製造業で売上高利益率が違うかどうかの検定を行う。\nいきなり計算するのではなく，まずはデータを見てみる。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-18_1707cc42bb0ebd3ebf9c5e1d8398a3ec'}\n\n```{.r .cell-code}\nsummary(df$売上高)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n       0     7290    24356   209424    93960 37154298 \n```\n:::\n:::\n\n売上高ゼロはまずいので，あとで除外する。\n\n## 製造業 vs 非製造業\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-19_177a63d10eed47284361ed1f07e33313'}\n\n```{.r .cell-code}\nsummary(df$親会社利益)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-1708029      172      877    10059     3835  4987962 \n```\n:::\n:::\n\n赤字企業も利益率を計算する上で邪魔なので，除外する。\n\n\n\n## 製造業 vs 非製造業\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-20_17cd10253534b4d6800dc1b1ad4fc199'}\n\n```{.r .cell-code}\ndf <- df |>\n  filter(売上高 > 0, 親会社利益 > 0) |>\n  mutate(\n    売上高利益率 = 親会社利益 / 売上高\n  )\ndf_mean <- df |>\n  group_by(大分類) |>\n  summarise(\n    平均利益率 = round(mean(売上高利益率, na.rm = TRUE),digits = 3),\n  )\ndf_mean |> kable() |> kable_styling(font_size = 30)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 30px; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> 大分類 </th>\n   <th style=\"text-align:right;\"> 平均利益率 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0.060 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0.086 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## 比較\n\n大分類`1`は製造業で，利益率が2，非製造業は0.086であることから，サービス業の方が売上高利益率が高いことがわかる。\n\nこの差は，\n\n- 同じ母集団から，偶然の差？\n- 違う母集団から，当然の差？\n\nt検定してみる。\n\n## 製造業 vs 非製造業\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-21_e6e4531ddcb8936551567339254387ec'}\n\n```{.r .cell-code}\nt.test(df$売上高利益率[df$大分類 == 1], df$売上高利益率[df$大分類 == 2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  df$売上高利益率[df$大分類 == 1] and df$売上高利益率[df$大分類 == 2]\nt = -19.215, df = 16723, p-value < 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -0.02933700 -0.02390572\nsample estimates:\n mean of x  mean of y \n0.05957743 0.08619879 \n```\n:::\n:::\n\n\n## ヒストグラムを重ねてみる。\n\n\n::: {.cell hash='prezemi_2023_08_presen_cache/revealjs/unnamed-chunk-22_60e248c0524e5d665794d2b143e3147a'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\ndf |>\n  ggplot(aes(x = 売上高利益率,y = ..density.., group = 大分類, fill = 大分類)) +\n  geom_histogram(binwidth = 0.01, alpha = 0.5) + xlim(0,0.5) +\n  labs(title = \"売上高利益率のヒストグラム\", x = \"売上高利益率\", y = \"頻度\") +\n  theme_economist(base_family = \"HiraKakuProN-W3\")\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_08_presen_files/figure-revealjs/unnamed-chunk-22-1.png){width=1344}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}