{
  "hash": "e3c59ba6a46b13868cea31ed7d269343",
  "result": {
    "markdown": "---\ntitle: |\n  <b>プレゼミ2023</b> </br>\n  <span style=\"color: #282A36; \">第6回 統計的推定</span>\nauthor: \"Soichi Matsuura\"\nformat:\n  revealjs:\n    theme: [\"default\", \"dracula.scss\"]\n    transition: convex\n    slide-number: true\n    chalkboard: true\n    df_print: paged\n# highlight-style: \"dracula\"\nhighlight-style: github\nexecute:\n  echo: true\n  warning: false\n---\n\n\n\n# 統計的推定\n\n::: columns\n:::{.column width=\"50%\"}\n\n第6回講義の**到達目標**\n\n- 母集団と標本の違いを理解する。\n- 不偏推定量と一致推定量を理解し，説明することができる。\n- 信頼区間を理解し，説明することが出来る。\n\n:::\n:::{.column width=\"50%\"}\n\n第6回講義の**到達度検証のための課題**\n\n- 標本を構築し，記述統計量を計算する。\n- シミュレーションを利用して，統計量を作る事が出来る。\n- 信頼区間を計算することができる\n\n:::\n:::\n\n## 用語の意味\n\n::: columns\n:::{.column width=\"50%\"}\n- **母集団**：研究対象となるすべての集合\n- **標本**：母集団から抽出されたデータ\n- **標本サイズ**：標本に含まれるデータの個数\n- **標本数・サンプル数**：標本の数のことで標本サイズのことじゃないよ\n:::\n:::{.column width=\"50%\"}\n\n- **母数**：母集団を特徴付ける値、母平均や母分散など\n- **統計量**：標本を特徴付ける値、標本平均や標本分散など\n- **推定量**：母数の推定に使われる統計量\n- **統計的推定**：推定量から母数を予想すること\n\n:::\n:::\n\n## 準備\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-1_aa060b6be3ab5c493ade215a30c9b232'}\n\n```{.r .cell-code}\n# 文字化け防止のおまじない、R 4.1.0以降\nknitr::opts_chunk$set(dev = \"ragg_png\")\n\nlibrary(tidyverse) # とりあえずこれ\nlibrary(ggthemes) # ggplot2のテーマ\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(gghighlight)\n\n# テーマを設定\ntheme_set(theme_few(base_size = 12))\n# 以下、ggplot2のデフォルトを変更\nupdate_geom_defaults(\"point\", list(size = 3))\n```\n:::\n\n\n\n## 母集団と標本\n\n- **母集団**(population)とは、研究問題(research question)に基づいて選定された対象全体の集まりのこと。\n\n- **標本**(sample)とは、母集団から一部を抜き出したものであり、標本を通じて母集団の特性を推定する。\n\n- 統計学とは、限られた標本から母集団の特性（**母数**または**パラメータ**）をどのように探求するかについて研究する学問\n\n\n<!-- 例えば、作ったお味噌汁全体の味を確かめるには、お味噌汁を全部飲むのではなく、しっかりお味噌汁を鍋の中でかき混ぜてから、スプーン一杯を試飲し、その全体の味を推定する、という作業と同じです。 -->\n\n## 統計的推定・統計量・推定量\n\n- 標本の特徴を調べることで，観察できない母集団の**母数**(parameter)を推定することを，**統計的推定**(statistical estimation)\n- 統計的推定には，標本から計算される**統計量**(statistic)を用いる。\n- 母数の推定のために利用される統計量を**推定量**(estimator)という。\n- **母数は定数**だが、標本が変われば値が変わるので**推定量は確率変数**である。\n\n\n## 数学記号の使い方\n\n母数を推定するために用いられる統計量と一般的な数式記号\n\n| 母数 | 記号 | 統計量 | 記号 |\n|:----:|:----:|:----:|:----:|\n| 母平均 | $\\mu$ | 標本平均 | $\\bar x$ |\n| 母比率 | $\\pi$ | 標本比率 | $p$ |\n| 母分散 | $\\sigma^2$ | 標本分散 | $s^2$ |\n| 母標準偏差 | $\\sigma$ | 標本標準偏差 | $s$ |\n\n## 標本抽出の方法\n\n\n- 母集団から標本を選ぶ標本抽出方法として代表的なものが，**単純無作為抽出**(simple randome sampling)\n- 単純無作為抽出で選ばれた標本は、母集団の偏りのない標本となる。\n- このような標本を**無作為標本**(random sample)といい、この標本から計算される統計量は優れた特徴をもつ。\n\nシミュレーションで確認してみる。\n\n## 標本抽出のシミュレーション準備\n\n平均10，標準偏差1の正規分布に従う確率変数$X \\sim N(10,1)$を考える。\nこの確率変数$X$の実現値100個を標本として抽出し、平均値を計算する。\n`rnorm()`関数は正規分布に従う乱数を発生させる関数であり、引数として\n\n- `n`：発生させる乱数の個数\n- `mean`：平均\n- `sd`：標準偏差\n\nの3つをとる。\n\n## 標本抽出のシミュレーションの実践\n\n`rnorm(100,10,1)`と書いてもよいが、後で変更するかもしれない変数は外で定義しておく。\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-2_a418d18ec5a714bc12fed7d52deae85a'}\n\n```{.r .cell-code}\nn = 100 # 標本サイズ\npmean = 10 # 母平均\npsd = 1 # 母標準偏差\nx <- rnorm(n, pmean, psd) # 標本抽出\nmean(x) # 標本平均\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.15124\n```\n:::\n:::\n\n平均値は10.1512389で、母平均$10$と一致していない。\nこの差を**誤差**といい、母集団と標本のズレを意味する。\n\n\n\n## 標本抽出のシミュレーションの実践\n\n\n::: {.cell output-location='slide' hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-3_ab15f15e59d6e179b2e8ceee2a4021b0'}\n\n```{.r .cell-code}\ntrial = 100 # 標本数\nresult <- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x <- rnorm(n, pmean, psd) # 標本抽出\n  result[i] <- mean(x) # 標本平均\n}\nmean(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.00172\n```\n:::\n\n```{.r .cell-code}\nhist(result) # 基本関数histでヒストグラム作成\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-3-1.png){width=1344}\n:::\n:::\n\n\n## 標本抽出のシミュレーションの実践\n\n標本サイズ$n$を増やす\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-4_c95d2aaa54155e1c360258310b21ceaa'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\nn = 10000 # 標本サイズ\nresult <- numeric(trial) # 結果を入れる空の変数\nfor (i in 1:trial) { # 以下の処理をtrial回繰り返す\n  x <- rnorm(n, pmean, psd) # 標本抽出\n  result[i] <- mean(x) # 標本平均\n}\nhist(result) # 基本関数histでヒストグラム作成\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-4-1.png){width=1344}\n:::\n:::\n\n\n\n## 大数の法則\n\nキレイな左右対称の釣り鐘型の分布になっている。\nこの標本平均の分布の平均値を計算してみる。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-5_e52c98ed9a5d16a686c7fd6695dbe419'}\n\n```{.r .cell-code}\nmean(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9.999944\n```\n:::\n:::\n\n\nとほぼ10と等しい。\n\nこのように，標本サイズを増やしていくと，標本平均の平均値は母平均に近づく，という法則を**大数の法則**(law of large numbers)\n\n## 標本数が増えると母平均に近づく\n\n本当に標本サイズが増えると標本平均の平均が母平均に近づくのかシミュレーションで確認してみる。\n\n\n::: {.cell output-location='slide' hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-6_fd2aa58be1506da274ff60a57ae21077'}\n\n```{.r .cell-code}\nn = 1000 # 標本サイズ\npmean = 10 # 母平均\npsd = 4 # 母標準偏差\ntrial = 10000 # 標本数\nresult <- numeric(n) # 結果を入れる空の変数\nfor (i in 2:n) { # 以下の処理をtrial回繰り返す\n    x <- rnorm(i, pmean, psd) # 標本抽出\n    result[i] <- mean(x) # 標本平均\n}\nplot(result, type=\"l\") # 基本関数plotで折れ線グラフ作成\nabline(h=pmean, col=\"red\") # 母平均を赤線で表示\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-6-1.png){width=1344}\n:::\n:::\n\n\n\n\n## 標本分布\n\nプレゼミのメンバー25名から5名の標本を抽出する場合でも，\n\n$$\n{}_{25} \\mathrm{C}_5 = \\binom{25}{5} = \\frac{25!}{5!(25-5)!} = 53130\n$$\n\nの組み合わせがある。\n標本から計算した統計量は標本ごとに異なる値となる。\nこのような統計量の分布を**標本分布**(sampling distribution)という。\n\n## 不偏推定量\n\n- 「偏りのない」(unbiased)標本をたくさん集めることができれば，標本分布は母集団の分布に近づく\n- 多くの標本から計算される**統計量の平均**が母数に一致する性質を**不偏性**(unbiasedness)\n- 普遍性をもつ推定量を**不偏推定量**(unbiased estimator)という\n\n不偏推定量を計算することが非常に重要\n\n## 例題\n\n5個のデータ(2,4,6,7,9)から3つ取り出して標本を作成する場合の組み合わせ\n$$\n{}_{5} \\mathrm{C}_3 = \\binom{5}{3} = \\frac{5!}{3!(5-3)!} = 10\n$$\n\n\nこの10個の標本から計算される標本分散と標本平均を計算する。\n定義は次のとおりである。\n\n$$\n\\begin{aligned}\n\\text{標本平均} &= \\frac 1n \\sum_{i=1}^n x_i & \\text{標本分散} &= \\frac 1n \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n\\end{aligned}\n$$\n\n## 例題\n\n標本平均と標本分散を計算する関数を作る。\n自作関数を作るには，`function()`関数を使う。\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-7_1e352db164cfa0093e4f232e24cc0294'}\n\n```{.r .cell-code}\nmeanp <- function(x){\n  sum(x) / length(x) # 合計をデータの個数で割る\n}\nvarp <- function(x){\n  sum((x - meanp(x))^2) / length(x) # 分散の計算式\n}\n```\n:::\n\n実務的には分母が0になるケースを考慮する必要があるが省略\n\n## 例題\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-8_adfd976be1fe91f2b6a5164f2a5c007c'}\n\n```{.r .cell-code}\nx <- c(2,4,6,7,9) # 母集団とする。\nmeanp(x) # 母平均\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.6\n```\n:::\n\n```{.r .cell-code}\nres <- combn(x,3) # 3つのデータを取り出す組み合わせ\nprint(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10]\n[1,]    2    2    2    2    2    2    4    4    4     6\n[2,]    4    4    4    6    6    7    6    6    7     7\n[3,]    6    7    9    7    9    9    7    9    9     9\n```\n:::\n:::\n\n\n5個のデータから3つのデータを取り出して標本を作り，それぞれの標本から標本平均と標本分散を計算\n\n## 例題\n\n自作の`meanp()`関数を`apply`関数で適用して10の標本平均を作り，`sample_mean`という変数に代入し，その平均を計算する。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-9_884a61e379245d039c2f69857603e5b9'}\n\n```{.r .cell-code}\nsample_mean <- apply(res, 2, meanp) # apply関数でmeanp関数をresに適用\nmeanp(sample_mean) # 標本平均の平均は5.6\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.6\n```\n:::\n:::\n\n\n標本平均の平均5.6が母平均5.6に一致したので，標本平均は不偏推定量である。\n\n\n## 例題\n\n次に分散を計算してみましょう。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-10_b2573720e43d01f6c4776efa1556e5dc'}\n\n```{.r .cell-code}\nvarp(x) # 母分散 5.84\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.84\n```\n:::\n\n```{.r .cell-code}\nsample_var <- apply(res, 2, varp)\nmeanp(sample_var) #\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.866667\n```\n:::\n:::\n\n標本分散の平均4.8666667は母分散5.84より小さな値になった。つまり**標本分散は不偏推定量**ではない，ということ。\n\n## 例題\n\n- **自由度**という概念が関係\n- 自由度とは，**標本から計算される統計量の値を決めるのに使える情報の数**のこと\n- 標本分散ではなく標本不偏分散を計算する。違いは，分母が$n$ではなく$n-1$になっていること。\n$$\n\\text{標本不偏分散} = \\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2\n$$\n\n## 例題\n\nRの基本関数である`var()`は標本分散ではなく**標本不偏分散を計算**する。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-11_11d7d819140f161af63e9c2a731550a7'}\n\n```{.r .cell-code}\nvar(x) # 母分散 5.84\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7.3\n```\n:::\n\n```{.r .cell-code}\nres <- combn(x,3) # 3つのデータを取り出す組み合わせ\nsample_var <- apply(res, 2, var)\nmeanp(sample_var) # 標本平均の平均は5.6\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7.3\n```\n:::\n:::\n\n\n母分散と標本不偏分散の平均は一致した。\nつまり母数である母分散を推定するためには，標本不偏分散を使う必要がある。\n\n## 一致推定量\n\n標本数が増えると，標本分布は母集団の分布に近づく，という特徴をもつ推定量を**一致推定量**(consistent estimator)という。\n\n例えば，関心のある母集団が\n\n- 母平均$\\mu = 62$\n- 母分散$\\sigma^2 = 25$\n\nという母数をもつ正規分布に従っているとする。\n\n## 作図\n\n正規分布の作図\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-12_964610dd2ebd26860d419545a0009914'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\np <- ggplot(data = data.frame(X = c(47,77))) # データの作成\np <- p + aes(x = X)\np <- p + stat_function(\n  fun = dnorm,\n  args = list(mean = 62, sd = 5)\n  )\nprint(p)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-12-1.png){width=1344}\n:::\n:::\n\n母集団から標本サイズ10の標本を取り出し，標本平均を計算する，という試行を1000回繰り返し，1000個の標本平均を作る。\n\n## 標本平均を計算\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-13_54a4ac560b3f835bb249bea19f73cabc'}\n\n```{.r .cell-code}\nn = 10 # 標本サイズ\ntrial = 1000 # 試行回数\nresult <- numeric(trial) # 結果を入れる空の箱\nfor (i in 1:trial) { # 以下をtrial回繰り返す\n  x <- rnorm(n, 62, 5) # 標本を生成\n  result[i] <- mean(x) # 標本平均を計算\n}\nmean(result) # 標本平均の平均\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 61.99138\n```\n:::\n:::\n\n\nヒストグラムの中心が母平均の62に近づいていることが分かります。\n標本平均の平均は61.9913766となりますが，これは母平均62に近い値になっています。\n\n## グラフ\n\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-14_829ed237d1872c3fea4d5fd34787fb70'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\nresult <- as.tibble(result)\ng <- ggplot(result) + aes(value) # 軸の設定\ng <- g + geom_histogram( # ヒストグラム\n  aes(y = ..density..), bins = 60, # y軸を密度に\n  fill = \"white\", color = \"black\") # ヒストグラムの色\ng <- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))　# 母集団の分布\ng <- g + geom_vline(xintercept = 62, color = \"red\") # 母平均の縦線\ng <- g + xlim(47,77) # x軸の範囲を指定\nprint(g)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-14-1.png){width=1344}\n:::\n:::\n\n\n母平均と標本平均の中心がほぼ一致している。\n母分散と比べて標本分散が非常に小さい。\n\n## シミュレーション\n\n標本サイズを先ほどの100倍の1000として，同じ試行を1000回繰り返す。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-15_5917241afc50dadcf3dae042f05da179'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\nn = 100 # 標本サイズ\ntrial = 1000 # 試行回数\nresult <- numeric(trial)\nfor (i in 1:trial) {\n  x <- rnorm(n, 62, 5)\n  result[i] <- mean(x)\n}\nresult <- as.tibble(result)\ng <- ggplot(result) + aes(value) + geom_histogram(aes(y=..density..), bins=60, fill=\"white\", color=\"black\")\ng <- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))\ng <- g + xlim(47,77) + geom_vline(xintercept = 62, color=\"red\")\nprint(g)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-15-1.png){width=1344}\n:::\n:::\n\n\n## シミュレーション\n\nどんどん標本サイズを増やして，100000として，同じ試行を1000回繰り返してみましょう。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-16_1be54a75b8616564009ec69c55999a18'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\nn = 100000 # 標本サイズ\ntrial = 1000 # 試行回数\nresult <- numeric(trial)\nfor (i in 1:trial) {\n  x <- rnorm(n, 62, 5)\n  result[i] <- mean(x)\n}\nresult <- as.tibble(result)\ng <- ggplot(result) + aes(value) + geom_histogram(aes(y=..density..), bins=60, fill=\"white\", color=\"black\")\ng <- g + stat_function(fun=dnorm, args=list(mean = 62, sd = 5))\ng <- g + xlim(47,77) + geom_vline(xintercept = 62, color=\"red\")\nprint(g)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-16-1.png){width=1344}\n:::\n:::\n\n\n\n## 一致推定量\n\n標本平均の標準偏差$SD(\\bar x)$は，\n\n$$\nSD(\\bar x) = \\frac{\\sigma}{\\sqrt{n}}\n$$\n\n標本サイズを大きくすると，標本平均が母平均の近くの値をとる確率が大きくなる，という性質を**一致性**(consistency)と呼び，\n一致性をもつ推定量を**一致推定量**(consistent estimator)という。\n\n\n\n\n\n\n\n## 母平均の推定と信頼区間 <!-- 7.3 --->\n\n標本から得た統計量をつかって母数である母平均を予想したいとき，手元にある1つの標本から計算した標本平均は，どの程度の精度をもつのか？\nこれを測る尺度を信頼区間(confidence interval)という。\n\n- 母数である母平均は観察できないが，確率変数ではなく定数\n- この母平均が計算した信頼区間に含まれるか，含まれないか，のどちらか\n- 信頼区間の正しい解釈は，**母集団から標本を取ってきて、その標本平均から95%信頼区間を求める、という作業を100回やったときに、95回はその区間の中に母平均が含まれる**\n\n\n## 標本平均の標準偏差を推定\n\n標本の統計量は分布し，標本平均の標準偏差は，\n\n$$\nSD(\\bar x) = \\frac{\\sigma }{\\sqrt{n}}\n$$\n\nとなる。標本サイズ$n$は既知だが，$\\sigma $は母標準偏差なので未知である。\n$\\sigma$の推定のために，不偏標準偏差\n\n$$\nu = \\sqrt{\\frac{1}{n-1} \\sum_{i=1}^n \\left (x_i - \\bar{x} \\right )^2}\n$$\n\nを計算する。\n\n## 標準誤差\n\n定義した$SD(\\bar x)$の分子$\\sigma$の代わりに推定量$u$を使ったものを**標準誤差**(standard error: SE)と呼ぶ。\n$$\nSE = \\frac{u}{\\sqrt{n}}\n$$\n\nこの標準誤差を標本平均の標準誤差の代わりに利用する。\n\n## t分布\n\n$t$分布(t-distribution)は，母集団が正規分布にしたがうとき，標本平均の分布が従う確率分布です。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-17_53974fdecc41fb9d353f64516d2eee59'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\nx <- seq(-4, 4, length.out = 100)\n\ndf1 <- dt(x, df = 1)\ndf5 <- dt(x, df = 5)\ndf100 <- dt(x, df = 100)\n\n# データフレームに変換\ndf <- data.frame(x = rep(x, 3),\n                 y = c(df1, df5, df100),\n                 freedom = factor(rep(c(\"df = 1\", \"df = 5\", \"df = 100\"), each = length(x)), ordered = TRUE)\n                 )\n# プロット\nggplot(df, aes(x = x, y = y, color = freedom)) +\n  geom_line() +\n  scale_color_manual(values = c(\"red\", \"blue\", \"green\")) +\n  labs(title = \"自由度が異なるt分布のプロット\") + xlab(\"t値\") + ylab(\"確率密度\")\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-17-1.png){width=1344}\n:::\n:::\n\n\n## t分布\n\n標本平均$\\bar x$から母平均を引いて，それを標準誤差$SE$で割った値を**t値**(t-value)という。\n自由度99の$t$分布の場合，95%の確率で$t$値は-1.98から1.98の間に入ります。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-18_d75d60d343fa537aef3384f9e10d49f1'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\n# 自由度を設定\ndf <- 99\n\n# データを生成\ndata <- data.frame(x = seq(-5, 5, by = 0.01))\ndata$y <- dt(data$x, df)\n\n# 90%の領域の上限と下限をqt()で計算\nql <- qt(0.025, df)\nqu <- qt(0.975, df)\n\n# t分布を書く\ng <- ggplot(data) + aes(x=x, y=y) + geom_line()\ng <- g + geom_area(data = data %>% filter(x > ql & x < qu), fill = \"blue\", alpha = 0.3)\ng <- g + xlab(\"t値\") + ylab(\"確率密度\") + labs(title = \"90%の確率で起こるt値の範囲\") + xlim(-3,3)\ng <- g + annotate(geom = \"text\", x = qu, y = 0.12,\n  label = \"1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = qu, xend = qu,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\ng <- g + annotate(geom = \"text\", x = 0, y = 0.15,\n  label = \"95%\", size = 8)\ng <- g + annotate(geom = \"text\", x = ql, y = 0.12,\n  label = \"-1.98\", size = 6) +\n  annotate(# 始点や終点などを指定して矢印を追加\n  geom = \"segment\", x = ql, xend = ql,\n  y = 0.1, yend = 0.07, color = \"black\", size = 0.3,\n  arrow = arrow(length = unit(0.3, \"cm\"))\n  )\nprint(g)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-18-1.png){width=1344}\n:::\n:::\n\n\n## t分布\n\n$t$分布は確率分布ですので，面積は1となります。\n青い領域が95％の確率で$t$値が入る範囲です。\n\n$$\n[ -t _{100-1, 0.025}, \\ t_{100-1, 0.025}]\n$$\n\n$t$分布表を使って，自由度99のときの$t$値を調べると，$t_{100-1, 0.025} = 1.98$となります。\nRだと`qt()`関数を使って計算できます。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-19_9dfe4c784c2f4796e1f7bce513c842dd'}\n\n```{.r .cell-code}\nround(qt(0.025, df = 99),digits =2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1.98\n```\n:::\n\n```{.r .cell-code}\nround(qt(0.975, df = 99),digits =2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.98\n```\n:::\n:::\n\n\n## 信頼区間を求める\n\n標本サイズ$n$の標本から計算される標本平均$\\bar x$から計算される次の$t$値\n$$\nt = \\frac{\\bar x - \\mu}{SE}\n$$\nが自由度$n-1$の$t$分布にしたがうことが知られている。\n\nつまり，標本の95％の$t$値は，$t_{n-1, 0.025}$から$t_{n-1, 0.975}$の間に入る。\nよって，\n\n$$\n-t _{n-1, 0.025} \\leq \\frac{\\bar x - \\mu}{SE} \\leq  t_{n-1, 0.025}\n$$\n両辺に$SE$をかけると，\n$$\n-t _{n-1, 0.025} \\times SE \\leq \\bar{x} - \\mu \\leq  t_{n-1, 0.025}\\times SE\n$$\n\nこの区間を95％信頼区間といいます。\n\n## 信頼区間の解釈\n\n信頼区間とは、観察できない真の値である母数が存在し、その母集団から標本を抽出し、標本平均を計算するということを繰り返したときに、95%の標本平均の信頼区間の中に真の値である母平均が入っている、ということです。\n\n先の例を使って、信頼区間を表現してみます。\n\n- **母集団が平均62，標準偏差5の正規分布にしたがう**とする。\n- この母集団から**標本サイズ50**の標本を**100個抽出**して，標本平均と標本標準偏差を計算する。\n\n\n## 信頼区間の解釈\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-20_9dbd6b119ff383ff8df9216c5a3e00ea'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\ntrial <- 100 # 標本数\nn <- 50 # 標本サイズ\nmu <- 62 # 母平均\nsigma <- 5 # 母標準偏差\n\nset.seed(1234) # 乱数を準備\n\n# 標本ごとの統計量を収納する空のベクトルを作成\nsample_mean <- numeric(trial) # 標本平均の入れ物\nsample_sd   <- numeric(trial) # 標本標準偏差の入れ物\nuplimit     <- numeric(trial) # 信頼区間の上限の入れ物\nlowlimit    <- numeric(trial) # 信頼区間の下限の入れ物\n\n# 標本の数だけ，以下の計算を繰り返す\nfor (i in 1:trial) {\n  temp_sample    <- rnorm(n, mu, sigma) # 標本を抽出\n  sample_mean[i] <- mean(temp_sample) # 標本平均を計算\n  sample_sd[i]   <- sd(temp_sample) # 標本標準偏差を計算\n}\n\n# 信頼区間の計算\np <- .95 # 信頼水準の設定 (95%信頼区間)\nalpha <- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  <- sample_mean + alpha * sample_sd/sqrt(n) # 信頼区間上限\nlowlimit <- sample_mean - alpha * sample_sd/sqrt(n) # 信頼区間下限\n\n# 信頼区間の計算結果をデータフレームにまとめる\nconfidence_interval <- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci <- ggplot(confidence_interval) +\n  aes(x = 標本番号, y = 標本平均)\n  # aes(x = reorder(標本番号, 標本平均), y = 標本平均)\ng_ci <- g_ci + geom_errorbar( # 信頼区間を表す線を描く\n  aes(ymin = 下限, ymax = 上限,\n      color = (下限 <= 62 & 上限 >= 62)\n      ), width = 0.2)\ng_ci <- g_ci + scale_color_manual( # 色の設定\n  values = c(\"magenta\", \"black\"),\n  guide = FALSE)\ng_ci <- g_ci + geom_point(aes(y = 標本平均)) # 標本平均を点で表す\ng_ci <- g_ci + geom_hline(yintercept = 62, color = \"red\") # 母平均を赤い線で表す\ng_ci <- g_ci + xlab(\"標本ID\") + ylab(\"95%信頼区間\") # 軸ラベルの設定\ng_ci <- g_ci + ylim(47,77) + coord_flip()  # 軸の範囲と向きの設定\n\np <- ggplot(data.frame(X = c(47,77))) + aes(x = X) # 母集団を描く範囲\np <- p + stat_function(fun = dnorm, args = list(mean = 62, sd = 5)) # 正規分布を描く\np <- p + geom_vline(xintercept = 62, color=\"red\") 　# 母平均を赤い線で表す\n\nlibrary(patchwork) # グラフを並べるためのパッケージ\np / g_ci # グラフを縦に並べる\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-20-1.png){width=1344}\n:::\n:::\n\n\n## 信頼区間の解釈\n\n本当は未知である母平均62，母標準偏差5の母集団から標本を100個取り出し，100個の標本平均と95%信頼区間を計算し，グラフにしています。\nこの100個の標本から計算した95％信頼区間に母平均62が含まれているかどうかを確認すると，7つの95％信頼区間に母平均が含まれていないことが分かります。$7/100$の割合で信頼区間に母平均が含まれていないので，信頼水準は$1-7/100=0.93$となります。\n\n\n## 信頼区間の解釈\n\n信頼区間を50%にするとどうなるでしょうか？\nこうなります。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-21_28aa7011c357f52010f9020ac7fe8a17'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\n# 信頼区間の計算\np <- .5 # 信頼水準の設定 (95%信頼区間)\nalpha <- qt( (1 - p) / 2, df = n - 1, lower.tail=FALSE) # 限界値の計算\n\n# 信頼区間の上限と下限の計算\nuplimit  <- sample_mean + alpha * sample_sd/sqrt(n)\nlowlimit <- sample_mean - alpha * sample_sd/sqrt(n)\n\n\nconfidence_interval <- data.frame(\n  標本平均 = sample_mean,\n  上限 = uplimit,\n  下限 = lowlimit,\n  標本番号 = 1:trial\n)\n\n# Plot using ggplot2\ng_ci2 <- ggplot(confidence_interval) +\n aes(x = 標本番号, y = 標本平均) +\n  geom_errorbar(aes(ymin = 下限, ymax = 上限,\n                    color = (下限 <= 62 & 上限 >= 62)), width = 0.2) +\n  scale_color_manual(values = c(\"magenta\", \"black\"), guide = FALSE) +\n  geom_point(aes(y = 標本平均)) + ylim(47,77) +\n  geom_hline(yintercept = 62, color = \"red\") + xlab(\"標本ID\") + ylab(\"50%信頼区間\") + coord_flip()\nprint(g_ci2)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-21-1.png){width=1344}\n:::\n:::\n\n信頼区間が短くなり，母平均を含まない50%信頼区間が増えました。\n\n\n## 信頼区間の解釈\n\n標本サイズを大きくすればどうでしょうか。\n<!-- 先ほどまでは標本サイズ50の標本でしたが、標本サイズを500にして、95%信頼区間を計算してみます。 -->\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-22_5e4fe6d752644fde7cfebafc7fda5e26'}\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-22-1.png){width=1344}\n:::\n:::\n\n標本サイズ$n$が大きくなると、信頼区間の上限と下限を計算するさいの$\\sqrt{n}$が大きくなるため、信頼区間が短くなっていることがわかります。\n\n\n## 練習問題\n\n1. サイコロを作ってください。\n2. サイコロを10回降って，出た結果の平均を計算してください。\n3. 2の作業を100回繰り返して，100個の標本平均を計算してください。\n4. 100個の標本平均のヒストグラムを作成してください。\n\n\n## 解答\n\n`replicate()`関数と`sample()`関数を使って標本平均を複数作成し，`mean()`で平均を計算する。\n\n\n::: {.cell hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-23_db5f5a746f24327e4dd4950201b85623'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Rコード\"}\n# 自作関数 simulate_dice_toss\nsimulate_dice_toss <- function(toss = 10, trial = 100) {#引数はnで試行回数\n  # 初期設定\n  dice <- 1:6 # 1〜6の数値をdiceに代入\n\n  # replicateを使用してサイコロを投げ、平均を取得\n  result <- replicate(trial, mean(sample(dice, toss, replace = TRUE)))\n\n  # 結果のヒストグラムをプロット\n  hist(result, breaks = seq(1,6,0.05))\n\n  # サンプル平均と真の平均の垂直線をプロット\n  sample_mean <- mean(result)\n  true_mean <- sum(dice) / length(dice)\n  abline(v = sample_mean, col = \"red\", lwd = 2)\n  abline(v = true_mean, col = \"blue\", lwd = 2)\n\n  # 標本平均の平均と母平均の差を表示（指数表記を避ける）\n  mean_difference <- sample_mean - true_mean\n  cat(\"標本平均の平均と母平均の差は\", format(mean_difference, scientific = FALSE), \"\\n\")\n\n  # 元の出力オプションに戻す\n  options(scipen = 0)\n}\n```\n:::\n\n\n関数を使ってみる。\n\n\n::: {.cell output-location='slide' hash='prezemi_2023_06_presen_cache/revealjs/unnamed-chunk-24_c36cf45ff4b3887ae045ca6c7fd57205'}\n\n```{.r .cell-code}\n# 例として100回の試行で関数を実行\nsimulate_dice_toss(100, 1000)\n```\n\n::: {.cell-output-display}\n![](prezemi_2023_06_presen_files/figure-revealjs/unnamed-chunk-24-1.png){width=1344}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n標本平均の平均と母平均の差は 0.0015 \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}