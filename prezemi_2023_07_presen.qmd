---
title: |
  <b>プレゼミ2023</b> </br>
  <span style="color: #282A36; ">第7回 統計的仮説検定</span>
author: "Soichi Matsuura"
format:
  revealjs:
    theme: ["default", "dracula.scss"]
    transition: convex
    slide-number: true
    chalkboard: true
    df_print: paged
# highlight-style: "dracula"
highlight-style: github
execute:
  echo: true
  warning: false
---


# 統計的仮説検定

::: columns
:::{.column width="50%"}

第7回講義の**到達目標**

- 統計的検定の基礎を理解し，説明することができる。
- 帰無仮説と対立仮説を理解し，説明することができる。
- 第1種の過誤と第2種の過誤を理解し，説明することができる。

:::
:::{.column width="50%"}

第7回講義の**到達度検証のための課題**

- 統計的仮説を立てることができる。
- 第1種の過誤と第2種の過誤を解釈する

:::
:::

# たとえ

## パン屋さんの代替わり

- とあるパン屋さんがある。
- 先代経営者の麦田はじめさんは，半年前に息子にパン屋の経営を譲った。
- 息子の代になってから，先代の頃に比べてパンの重量が減っているという噂が流れた。
- そこで，パンの重量が減っているかどうかを調べることにした。

## パンの重量の調査

- まず，パン屋さんに行って，400gと表記されている食パンを1斤買い，その重量を量ると403gだった。
- それから30日間，食パンを1斤購入して重さを量り，表を作ったところ次のようになった。

```{r}
#| echo: false
library(tidyverse)
library(knitr)
library(kableExtra)
df <- read_csv("data/breads.csv")
kable(df) |> kable_styling(font_size = 22)
```

## パンの重量の調査

- 30日間のパンの重要の平均は，`r round(mean(df$weight), digits = 2)`gだった。
- 30日間購入した30個のパンは表記の400グラムより小さい。
- この事実を持って，**パンの重量が減っている**と主張してもよいのか？

これが統計的仮説検定の考え方です。

## パンの重量の記述統計量

- パンの重量の平均値は`r round(mean(df$weight), digits = 2)`g
- パンの重量の標準偏差は`r round(sd(df$weight), digits = 2)`g

ヒストグラムを描いてみると次のようになる。

```{r}
#| echo: false
par(family= "HiraKakuProN-W3")
hist(df$weight, breaks =5, col = "gray", border = "white", xlab = "パンの重量", main = "パンの重量のヒストグラム")
```

## 仮説検定

- **帰無仮説**：標本の平均値と母集団の平均値との差は誤差の範囲内である。
- **対立仮説**：標本の平均値と母集団の平均値との差は誤差の範囲を超えている。

つまり，どれだけ標本平均が母平均から離れていると，たまたまでた差ではなく，本来異なる母集団であることを意味する。

## 仮説検定：パンのケース

- 帰無仮説：$\mu = 400$，パンの重量は400gである。
- 対立仮説：$\mu \not = 400$, パンの重量は400gではない。

帰無仮説が正しく，母平均が400gであると仮定したとき，標本平均`r round(mean(df$weight), digits = 2)`gが生じる確率はどのくらいか？を考える。


## 準備

```{r}
# 文字化け防止のおまじない、R 4.1.0以降
knitr::opts_chunk$set(dev = "ragg_png")

library(tidyverse) # とりあえずこれ
library(ggthemes) # ggplot2のテーマ
library(knitr)
library(kableExtra)
library(gghighlight)

# テーマを設定
theme_set(theme_few(base_size = 12))
# 以下、ggplot2のデフォルトを変更
update_geom_defaults("point", list(size = 3))
```


## 統計的仮説検定

- **検定**(test)は、母集団の母数(パラメータ)に関する仮説を立てて、その仮説が正しいかどうかを検証する方法
- 統計学は、観察できない未知の母数をもつ母集団から標本を抽出し、標本の特徴をもとに母集団の母数を推定することが目的
- 自分の手元にある標本が母集団の母数を推定するための有効な情報をもっているかどうかを検証することが必要

## 統計的仮説検定の基礎

母集団の母数(母平均とか)を知りたいけれど観察できないので、母集団から標本(sample)を抽出して、標本の特徴をつかって母集団の母数を予想しようとすることを、**統計的推定**(statistical estimation)という。

1. 仮説をたてる
2. 有意水準を設定する
3. 検定統計量を計算する
4. 検定統計量の確率分布を求めて有意水準で棄却域を決める
5. 検定統計量が棄却域に入るかどうかを確認する

## 仮説の立て方：帰無仮説と対立仮説

仮説の立て方は、

- **帰無仮説**(null hypothesis)と
- **対立仮説**(alternative hypothesis)

の2つに分けられる。

本当に示したい仮説(対立仮説)ではなく、その**排反事象である帰無仮説**を立てて、帰無仮説が棄却されることで、対立仮説が採択されるという考え方


## 仮説の立て方の例

- 帰無仮説$H_0$ : 利益反応係数$ERC$はゼロである。　$ERC =0$
- 対立仮説$H_A$ : 利益反応係数$$ERC$はゼロではない。 $ERC \not = 0$

「母数がある特定の値をとる」という帰無仮説を*否定するためには*、その値以外の取りうることを示せばよいだけだが，
対立仮説が$ERC=0$であったなら、これを示すためには、$ERC \not = 0$を示す必要があるが，これは不可能

## 有意水準の設定

どんなときに帰無仮説を棄却するのかを決める。

- **帰無仮説として仮定した母数の値から標本から計算した値が大きく異なる場合**には、**帰無仮説を棄却**する、とする。
- **どのくらい**帰無仮説として仮定した母数の値から離れたら帰無仮説を棄却するのかを決めるのが**有意水準**(significance level)
- 有意水準は、$\alpha$で表され、会計研究では$0.01$、$0.05$、$0.10$が使われることが多い

## 有意水準の例

母集団の平均$\mu$が$0$である、という帰無仮説を考える。

- 対立仮説は母集団の平均$\mu$は$0$ではない，となる。
- 標本サイズ100の標本から計算した標本平均の分布から計算した$t$値が自由度$100-1$の$t$分布にしたがうとき、

$$
t = \frac{\bar{x} - \mu}{s/\sqrt{n}}
$$

となり，今$\bar{x} = \mu$という帰無仮説を仮定しているので、$t = 0$となる。

## 有意水準の計算

```{r}
#| code-fold: true
#| code-summary: "Rコード"

# 自由度を設定
n = 100
df <- n-1

# データを生成
data <- data.frame(x = seq(-5, 5, by = 0.01))
data$y <- dt(data$x, df) # 変数yを作成


# 90%の領域の上限と下限をqt()で計算
ql <- qt(0.025, df)
qu <- qt(0.975, df)

# t分布を書く
g <- ggplot(data) + aes(x = x, y = y) + geom_line()
g <- g + geom_area(data = data %>% filter(x <= ql), fill = "blue", alpha = 0.3) + geom_area(data = data %>% filter(x >= qu), fill = "blue", alpha = 0.3)
g <- g + geom_vline(xintercept = 0, color = "red")
g <- g + xlab("t値") + ylab("確率密度") + labs(title = "90%の確率で起こるt値の範囲")
g <- g + geom_hline(yintercept = 0)
g <- g + annotate(geom = "text", x = 2.4, y = 0.08, label = "α/2", size = 10)
g <- g + annotate(# 始点や終点などを指定して矢印を追加
  geom = "segment", x = 2.4, xend = 2.2,
  y = 0.07, yend = 0.04, color = "black", size = 0.5,
  arrow = arrow(length = unit(0.3, "cm"))
  )
g <- g + annotate(geom = "text", x = -2.4, y = 0.08, label = "α/2", size = 10) +
  annotate(# 始点や終点などを指定して矢印を追加
  geom = "segment", x = -2.4, xend = -2.2,
  y = 0.07, yend = 0.04, color = "black", size = 0.5,
  arrow = arrow(length = unit(0.3, "cm"))
  )
print(g)
```


## 検定統計量の計算 <!-- 8.1.3 --->

標本から平均などの統計量を計算し，その統計量は確率変数なので分布をもつ。

$$
\begin{aligned}
t = \frac{\bar{x} - \mu}{SE} = \displaystyle \frac{\bar{x} - \mu}{\frac{u}{\sqrt{n}}}
\end{aligned}
$$
を検定統計量

## Rでやってみる

- 母平均$62$，母標準偏差$5$の正規分布にしたがう変数$X$を考える。
- 母集団のサイズは10000

```{r}
#| code-fold: true
#| code-summary: "Rコード"
N <- 10000
true_mean <- 62
true_sd <- 5
X <- rnorm(N, true_mean, true_sd) # 母集団
# 作図
ggplot(data.frame(X)) + aes(X) +
  geom_histogram() + ggtitle("母集団") +
  geom_vline(xintercept = true_mean, color = "red")
```


## サンプリング

この母集団から標本サイズ100の標本を100個とりだし、平均を100個計算

```{r}
n <- 100 # 標本サイズ
trial <- 100
sample_mean <- replicate(trial, mean(sample(X,n)))
df_mean <- data.frame(sample_mean)
```

たとえば、ある標本の平均値は`r round(mean(sample(X,n)), digits = 2)`となる。

この平均値がどのように分布しているのかを調べるために、ヒストグラムを作成してみます。

## 標本平均のヒストグラム


```{r}
#| code-fold: true
#| code-summary: "Rコード"
g_mean <- ggplot(df_mean) + aes(x=sample_mean) +
  geom_histogram() + xlab("標本平均") + ylab("度数") +
  geom_vline(xintercept = mean(sample_mean), color = "blue") +
  geom_vline(xintercept = 62, color="red")
print(g_mean)
```

## 標本平均のヒストグラム

```{r}
#| code-fold: true
#| code-summary: "Rコード"
g_m <- ggplot(df_mean) +
    aes(x = reorder(seq_along(sample_mean), sample_mean), y = sample_mean) +
    geom_bar(stat="identity") + geom_hline(yintercept = 62, color = "red") +
   coord_cartesian(ylim = c(60, 64)) +
    ylab("標本平均") + xlab("標本ID") + ggtitle("標本平均の分布")
print(g_m)
```

## 標本平均の平均

- おおよそ母平均$\mu = 62$の周りに分布していることがわかりますが，かなり離れた標本平均をもつ標本もある
- 100個の標本で最小の標本平均となった標本の平均は`r round(min(df_mean$sample_mean), digits = 2)`
- このように母平均62，母標準偏差5の母集団から抽出した1つの標本サイズ100の標本平均が，`r round(min(df_mean$sample_mean), digits = 2)`という値になる確率を知りたい。
- 標本平均から$t$値を計算し，その$t$値が自由度99の$t$分布にしたがう確率を求めることで，この確率を求める

## 標本平均の$t$値

```{r}
t <- (min(df_mean$sample_mean) - 62) / (5 / sqrt(n))
print(t)
```

自由度99の$t$分布の下で，`r print(t)`となる確率は求めると，

```{r}
pt(t, df = n-1)
```

となり，この確率は非常に小さい値となる。

## 例

100個の標本から計算された標本平均は母平均62からかなり離れた値となる。
それぞれの標本平均から計算された$t$値の分布を調べる。

```{r}
#| output-location: slide
df_mean <- df_mean %>%
  mutate(
    t_value = (sample_mean - 62) / (5 / sqrt(n)),
    p_value = pt(t_value, df = n-1)
  )
ggplot(df_mean) +
    aes(x = reorder(seq_along(p_value), p_value), y = p_value) + # グラフの設定
    geom_bar(stat="identity", fill = ifelse(df_mean$p_value < 0.05, "red", "black")) + #
    geom_hline(yintercept = 0.05, color = "red") + # 有意水準0.05
    ylab("p値") + xlab("標本ID") + ggtitle("p値の分布") # 軸の設定
```

<!-- となり，$t$値が生じる確率が5%未満となる標本がいくつかあることがわかった。 -->

## 統計的検定

自分が集めた標本の1つから計算した標本平均、そして$t$値が、帰無仮説が正しいと仮定した場合に、その標本平均がどのくらいの確率で生じるかを調べ、それが5%未満や1%未満であったならば、帰無仮説が正しいと考えるよりも、帰無仮説とは異なる母平均をもつ母集団から標本を集めたから、そのような標本平均が生じたと考えるほうが**もっともらしい**と考える。

これが**統計的仮説検定**の考え方


# 統計的検定の諸問題

## 仮説検定における2種類の「誤り」と検出力

- **第1種の過誤**(type 1 error) : 帰無仮説が正しいのに，帰無仮説を棄却してしまう誤り。
<strong>偽陽性</stron>(False Positive)ともいう。
- **第2種の過誤**(type 2 error) : 帰無仮説が正しくないのに，帰無仮説を棄却しない誤り。
<stron>偽陰性</strong>（False Negative）ともいう。

容疑者が無実なのに容疑者を有罪としてしまう(えん罪)誤りを第1種の過誤といい，容疑者が犯罪者なのに，容疑者を無罪としてしまう誤りを第2種の過誤という。

## 第1種の過誤

- 第1種の過誤(えん罪)を小さくしたい。
- 第1種の過誤の確率を$\alpha $で表し，有意水準の大きさとなる。
- 有意水準5％というのは，ある検定統計量の標本分布の平均から離れた5％の面積に入る統計量を**かけ離れた値**とするかを(研究者が勝手に)決めたもの。
- 両側検定なら，標本平均から離れた左右の2.5％の面積に入る統計量をかけ離れた値とし，ここに計算した統計量が含まれるとき，帰無仮説を棄却

## 第1種の過誤と第2種の過誤

- 第1種の過誤を減らすために有意水準を小さくすると，第2種の過誤が大きくなる。
- えん罪を減らそうとしてほとんどのケースを無罪とすると，犯罪者を逃がすことになる、ということ。
- **帰無仮説が正しいとした場合の正規分布を青色**で，**真の分布を赤色**で示し，有意水準が両側で5％，つまり片側が2.5％となる図を書くと次のようになる。


## 2つの過誤

```{r}
#| code-fold: true
#| code-summary: "Rコード"

# 正規分布の確率密度関数
dnorm_with_mean_sd <- function(x, mean = 0, sd = 1) {
  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))
}

# パラメータの設定
mu1 <- 0   # 帰無仮説の平均
sd1 <- 1   # 帰無仮説の標準偏差
mu2 <- 1.5 # 対立仮説の平均
sd2 <- 1   # 対立仮説の標準偏差
alpha = 0.025

# サンプルデータを生成
x <- seq(-5, 5, by = 0.01)
df <- data.frame(x = x,
                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),
                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))

# ggplotを使って描画
g <- ggplot(df, aes(x = x)) +
  geom_line(aes(y = dnorm1), color = "blue") +
  geom_line(aes(y = dnorm2), color = "red")
g <- g + geom_area(
  data = subset(df, x > qnorm(1-alpha, mu1, sd1)),
            aes(y = dnorm1), fill = "blue", alpha = 0.2)
g <- g + geom_area(
  data = subset(df, x < qnorm(alpha, mu1, sd1)),
  aes(y = dnorm1), fill = "blue", alpha = 0.2)
g <- g + geom_area(
  data = subset(df, x > qnorm(alpha, mu1, sd1) & x < qnorm(1-alpha, mu1, sd1)),
            aes(y = dnorm2), fill = "red", alpha = 0.2) +
  theme_minimal() +
  labs(x = "Value", y = "Density",
       title = "両側検定における第1種の過誤と第2種の過誤")
g <- g + geom_vline(xintercept = qnorm(1-alpha), linetype="dotted")
g <- g + geom_vline(xintercept = mu1, color = "darkblue")
g <- g + geom_vline(xintercept = mu2, color = "darkred")

g <- g + annotate("text", x = mu1 + 2.5, y = max(df$dnorm1) / 6,
           label = "第1種の過誤", color = "darkblue", family = "HiraKakuProN-W3") +
  annotate("text", x = mu2 - 0.5, y = max(df$dnorm2) / 6,
           label = "第2種の過誤", color = "darkred", family = "HiraKakuProN-W3")

g <- g + annotate("text", x = mu1 - 2, y = max(df$dnorm1)-0.1,
                  label = "帰無仮説下の分布", color = "blue", family = "HiraKakuProN-W3" ) +
  annotate("text", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,
           label = "真の分布", color = "red", family = "HiraKakuProN-W3")
print(g)
```

## 有意水準を小さくする

帰無仮説が正しいときに帰無仮説を棄却する確率である第1種の過誤$\alpha$を小さくする。

```{r}
#| code-fold: true
#| code-summary: "Rコード"


alpha = 0.005

# サンプルデータを生成
x <- seq(-5, 5, by = 0.01)
df <- data.frame(x = x,
                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),
                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))

# ggplotを使って描画
g <- ggplot(df, aes(x = x)) +
  geom_line(aes(y = dnorm1), color = "blue") +
  geom_line(aes(y = dnorm2), color = "red")
g <- g + geom_area(
  data = subset(df, x > qnorm(1-alpha, mu1, sd1)),
            aes(y = dnorm1), fill = "blue", alpha = 0.2)
g <- g + geom_area(
  data = subset(df, x < qnorm(alpha, mu1, sd1)),
  aes(y = dnorm1), fill = "blue", alpha = 0.2)
g <- g + geom_area(
  data = subset(df, x > qnorm(alpha, mu1, sd1) & x < qnorm(1-alpha, mu1, sd1)),
            aes(y = dnorm2), fill = "red", alpha = 0.2) +
  theme_minimal() +
  labs(x = "Value", y = "Density",
       title = "両側検定における第1種の過誤と第2種の過誤")
g <- g + geom_vline(xintercept = qnorm(1-alpha), linetype="dotted")
g <- g + geom_vline(xintercept = mu1, color = "darkblue")
g <- g + geom_vline(xintercept = mu2, color = "darkred")

g <- g + annotate("text", x = mu1 + 2.5, y = max(df$dnorm1) / 6,
           label = "第1種の過誤", color = "darkblue", family = "HiraKakuProN-W3") +
  annotate("text", x = mu2 - 0.5, y = max(df$dnorm2) / 6,
           label = "第2種の過誤", color = "darkred", family = "HiraKakuProN-W3")

g <- g + annotate("text", x = mu1 - 2, y = max(df$dnorm1)-0.1,
                  label = "帰無仮説下の分布", color = "blue", family = "HiraKakuProN-W3" ) +
  annotate("text", x = mu2 + 1.5, y = max(df$dnorm2) - 0.1,
           label = "真の分布", color = "red", family = "HiraKakuProN-W3")
print(g)
```

## 片側検定の場合


```{r}
#| code-fold: true
#| code-summary: "Rコード"

# 正規分布の確率密度関数
dnorm_with_mean_sd <- function(x, mean = 0, sd = 1) {
  sqrt(1/(2*pi*sd^2))*exp(-((x - mean)^2)/(2*sd^2))
}

# パラメータの設定
mu1 <- 0   # 帰無仮説の平均
sd1 <- 1   # 帰無仮説の標準偏差
mu2 <- 1 # 対立仮説の平均
sd2 <- 1   # 対立仮説の標準偏差

# サンプルデータを生成
x <- seq(-5, 5, by = 0.01)
df <- data.frame(x = x,
                 dnorm1 = dnorm_with_mean_sd(x, mean = mu1, sd = sd1),
                 dnorm2 = dnorm_with_mean_sd(x, mean = mu2, sd = sd2))

# ggplotを使って描画
g <- ggplot(df, aes(x = x)) +
  geom_line(aes(y = dnorm1), color = "blue") +
  geom_line(aes(y = dnorm2), color = "red") +
  geom_area(data = subset(df, x < qnorm(0.05, mean = mu1, sd = sd1)),
            aes(y = dnorm1), fill = "blue", alpha = 0.2) +
  geom_area(data = subset(df, x > qnorm(0.05, mean = mu1, sd = sd1)),
            aes(y = dnorm2), fill = "red", alpha = 0.2) +
  theme_minimal() +
  labs(x = "Value", y = "Density",
       title = "Visualization of Type I and Type II Errors") +
  annotate("text", x = mu1 - 2.5, y = max(df$dnorm1) / 3,
           label = "Type I Error", color = "blue") +
  annotate("text", x = mu2 + 2.5, y = max(df$dnorm2) / 3,
           label = "Type II Error", color = "red")
g <- g + geom_vline(xintercept = mu1, color = "darkblue")
g <- g + geom_vline(xintercept = mu2, color = "darkred")
print(g)

```
